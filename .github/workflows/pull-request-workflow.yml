name: Pull Request Workflow

env:
  CONFIGNAME: "devsample"
  STAGE: PRPIPELINE${{github.event.pull_request.number}}
  DOMAIN_PREFIX: deatestenv${{github.event.pull_request.number}}

on:
  pull_request:
    branches:
      - "develop"
      - "main"
    types:
      - opened
      - reopened
      - synchronize

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout
jobs:
  verify:
    env:
      CONFIGNAME: "devsample"
      STAGE: RUN${{github.run_number}}verify
      DOMAIN_PREFIX: deatestenv${{github.run_number}}verify
    environment: dea-test
    defaults:
      run:
        shell: bash
        working-directory: ./source
    name: Scan
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Viperlight Scan
        run: node common/scripts/install-run-rush.js viperlight-scan
      - name: Install
        uses: ./.github/actions/baseAction
      - name: pnpm audit
        run: |
          cd common/config/rush
          pnpm audit --audit-level high
      - name: license check
        run: |
          node common/scripts/install-run-rush.js license-checker
      - name: Secrets Scan
        run: |
          node common/scripts/install-run-rush.js git-secrets-scan
      - name: Rush Build
        run: |
          node common/scripts/install-run-rush.js build
      - name: Rush Lint
        run: |
          node common/scripts/install-run-rush.js lint
      - name: cdk synth
        run: |
          cd dea-main
          npm run cdk synth
          cd ..
      - name: cfn_nag
        uses: stelligent/cfn_nag@master
        with:
          input_path: source/dea-main/cdk.out/${{env.STAGE}}-DeaMainStack.template.json
          output_path: source/dea-main/cfn_nag.out
      - name: cfn_nag warning check
        run: |
          echo 'For failures see the output from the cfn_nag step above'
          grep -E '^(Failures|Warnings)' dea-main/cfn_nag.out
          exit `grep -E '^(Failures|Warnings)' dea-main/cfn_nag.out | awk '{ SUM += $3} END { print SUM }'`
  Deploy:
    environment: dea-test
    defaults:
      run:
        shell: bash
        working-directory: ./source
    name: deploy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install
        uses: ./.github/actions/baseAction
      - name: Rush Build
        run: |
          node common/scripts/install-run-rush.js build
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: GITHUBACTIONSESSION
          aws-region: ${{ secrets.AWS_REGION }}
      - name: cdk deploy
        run: |
          cd dea-main
          npm run cdk deploy -- --all
  E2E:
    needs: Deploy
    environment: dea-test
    defaults:
      run:
        shell: bash
        working-directory: ./source
    name: E2E
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install
        uses: ./.github/actions/baseAction
      - name: Rush Build
        run: |
          node common/scripts/install-run-rush.js build
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: GITHUBACTIONSESSION
          aws-region: ${{ secrets.AWS_REGION }}
      - name: set env
        run: |
          echo "DEA_API_URL=$(aws cloudformation list-exports --region us-east-1 --query """Exports[?Name == '${STAGE}-deaApiUrl'].Value | [0]""" | sed -e 's/^"//' -e 's/"$//')" >> $GITHUB_ENV
          echo "IDENTITY_POOL_ID=$(aws cloudformation list-exports --region us-east-1 --query """Exports[?Name == '${STAGE}-identityPoolId'].Value | [0]""" | sed -e 's/^"//' -e 's/"$//')" >> $GITHUB_ENV
          echo "USER_POOL_ID=$(aws cloudformation list-exports --region us-east-1 --query """Exports[?Name == '${STAGE}-userPoolId'].Value | [0]""" | sed -e 's/^"//' -e 's/"$//')" >> $GITHUB_ENV
          echo "USER_POOL_CLIENT_ID=$(aws cloudformation list-exports --region us-east-1 --query """Exports[?Name == '${STAGE}-userPoolClientId'].Value | [0]""" | sed -e 's/^"//' -e 's/"$//')" >> $GITHUB_ENV
          echo "DATASETS_BUCKET_NAME=$(aws cloudformation list-exports --region us-east-1 --query """Exports[?Name == '${STAGE}-DeaS3Datasets'].Value | [0]""" | sed -e 's/^"//' -e 's/"$//')" >> $GITHUB_ENV
          echo "export DATASYNC_ROLE=$(aws cloudformation list-exports --region $REGION $profile_string --query """Exports[?Name == '${STACKPREFIX}-DataSyncPermissionsRole'].Value | [0]""" | sed -e 's/^"//' -e 's/"$//')" >> $GITHUB_ENV
      - name: Rush Test
        run: |
          node common/scripts/install-run-rush.js e2e:only --verbose
  ACL:
    needs: Deploy
    environment: dea-test
    defaults:
      run:
        shell: bash
        working-directory: ./source
    name: ACL Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install
        uses: ./.github/actions/baseAction
      - name: Rush Build
        run: |
          node common/scripts/install-run-rush.js build
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: GITHUBACTIONSESSION
          aws-region: ${{ secrets.AWS_REGION }}
      - name: set env
        run: |
          echo "DEA_API_URL=$(aws cloudformation list-exports --region us-east-1 --query """Exports[?Name == '${STAGE}-deaApiUrl'].Value | [0]""" | sed -e 's/^"//' -e 's/"$//')" >> $GITHUB_ENV
          echo "IDENTITY_POOL_ID=$(aws cloudformation list-exports --region us-east-1 --query """Exports[?Name == '${STAGE}-identityPoolId'].Value | [0]""" | sed -e 's/^"//' -e 's/"$//')" >> $GITHUB_ENV
          echo "USER_POOL_ID=$(aws cloudformation list-exports --region us-east-1 --query """Exports[?Name == '${STAGE}-userPoolId'].Value | [0]""" | sed -e 's/^"//' -e 's/"$//')" >> $GITHUB_ENV
          echo "USER_POOL_CLIENT_ID=$(aws cloudformation list-exports --region us-east-1 --query """Exports[?Name == '${STAGE}-userPoolClientId'].Value | [0]""" | sed -e 's/^"//' -e 's/"$//')" >> $GITHUB_ENV
          echo "DATASETS_BUCKET_NAME=$(aws cloudformation list-exports --region us-east-1 --query """Exports[?Name == '${STAGE}-DeaS3Datasets'].Value | [0]""" | sed -e 's/^"//' -e 's/"$//')" >> $GITHUB_ENV
          echo "export DATASYNC_ROLE=$(aws cloudformation list-exports --region $REGION $profile_string --query """Exports[?Name == '${STACKPREFIX}-DataSyncPermissionsRole'].Value | [0]""" | sed -e 's/^"//' -e 's/"$//')" >> $GITHUB_ENV
      - name: Rush Test
        run: |
          cd dea-app
          node ../common/scripts/install-run-rushx.js acl:only --verbose
  Test:
    needs: Deploy
    environment: dea-test
    defaults:
      run:
        shell: bash
        working-directory: ./source
    name: Unit & Integ Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install
        uses: ./.github/actions/baseAction
      - name: Rush Build
        run: |
          node common/scripts/install-run-rush.js build
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: GITHUBACTIONSESSION
          aws-region: ${{ secrets.AWS_REGION }}
      - name: set env
        run: |
          echo "DEA_API_URL=$(aws cloudformation list-exports --region us-east-1 --query """Exports[?Name == '${STAGE}-deaApiUrl'].Value | [0]""" | sed -e 's/^"//' -e 's/"$//')" >> $GITHUB_ENV
          echo "IDENTITY_POOL_ID=$(aws cloudformation list-exports --region us-east-1 --query """Exports[?Name == '${STAGE}-identityPoolId'].Value | [0]""" | sed -e 's/^"//' -e 's/"$//')" >> $GITHUB_ENV
          echo "USER_POOL_ID=$(aws cloudformation list-exports --region us-east-1 --query """Exports[?Name == '${STAGE}-userPoolId'].Value | [0]""" | sed -e 's/^"//' -e 's/"$//')" >> $GITHUB_ENV
          echo "USER_POOL_CLIENT_ID=$(aws cloudformation list-exports --region us-east-1 --query """Exports[?Name == '${STAGE}-userPoolClientId'].Value | [0]""" | sed -e 's/^"//' -e 's/"$//')" >> $GITHUB_ENV
          echo "DATASETS_BUCKET_NAME=$(aws cloudformation list-exports --region us-east-1 --query """Exports[?Name == '${STAGE}-DeaS3Datasets'].Value | [0]""" | sed -e 's/^"//' -e 's/"$//')" >> $GITHUB_ENV
          echo "export DATASYNC_ROLE=$(aws cloudformation list-exports --region $REGION $profile_string --query """Exports[?Name == '${STACKPREFIX}-DataSyncPermissionsRole'].Value | [0]""" | sed -e 's/^"//' -e 's/"$//')" >> $GITHUB_ENV
          echo "export DATASYNC_REPORTS_ROLE=$(aws cloudformation list-exports --region $REGION $profile_string --query """Exports[?Name == '${STACKPREFIX}-DeaDataSyncReportsRole'].Value | [0]""" | sed -e 's/^"//' -e 's/"$//')" >> $GITHUB_ENV
          echo "export DATASYNC_REPORTS_BUCKET_NAME=$(aws cloudformation list-exports --region $REGION $profile_string --query """Exports[?Name == '${STACKPREFIX}-DeaDataSyncReportsBucketName'].Value | [0]""" | sed -e 's/^"//' -e 's/"$//')" >> $GITHUB_ENV
      - name: Rush Test
        run: |
          node common/scripts/install-run-rush.js test:noe2e --verbose
  Audit-Test:
    needs: Deploy
    environment: dea-test
    defaults:
      run:
        shell: bash
        working-directory: ./source
    name: Audit E2E
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install
        uses: ./.github/actions/baseAction
      - name: Rush Build
        run: |
          node common/scripts/install-run-rush.js build
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: GITHUBACTIONSESSION
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Rush Test
        run: |
          node common/scripts/install-run-rush.js audit:only --verbose
  Mass-Data-Ingestion-Test:
    needs: Deploy
    environment: dea-test
    defaults:
      run:
        shell: bash
        working-directory: ./source
    name: Mass Data Ingestion E2E
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install
        uses: ./.github/actions/baseAction
      - name: Rush Build
        run: |
          node common/scripts/install-run-rush.js build
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: GITHUBACTIONSESSION
          aws-region: ${{ secrets.AWS_REGION }}
      - name: Rush Test
        run: |
          node common/scripts/install-run-rush.js mdi:only --verbose
  destroy:
    needs: [Test, E2E, Audit-Test, Mass-Data-Ingestion-Test, ACL]
    environment: dea-test
    defaults:
      run:
        shell: bash
        working-directory: ./source
    name: CDK Destroy
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Install
        uses: ./.github/actions/baseAction
      - name: Rush Build
        run: |
          node common/scripts/install-run-rush.js build
      - name: configure aws credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
          role-session-name: GITHUBACTIONSESSION
          aws-region: ${{ secrets.AWS_REGION }}
      - name: cdk destroy
        run: |
          cd dea-main
          npm run cdk destroy ${STAGE}-DeaMainStack -- --force
