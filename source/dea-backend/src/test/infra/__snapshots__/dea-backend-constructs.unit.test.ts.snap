// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DeaBackend constructs synthesizes the way we expect 1`] = `
Object {
  "Outputs": Object {
    "DeaAuditathenaDBName33BD65E2": Object {
      "Export": Object {
        "Name": "[STAGE-REMOVED]-athenaDBName",
      },
      "Value": Object {
        "Ref": "DeaAuditauditDB8F465ECE",
      },
    },
    "DeaAuditathenaTableNameB38EA473": Object {
      "Export": Object {
        "Name": "[STAGE-REMOVED]-athenaTableName",
      },
      "Value": Object {
        "Ref": "DeaAuditauditTableF413E0BA",
      },
    },
    "DeaAuditathenaWorkgroupNameCB5B3BB9": Object {
      "Export": Object {
        "Name": "[STAGE-REMOVED]-athenaWorkgroupName",
      },
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            Object {
              "Ref": "AWS::StackName",
            },
            "-dea-athena-workgroup",
          ],
        ],
      },
    },
    "DeaAuditauditBucketName17C211BF": Object {
      "Export": Object {
        "Name": "[STAGE-REMOVED]-auditBucketName",
      },
      "Value": Object {
        "Ref": "DeaAuditauditBucketD75893B5",
      },
    },
    "DeaAuditauditLogNameAC8EDDAB": Object {
      "Export": Object {
        "Name": "[STAGE-REMOVED]-auditLogName",
      },
      "Value": Object {
        "Ref": "deaAuditLogs7B75D3F1",
      },
    },
    "DeaAuditdeaTrailBucketNameBE00B0CC": Object {
      "Export": Object {
        "Name": "[STAGE-REMOVED]-deaTrailBucketName",
      },
      "Value": Object {
        "Ref": "DeaAuditdeaTrailBucket4819FF43",
      },
    },
    "DeaAuditfirehoseName878D4C88": Object {
      "Export": Object {
        "Name": "[STAGE-REMOVED]-firehoseName",
      },
      "Value": Object {
        "Ref": "DeaAuditDeliveryStreamBF390C06",
      },
    },
    "DeaAuditobjectLockQueueUrlD0E84161": Object {
      "Export": Object {
        "Name": "[STAGE-REMOVED]-objectLockQueueUrl",
      },
      "Value": Object {
        "Ref": "DeaAuditauditobjectlockqueue5FAA6838",
      },
    },
    "DeaAuditqueryResultBucketName7763E648": Object {
      "Export": Object {
        "Name": "[STAGE-REMOVED]-queryResultBucketName",
      },
      "Value": Object {
        "Ref": "DeaAuditqueryResultBucket9D5EA764",
      },
    },
    "DeaAudittrailLogName86F223B1": Object {
      "Export": Object {
        "Name": "[STAGE-REMOVED]-trailLogName",
      },
      "Value": Object {
        "Ref": "deaTrailLogs0A0531F5",
      },
    },
    "DeaBackendConstructDeaS3AccessLogs327B4237": Object {
      "Export": Object {
        "Name": "[STAGE-REMOVED]-DeaS3AccessLogs",
      },
      "Value": Object {
        "Ref": "DeaBackendConstructS3AccessLogsBucket2074272F",
      },
    },
    "DeaBackendConstructDeaS3DatasetsF44ADC66": Object {
      "Export": Object {
        "Name": "[STAGE-REMOVED]-DeaS3Datasets",
      },
      "Value": Object {
        "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
      },
    },
    "DeaBackendConstructS3AccessLogsBucketNameBE0DE775": Object {
      "Export": Object {
        "Name": "[STAGE-REMOVED]-S3AccessLogsBucketName",
      },
      "Value": Object {
        "Ref": "DeaBackendConstructS3AccessLogsBucket2074272F",
      },
    },
    "DeaEventHandlersS3BatchDeleteCaseFileLambdaF9C0024F": Object {
      "Export": Object {
        "Name": "[STAGE-REMOVED]-S3BatchDeleteCaseFileLambda",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "DeaEventHandlerss3batchdeletecasefileF6E3BAAE",
          "Arn",
        ],
      },
    },
    "DeaEventHandlersS3BatchJobStatusChangeLambda5A58E68A": Object {
      "Export": Object {
        "Name": "[STAGE-REMOVED]-S3BatchJobStatusChangeLambda",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "DeaEventHandlerss3batchstatushandlerB5D8C0EA",
          "Arn",
        ],
      },
    },
    "DeaRestApiConstructUiUrl40DB9ADB": Object {
      "Export": Object {
        "Name": "[STAGE-REMOVED]-UiUrl",
      },
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "DeaRestApiConstructdeaapi6587DDA1",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
            },
            "/ui",
          ],
        ],
      },
    },
    "DeaRestApiConstructdeaApiUrlB03CD416": Object {
      "Export": Object {
        "Name": "[STAGE-REMOVED]-deaApiUrl",
      },
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "DeaRestApiConstructdeaapi6587DDA1",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
            },
            "/",
          ],
        ],
      },
    },
    "DeaRestApiConstructdeaapiEndpoint5DCD0FC9": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "DeaRestApiConstructdeaapi6587DDA1",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "AWS679f53fac002430cb0da5b7982bd22872D164C4C": Object {
      "DependsOn": Array [
        "DeaRestApiConstructcustomresourcerole327E13A2",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructcustomresourcerole327E13A2",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691": Object {
      "DependsOn": Array [
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
      ],
      "Properties": Object {
        "Code": Object {
          "ZipFile": "import boto3  # type: ignore
import json
import logging
import urllib.request

s3 = boto3.client("s3")

EVENTBRIDGE_CONFIGURATION = 'EventBridgeConfiguration'

CONFIGURATION_TYPES = ["TopicConfigurations", "QueueConfigurations", "LambdaFunctionConfigurations"]

def handler(event: dict, context):
  response_status = "SUCCESS"
  error_message = ""
  try:
    props = event["ResourceProperties"]
    bucket = props["BucketName"]
    notification_configuration = props["NotificationConfiguration"]
    request_type = event["RequestType"]
    managed = props.get('Managed', 'true').lower() == 'true'
    stack_id = event['StackId']

    if managed:
      config = handle_managed(request_type, notification_configuration)
    else:
      config = handle_unmanaged(bucket, stack_id, request_type, notification_configuration)

    put_bucket_notification_configuration(bucket, config)
  except Exception as e:
    logging.exception("Failed to put bucket notification configuration")
    response_status = "FAILED"
    error_message = f"Error: {str(e)}. "
  finally:
    submit_response(event, context, response_status, error_message)

def handle_managed(request_type, notification_configuration):
  if request_type == 'Delete':
    return {}
  return notification_configuration

def handle_unmanaged(bucket, stack_id, request_type, notification_configuration):
  external_notifications = find_external_notifications(bucket, stack_id)

  if request_type == 'Delete':
    return external_notifications

  def with_id(notification):
    notification['Id'] = f"{stack_id}-{hash(json.dumps(notification, sort_keys=True))}"
    return notification

  notifications = {}
  for t in CONFIGURATION_TYPES:
    external = external_notifications.get(t, [])
    incoming = [with_id(n) for n in notification_configuration.get(t, [])]
    notifications[t] = external + incoming

  if EVENTBRIDGE_CONFIGURATION in notification_configuration:
    notifications[EVENTBRIDGE_CONFIGURATION] = notification_configuration[EVENTBRIDGE_CONFIGURATION]
  elif EVENTBRIDGE_CONFIGURATION in external_notifications:
    notifications[EVENTBRIDGE_CONFIGURATION] = external_notifications[EVENTBRIDGE_CONFIGURATION]

  return notifications

def find_external_notifications(bucket, stack_id):
  existing_notifications = get_bucket_notification_configuration(bucket)
  external_notifications = {}
  for t in CONFIGURATION_TYPES:
    external_notifications[t] = [n for n in existing_notifications.get(t, []) if not n['Id'].startswith(f"{stack_id}-")]

  if EVENTBRIDGE_CONFIGURATION in existing_notifications:
    external_notifications[EVENTBRIDGE_CONFIGURATION] = existing_notifications[EVENTBRIDGE_CONFIGURATION]

  return external_notifications

def get_bucket_notification_configuration(bucket):
  return s3.get_bucket_notification_configuration(Bucket=bucket)

def put_bucket_notification_configuration(bucket, notification_configuration):
  s3.put_bucket_notification_configuration(Bucket=bucket, NotificationConfiguration=notification_configuration)

def submit_response(event: dict, context, response_status: str, error_message: str):
  response_body = json.dumps(
    {
      "Status": response_status,
      "Reason": f"{error_message}See the details in CloudWatch Log Stream: {context.log_stream_name}",
      "PhysicalResourceId": event.get("PhysicalResourceId") or event["LogicalResourceId"],
      "StackId": event["StackId"],
      "RequestId": event["RequestId"],
      "LogicalResourceId": event["LogicalResourceId"],
      "NoEcho": False,
    }
  ).encode("utf-8")
  headers = {"content-type": "", "content-length": str(len(response_body))}
  try:
    req = urllib.request.Request(url=event["ResponseURL"], headers=headers, data=response_body, method="PUT")
    with urllib.request.urlopen(req) as response:
      print(response.read().decode("utf-8"))
    print("Status code: " + response.reason)
  except Exception as e:
      print("send(..) failed executing request.urlopen(..): " + str(e))
",
        },
        "Description": "AWS CloudFormation handler for \\"Custom::S3BucketNotifications\\" resources (@aws-cdk/aws-s3)",
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:PutBucketNotification",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleDefaultPolicy2CF63D36",
        "Roles": Array [
          Object {
            "Ref": "BucketNotificationsHandler050a0587b7544547bf325f094a3db834RoleB6FB88EC",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": Object {
      "DependsOn": Array [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Lambda function for auto-deleting objects in ",
              Object {
                "Ref": "DeaBackendConstructS3AccessLogsBucket2074272F",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaApiOpsDashboardNestedStackDeaApiOpsDashboardNestedStackResource31D606A6": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "Parameters": Object {
          "referencetoteststackDeaAuditauditobjectlockdlq2F89474CQueueName": Object {
            "Fn::GetAtt": Array [
              "DeaAuditauditobjectlockdlqF310E49D",
              "QueueName",
            ],
          },
          "referencetoteststackDeaAuditauditobjectlocker1B633237Ref": Object {
            "Ref": "DeaAuditauditobjectlockerC902034D",
          },
          "referencetoteststackDeaAuditauditprocessinglambda89606C6FRef": Object {
            "Ref": "DeaAuditauditprocessinglambdaE24A4EB0",
          },
          "referencetoteststackDeaAuditauditprocessinglambdaLogRetentionDA0ABAA0LogGroupName": Object {
            "Fn::GetAtt": Array [
              "DeaAuditauditprocessinglambdaLogRetention10650E20",
              "LogGroupName",
            ],
          },
          "referencetoteststackDeaBackendConstructDeaTableC6F555E3Ref": Object {
            "Ref": "DeaBackendConstructDeaTableB48721A0",
          },
          "referencetoteststackDeaEventHandlerss3batchdeletecasefile24B933DERef": Object {
            "Ref": "DeaEventHandlerss3batchdeletecasefileF6E3BAAE",
          },
          "referencetoteststackDeaEventHandlerss3batchstatushandler2A463E79Ref": Object {
            "Ref": "DeaEventHandlerss3batchstatushandlerB5D8C0EA",
          },
          "referencetoteststackDeaRestApiConstructDELETEDeleteCase817F2F7FRef": Object {
            "Ref": "DeaRestApiConstructDELETEDeleteCase9C8CBC88",
          },
          "referencetoteststackDeaRestApiConstructDELETERemoveUserFromCase737A1C3DRef": Object {
            "Ref": "DeaRestApiConstructDELETERemoveUserFromCase315FE1CE",
          },
          "referencetoteststackDeaRestApiConstructGETDownloadCaseFileF41985DARef": Object {
            "Ref": "DeaRestApiConstructGETDownloadCaseFile04DF0D0C",
          },
          "referencetoteststackDeaRestApiConstructGETGetAllCases1779FDB9Ref": Object {
            "Ref": "DeaRestApiConstructGETGetAllCasesD64E9594",
          },
          "referencetoteststackDeaRestApiConstructGETGetAllUsersF3A44B41Ref": Object {
            "Ref": "DeaRestApiConstructGETGetAllUsers77F79D7D",
          },
          "referencetoteststackDeaRestApiConstructGETGetAvailableEndpoints33BA1BC8Ref": Object {
            "Ref": "DeaRestApiConstructGETGetAvailableEndpoints64673B60",
          },
          "referencetoteststackDeaRestApiConstructGETGetCaseActions6471FFECRef": Object {
            "Ref": "DeaRestApiConstructGETGetCaseActions7D38DBB9",
          },
          "referencetoteststackDeaRestApiConstructGETGetCaseAuditFAE730C2Ref": Object {
            "Ref": "DeaRestApiConstructGETGetCaseAuditB3A2988F",
          },
          "referencetoteststackDeaRestApiConstructGETGetCaseDetails23A3519DRef": Object {
            "Ref": "DeaRestApiConstructGETGetCaseDetails37F7FEA5",
          },
          "referencetoteststackDeaRestApiConstructGETGetCaseFileAudit03D6BA4FRef": Object {
            "Ref": "DeaRestApiConstructGETGetCaseFileAuditEC14BB8D",
          },
          "referencetoteststackDeaRestApiConstructGETGetCaseFileDetailA362AE55Ref": Object {
            "Ref": "DeaRestApiConstructGETGetCaseFileDetailAC2C6003",
          },
          "referencetoteststackDeaRestApiConstructGETGetCaseFilesE2599F1ERef": Object {
            "Ref": "DeaRestApiConstructGETGetCaseFilesB601FAF5",
          },
          "referencetoteststackDeaRestApiConstructGETGetLoginUrl253239D4Ref": Object {
            "Ref": "DeaRestApiConstructGETGetLoginUrlA95063AD",
          },
          "referencetoteststackDeaRestApiConstructGETGetLogoutUrl30A8861ARef": Object {
            "Ref": "DeaRestApiConstructGETGetLogoutUrl77EA9407",
          },
          "referencetoteststackDeaRestApiConstructGETGetMyCases5C24C7E2Ref": Object {
            "Ref": "DeaRestApiConstructGETGetMyCasesBB9194E7",
          },
          "referencetoteststackDeaRestApiConstructGETGetScopedCaseInformationB2EFFDE9Ref": Object {
            "Ref": "DeaRestApiConstructGETGetScopedCaseInformationC679F03C",
          },
          "referencetoteststackDeaRestApiConstructGETGetSystemAuditB9F8EE79Ref": Object {
            "Ref": "DeaRestApiConstructGETGetSystemAuditE4C86CC7",
          },
          "referencetoteststackDeaRestApiConstructGETGetUserAuditD0BBC803Ref": Object {
            "Ref": "DeaRestApiConstructGETGetUserAudit8C04FC39",
          },
          "referencetoteststackDeaRestApiConstructGETGetUsersFromCaseF63D7C2ERef": Object {
            "Ref": "DeaRestApiConstructGETGetUsersFromCase05D0A5BE",
          },
          "referencetoteststackDeaRestApiConstructPOSTCreateCase6811A016Ref": Object {
            "Ref": "DeaRestApiConstructPOSTCreateCase203FC2B5",
          },
          "referencetoteststackDeaRestApiConstructPOSTCreateCaseOwner0D2870C4Ref": Object {
            "Ref": "DeaRestApiConstructPOSTCreateCaseOwner07019161",
          },
          "referencetoteststackDeaRestApiConstructPOSTGetAuthenticationTokenCD411A22Ref": Object {
            "Ref": "DeaRestApiConstructPOSTGetAuthenticationToken7831CF5E",
          },
          "referencetoteststackDeaRestApiConstructPOSTInitiateCaseFileUpload0C36047ARef": Object {
            "Ref": "DeaRestApiConstructPOSTInitiateCaseFileUpload4072CE29",
          },
          "referencetoteststackDeaRestApiConstructPOSTInviteUserToCase4A1D6FAFRef": Object {
            "Ref": "DeaRestApiConstructPOSTInviteUserToCaseE52152F4",
          },
          "referencetoteststackDeaRestApiConstructPOSTRefreshIdToken7D45C72BRef": Object {
            "Ref": "DeaRestApiConstructPOSTRefreshIdToken16E1721D",
          },
          "referencetoteststackDeaRestApiConstructPOSTRequestCaseAudit6F2B5BCERef": Object {
            "Ref": "DeaRestApiConstructPOSTRequestCaseAudit31F3AA5B",
          },
          "referencetoteststackDeaRestApiConstructPOSTRequestCaseFileAudit06B0D0E3Ref": Object {
            "Ref": "DeaRestApiConstructPOSTRequestCaseFileAuditB217F48B",
          },
          "referencetoteststackDeaRestApiConstructPOSTRequestSystemAuditAB566458Ref": Object {
            "Ref": "DeaRestApiConstructPOSTRequestSystemAuditF9687588",
          },
          "referencetoteststackDeaRestApiConstructPOSTRequestUserAudit84F8CF63Ref": Object {
            "Ref": "DeaRestApiConstructPOSTRequestUserAudit18A97521",
          },
          "referencetoteststackDeaRestApiConstructPOSTRevokeAuthToken3BCE3C99Ref": Object {
            "Ref": "DeaRestApiConstructPOSTRevokeAuthToken4994A05B",
          },
          "referencetoteststackDeaRestApiConstructPUTCompleteCaseFileUpload91944C43Ref": Object {
            "Ref": "DeaRestApiConstructPUTCompleteCaseFileUpload51639C21",
          },
          "referencetoteststackDeaRestApiConstructPUTModifyUserCasePermissions2ED6F96DRef": Object {
            "Ref": "DeaRestApiConstructPUTModifyUserCasePermissions3887B3D5",
          },
          "referencetoteststackDeaRestApiConstructPUTRestoreCaseFileB26FB0F6Ref": Object {
            "Ref": "DeaRestApiConstructPUTRestoreCaseFile94160087",
          },
          "referencetoteststackDeaRestApiConstructPUTUpdateCaseDetails2A42EB49Ref": Object {
            "Ref": "DeaRestApiConstructPUTUpdateCaseDetailsCAA16781",
          },
          "referencetoteststackDeaRestApiConstructPUTUpdateCaseStatus2B34FEF9Ref": Object {
            "Ref": "DeaRestApiConstructPUTUpdateCaseStatusBE885A0D",
          },
          "referencetoteststackDeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]Ref": Object {
            "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
          },
        },
        "TemplateURL": Object {
          "Fn::Join": Array [
            "",
            Array [
              "https://s3.",
              Object {
                "Ref": "AWS::Region",
              },
              ".",
              Object {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              Object {
                "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
              },
              "/[HASH REMOVED].json",
            ],
          ],
        },
      },
      "Type": "AWS::CloudFormation::Stack",
      "UpdateReplacePolicy": "Delete",
    },
    "DeaAuditAuditRedrivePolicyC6C6671E": Object {
      "Properties": Object {
        "Description": "A Policy which can be attached to an IAM Role, allowing that role to run the Audit Redrive script.",
        "Path": "/",
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "cloudformation:ListExports",
                "athena:StartQueryExecution",
                "athena:GetQueryExecution",
                "athena:GetQueryResults",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "athena:GetWorkgroup",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":athena:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":workgroup/",
                    Object {
                      "Ref": "AWS::StackName",
                    },
                    "-dea-athena-workgroup",
                  ],
                ],
              },
            },
            Object {
              "Action": "firehose:PutRecordBatch",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":firehose:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":deliverystream/",
                    Object {
                      "Ref": "DeaAuditDeliveryStreamBF390C06",
                    },
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "logs:DescribeLogStreams",
                "logs:GetLogEvents",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "deaAuditLogs7B75D3F1",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "deaTrailLogs0A0531F5",
                    "Arn",
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:AbortMultipartUpload",
                "s3:PutObject",
                "s3:ListMultipartUploadParts",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaAuditqueryResultBucket9D5EA764",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaAuditqueryResultBucket9D5EA764",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:GetObject",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "DeaAuditauditBucketD75893B5",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DeaAuditauditBucketD75893B5",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "glue:GetTable",
                "glue:GetDatabase",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":catalog",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":database/",
                      Object {
                        "Ref": "DeaAuditauditDB8F465ECE",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      Object {
                        "Ref": "DeaAuditauditDB8F465ECE",
                      },
                      "/",
                      Object {
                        "Ref": "DeaAuditauditTableF413E0BA",
                      },
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:GenerateDataKey",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testKey1CDDDD5E",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::ManagedPolicy",
    },
    "DeaAuditDeliveryStreamBF390C06": Object {
      "Properties": Object {
        "DeliveryStreamEncryptionConfigurationInput": Object {
          "KeyARN": Object {
            "Fn::GetAtt": Array [
              "testKey1CDDDD5E",
              "Arn",
            ],
          },
          "KeyType": "CUSTOMER_MANAGED_CMK",
        },
        "DeliveryStreamType": "DirectPut",
        "ExtendedS3DestinationConfiguration": Object {
          "BucketARN": Object {
            "Fn::GetAtt": Array [
              "DeaAuditauditBucketD75893B5",
              "Arn",
            ],
          },
          "BufferingHints": Object {
            "IntervalInSeconds": 60,
            "SizeInMBs": 1,
          },
          "CloudWatchLoggingOptions": Object {
            "Enabled": true,
            "LogGroupName": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "_firehoseErrors",
                ],
              ],
            },
            "LogStreamName": Object {
              "Fn::Join": Array [
                "",
                Array [
                  Object {
                    "Ref": "AWS::StackName",
                  },
                  "_firehoseErrorStream",
                ],
              ],
            },
          },
          "CompressionFormat": "GZIP",
          "EncryptionConfiguration": Object {
            "KMSEncryptionConfig": Object {
              "AWSKMSKeyARN": Object {
                "Fn::GetAtt": Array [
                  "testKey1CDDDD5E",
                  "Arn",
                ],
              },
            },
          },
          "ErrorOutputPrefix": "deliveryErrors",
          "Prefix": "audit/",
          "ProcessingConfiguration": Object {
            "Enabled": true,
            "Processors": Array [
              Object {
                "Parameters": Array [
                  Object {
                    "ParameterName": "LambdaArn",
                    "ParameterValue": Object {
                      "Fn::GetAtt": Array [
                        "DeaAuditauditprocessinglambdaE24A4EB0",
                        "Arn",
                      ],
                    },
                  },
                  Object {
                    "ParameterName": "BufferSizeInMBs",
                    "ParameterValue": "1",
                  },
                  Object {
                    "ParameterName": "BufferIntervalInSeconds",
                    "ParameterValue": "60",
                  },
                ],
                "Type": "Lambda",
              },
            ],
          },
          "RoleARN": Object {
            "Fn::GetAtt": Array [
              "DeaAuditFireHosetoS3Role97400919",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::KinesisFirehose::DeliveryStream",
    },
    "DeaAuditFireHosetoS3Role97400919": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "firehose.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaAuditFireHosetoS3RoleDefaultPolicy7310F109": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:AbortMultipartUpload",
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaAuditauditBucketD75893B5",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaAuditauditBucketD75893B5",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testKey1CDDDD5E",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaAuditauditprocessinglambdaE24A4EB0",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaAuditauditprocessinglambdaE24A4EB0",
                          "Arn",
                        ],
                      },
                      ":*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeaAuditFireHosetoS3RoleDefaultPolicy7310F109",
        "Roles": Array [
          Object {
            "Ref": "DeaAuditFireHosetoS3Role97400919",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DeaAuditathenaWorkgroup76A5B1DD": Object {
      "Properties": Object {
        "Name": Object {
          "Fn::Join": Array [
            "",
            Array [
              Object {
                "Ref": "AWS::StackName",
              },
              "-dea-athena-workgroup",
            ],
          ],
        },
        "RecursiveDeleteOption": true,
        "WorkGroupConfiguration": Object {
          "CustomerContentEncryptionConfiguration": Object {
            "KmsKey": Object {
              "Fn::GetAtt": Array [
                "testKey1CDDDD5E",
                "Arn",
              ],
            },
          },
          "EnforceWorkGroupConfiguration": true,
          "EngineVersion": Object {
            "SelectedEngineVersion": "Athena engine version 3",
          },
          "ResultConfiguration": Object {
            "EncryptionConfiguration": Object {
              "EncryptionOption": "SSE_KMS",
              "KmsKey": Object {
                "Fn::GetAtt": Array [
                  "testKey1CDDDD5E",
                  "Arn",
                ],
              },
            },
            "ExpectedBucketOwner": Object {
              "Ref": "AWS::AccountId",
            },
            "OutputLocation": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "s3://",
                  Object {
                    "Ref": "DeaAuditqueryResultBucket9D5EA764",
                  },
                ],
              ],
            },
          },
        },
      },
      "Type": "AWS::Athena::WorkGroup",
    },
    "DeaAuditauditBucketD75893B5": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "KMSMasterKeyID": Object {
                  "Fn::GetAtt": Array [
                    "testKey1CDDDD5E",
                    "Arn",
                  ],
                },
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "ObjectLockEnabled": true,
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerPreferred",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": Object {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "DeaAuditauditBucketNotifications37F46D9A": Object {
      "DependsOn": Array [
        "DeaAuditauditobjectlockqueuePolicyABC0A859",
        "DeaAuditauditobjectlockqueue5FAA6838",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "DeaAuditauditBucketD75893B5",
        },
        "Managed": true,
        "NotificationConfiguration": Object {
          "QueueConfigurations": Array [
            Object {
              "Events": Array [
                "s3:ObjectCreated:*",
              ],
              "Filter": Object {
                "Key": Object {
                  "FilterRules": Array [
                    Object {
                      "Name": "prefix",
                      "Value": "audit/",
                    },
                  ],
                },
              },
              "QueueArn": Object {
                "Fn::GetAtt": Array [
                  "DeaAuditauditobjectlockqueue5FAA6838",
                  "Arn",
                ],
              },
            },
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "BucketNotificationsHandler050a0587b7544547bf325f094a3db8347ECC3691",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3BucketNotifications",
    },
    "DeaAuditauditBucketPolicy9640F504": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "DeaAuditauditBucketD75893B5",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaAuditauditBucketD75893B5",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaAuditauditBucketD75893B5",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "DeaAuditauditDB8F465ECE": Object {
      "Properties": Object {
        "CatalogId": Object {
          "Ref": "AWS::AccountId",
        },
        "DatabaseInput": Object {
          "Name": "teststackdeaauditauditdb68381d4f",
        },
      },
      "Type": "AWS::Glue::Database",
    },
    "DeaAuditauditTableF413E0BA": Object {
      "Properties": Object {
        "CatalogId": Object {
          "Ref": "AWS::AccountId",
        },
        "DatabaseName": Object {
          "Ref": "DeaAuditauditDB8F465ECE",
        },
        "TableInput": Object {
          "Description": "teststackdeaauditaudittablee5db2959 generated by CDK",
          "Name": "teststackdeaauditaudittablee5db2959",
          "Parameters": Object {
            "classification": "json",
            "has_encrypted_data": true,
          },
          "StorageDescriptor": Object {
            "Columns": Array [
              Object {
                "Name": "timestamp",
                "Type": "timestamp",
              },
              Object {
                "Name": "logEventType",
                "Type": "string",
              },
              Object {
                "Name": "userIdentity",
                "Type": "struct<type:string,userName:string,sessionContext:struct<sessionIssuer:struct<userName:string>>>",
              },
              Object {
                "Name": "actorIdentity",
                "Type": "struct<idType:string,sourceIp:string,idPoolUserId:string,username:string,firstName:string,lastName:string,userUlid:string,deaRole:string,userPoolUserId:string,authCode:string,idToken:string>",
              },
              Object {
                "Name": "dateTime",
                "Type": "string",
              },
              Object {
                "Name": "eventTime",
                "Type": "string",
              },
              Object {
                "Name": "eventType",
                "Type": "string",
              },
              Object {
                "Name": "requestPath",
                "Type": "string",
              },
              Object {
                "Name": "result",
                "Type": "string",
              },
              Object {
                "Name": "eventName",
                "Type": "string",
              },
              Object {
                "Name": "sourceComponent",
                "Type": "string",
              },
              Object {
                "Name": "eventSource",
                "Type": "string",
              },
              Object {
                "Name": "sourceIPAddress",
                "Type": "string",
              },
              Object {
                "Name": "caseId",
                "Type": "string",
              },
              Object {
                "Name": "fileId",
                "Type": "string",
              },
              Object {
                "Name": "fileHash",
                "Type": "string",
              },
              Object {
                "Name": "caseActions",
                "Type": "string",
              },
              Object {
                "Name": "targetUserId",
                "Type": "string",
              },
              Object {
                "Name": "eventID",
                "Type": "string",
              },
              Object {
                "Name": "requestParameters",
                "Type": "struct<key:struct<PK:string,SK:string,GSI1PK:string,GSI1SK:string,GSI2PK:string,GSI2SK:string>,requestItems:array<struct<key:struct<PK:string,SK:string,GSI1PK:string,GSI1SK:string,GSI2PK:string,GSI2SK:string>>>>",
              },
              Object {
                "Name": "resources",
                "Type": "struct<0:struct<ARN:string>>",
              },
            ],
            "Compressed": false,
            "InputFormat": "org.apache.hadoop.mapred.TextInputFormat",
            "Location": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "s3://",
                  Object {
                    "Ref": "DeaAuditauditBucketD75893B5",
                  },
                  "/",
                ],
              ],
            },
            "OutputFormat": "org.apache.hadoop.hive.ql.io.HiveIgnoreKeyTextOutputFormat",
            "SerdeInfo": Object {
              "Parameters": Object {
                "ignore.malformed.json": "true",
              },
              "SerializationLibrary": "org.openx.data.jsonserde.JsonSerDe",
            },
            "StoredAsSubDirectories": false,
          },
          "TableType": "EXTERNAL_TABLE",
        },
      },
      "Type": "AWS::Glue::Table",
    },
    "DeaAuditauditobjectlockdlqF310E49D": Object {
      "DeletionPolicy": "Delete",
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "DeaAuditauditobjectlockerC902034D": Object {
      "DependsOn": Array [
        "DeaAuditauditobjectlockerServiceRoleDefaultPolicyF8DF7136",
        "DeaAuditauditobjectlockerServiceRole8481B518",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "NODE_OPTIONS": "--enable-source-maps",
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaAuditauditobjectlockerServiceRole8481B518",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaAuditauditobjectlockerServiceRole8481B518": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaAuditauditobjectlockerServiceRoleDefaultPolicyF8DF7136": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:PutObjectLegalHold",
                "s3:GetBucketObjectLockConfiguration",
                "s3:GetObjectLegalHold",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaAuditauditBucketD75893B5",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaAuditauditBucketD75893B5",
                          "Arn",
                        ],
                      },
                      "/audit/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "sqs:ReceiveMessage",
                "sqs:ChangeMessageVisibility",
                "sqs:GetQueueUrl",
                "sqs:DeleteMessage",
                "sqs:GetQueueAttributes",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DeaAuditauditobjectlockqueue5FAA6838",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeaAuditauditobjectlockerServiceRoleDefaultPolicyF8DF7136",
        "Roles": Array [
          Object {
            "Ref": "DeaAuditauditobjectlockerServiceRole8481B518",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DeaAuditauditobjectlockerSqsEventSourceteststackDeaAuditauditobjectlockqueue6174A2D84B54B9C8": Object {
      "Properties": Object {
        "EventSourceArn": Object {
          "Fn::GetAtt": Array [
            "DeaAuditauditobjectlockqueue5FAA6838",
            "Arn",
          ],
        },
        "FunctionName": Object {
          "Ref": "DeaAuditauditobjectlockerC902034D",
        },
      },
      "Type": "AWS::Lambda::EventSourceMapping",
    },
    "DeaAuditauditobjectlockqueue5FAA6838": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "RedrivePolicy": Object {
          "deadLetterTargetArn": Object {
            "Fn::GetAtt": Array [
              "DeaAuditauditobjectlockdlqF310E49D",
              "Arn",
            ],
          },
          "maxReceiveCount": 5,
        },
        "VisibilityTimeout": 60,
      },
      "Type": "AWS::SQS::Queue",
      "UpdateReplacePolicy": "Delete",
    },
    "DeaAuditauditobjectlockqueuePolicyABC0A859": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "sqs:SendMessage",
                "sqs:GetQueueAttributes",
                "sqs:GetQueueUrl",
              ],
              "Condition": Object {
                "ArnLike": Object {
                  "aws:SourceArn": Object {
                    "Fn::GetAtt": Array [
                      "DeaAuditauditBucketD75893B5",
                      "Arn",
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "s3.amazonaws.com",
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DeaAuditauditobjectlockqueue5FAA6838",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Queues": Array [
          Object {
            "Ref": "DeaAuditauditobjectlockqueue5FAA6838",
          },
        ],
      },
      "Type": "AWS::SQS::QueuePolicy",
    },
    "DeaAuditauditprocessinglambdaE24A4EB0": Object {
      "DependsOn": Array [
        "DeaAuditauditprocessinglambdaServiceRoleDefaultPolicy603DB2EE",
        "DeaAuditauditprocessinglambdaServiceRole74F0C037",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "NODE_OPTIONS": "--enable-source-maps",
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaAuditauditprocessinglambdaServiceRole74F0C037",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 300,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaAuditauditprocessinglambdaLogRetention10650E20": Object {
      "Properties": Object {
        "LogGroupName": Object {
          "Fn::Join": Array [
            "",
            Array [
              "/aws/lambda/",
              Object {
                "Ref": "DeaAuditauditprocessinglambdaE24A4EB0",
              },
            ],
          ],
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A",
            "Arn",
          ],
        },
      },
      "Type": "Custom::LogRetention",
    },
    "DeaAuditauditprocessinglambdaServiceRole74F0C037": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaAuditauditprocessinglambdaServiceRoleDefaultPolicy603DB2EE": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "firehose:PutRecordBatch",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":firehose:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":deliverystream/",
                    Object {
                      "Ref": "AWS::StackName",
                    },
                    "-DeaAuditDeliveryStream*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeaAuditauditprocessinglambdaServiceRoleDefaultPolicy603DB2EE",
        "Roles": Array [
          Object {
            "Ref": "DeaAuditauditprocessinglambdaServiceRole74F0C037",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DeaAuditdeaTrailBucket4819FF43": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W35",
              "reason": "This is an access log bucket, we don't need to configure access logging for access log buckets",
            },
          ],
        },
      },
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "KMSMasterKeyID": Object {
                  "Fn::GetAtt": Array [
                    "testKey1CDDDD5E",
                    "Arn",
                  ],
                },
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerPreferred",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "DeaAuditdeaTrailBucketAutoDeleteObjectsCustomResourceA4FC66B6": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "DeaAuditdeaTrailBucketPolicyA68DF945",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "DeaAuditdeaTrailBucket4819FF43",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "DeaAuditdeaTrailBucketPolicyA68DF945": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "DeaAuditdeaTrailBucket4819FF43",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaAuditdeaTrailBucket4819FF43",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaAuditdeaTrailBucket4819FF43",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaAuditdeaTrailBucket4819FF43",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaAuditdeaTrailBucket4819FF43",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:GetBucketAcl",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "cloudtrail.amazonaws.com",
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DeaAuditdeaTrailBucket4819FF43",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "s3:PutObject",
              "Condition": Object {
                "StringEquals": Object {
                  "s3:x-amz-acl": "bucket-owner-full-control",
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "cloudtrail.amazonaws.com",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "DeaAuditdeaTrailBucket4819FF43",
                        "Arn",
                      ],
                    },
                    "/AWSLogs/",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "DeaAuditlogsSubFilterCloudWatchLogsCanPutRecords1FBF88E7": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Condition": Object {
                "StringLike": Object {
                  "aws:SourceArn": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":*",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "logs.",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ".",
                      Object {
                        "Ref": "AWS::URLSuffix",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaAuditlogsSubFilterCloudWatchLogsCanPutRecordsDefaultPolicy2613029C": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DeaAuditlogsSubFilterCloudWatchLogsCanPutRecords1FBF88E7",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "firehose:PutRecord",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DeaAuditDeliveryStreamBF390C06",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeaAuditlogsSubFilterCloudWatchLogsCanPutRecordsDefaultPolicy2613029C",
        "Roles": Array [
          Object {
            "Ref": "DeaAuditlogsSubFilterCloudWatchLogsCanPutRecords1FBF88E7",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DeaAuditlogsSubFilterD9B34ECD": Object {
      "DependsOn": Array [
        "DeaAuditlogsSubFilterCloudWatchLogsCanPutRecordsDefaultPolicy2613029C",
      ],
      "Properties": Object {
        "DestinationArn": Object {
          "Fn::GetAtt": Array [
            "DeaAuditDeliveryStreamBF390C06",
            "Arn",
          ],
        },
        "FilterPattern": "",
        "LogGroupName": Object {
          "Ref": "deaAuditLogs7B75D3F1",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "DeaAuditlogsSubFilterCloudWatchLogsCanPutRecords1FBF88E7",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Logs::SubscriptionFilter",
    },
    "DeaAuditqueryResultBucket9D5EA764": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "BucketKeyEnabled": true,
              "ServerSideEncryptionByDefault": Object {
                "KMSMasterKeyID": Object {
                  "Fn::GetAtt": Array [
                    "testKey1CDDDD5E",
                    "Arn",
                  ],
                },
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "CorsConfiguration": Object {
          "CorsRules": Array [
            Object {
              "AllowedHeaders": Array [
                "*",
              ],
              "AllowedMethods": Array [
                "GET",
                "PUT",
                "HEAD",
              ],
              "AllowedOrigins": Array [
                "*",
              ],
            },
          ],
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerPreferred",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
        "VersioningConfiguration": Object {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "DeaAuditqueryResultBucketAutoDeleteObjectsCustomResource2D994389": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "DeaAuditqueryResultBucketPolicy79172E43",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "DeaAuditqueryResultBucket9D5EA764",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "DeaAuditqueryResultBucketPolicy79172E43": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "DeaAuditqueryResultBucket9D5EA764",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaAuditqueryResultBucket9D5EA764",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaAuditqueryResultBucket9D5EA764",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaAuditqueryResultBucket9D5EA764",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaAuditqueryResultBucket9D5EA764",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "DeaAudittrailSubFilter1A558CDD": Object {
      "DependsOn": Array [
        "DeaAudittrailSubFilterCloudWatchLogsCanPutRecordsDefaultPolicy2F30368F",
      ],
      "Properties": Object {
        "DestinationArn": Object {
          "Fn::GetAtt": Array [
            "DeaAuditDeliveryStreamBF390C06",
            "Arn",
          ],
        },
        "FilterPattern": "{ ($.userIdentity.userName = \\"*\\") || ($.userIdentity.sessionContext.sessionIssuer.userName = \\"*\\") }",
        "LogGroupName": Object {
          "Ref": "deaTrailLogs0A0531F5",
        },
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "DeaAudittrailSubFilterCloudWatchLogsCanPutRecordsCFC7BC5D",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Logs::SubscriptionFilter",
    },
    "DeaAudittrailSubFilterCloudWatchLogsCanPutRecordsCFC7BC5D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Condition": Object {
                "StringLike": Object {
                  "aws:SourceArn": Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":logs:",
                        Object {
                          "Ref": "AWS::Region",
                        },
                        ":",
                        Object {
                          "Ref": "AWS::AccountId",
                        },
                        ":*",
                      ],
                    ],
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "logs.",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ".",
                      Object {
                        "Ref": "AWS::URLSuffix",
                      },
                    ],
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaAudittrailSubFilterCloudWatchLogsCanPutRecordsDefaultPolicy2F30368F": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DeaAudittrailSubFilterCloudWatchLogsCanPutRecordsCFC7BC5D",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "firehose:PutRecord",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DeaAuditDeliveryStreamBF390C06",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeaAudittrailSubFilterCloudWatchLogsCanPutRecordsDefaultPolicy2F30368F",
        "Roles": Array [
          Object {
            "Ref": "DeaAudittrailSubFilterCloudWatchLogsCanPutRecordsCFC7BC5D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DeaBackendConstructDeaTableB48721A0": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "PK",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "SK",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "GSI1PK",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "GSI1SK",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "GSI2PK",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "GSI2SK",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "GlobalSecondaryIndexes": Array [
          Object {
            "IndexName": "GSI1",
            "KeySchema": Array [
              Object {
                "AttributeName": "GSI1PK",
                "KeyType": "HASH",
              },
              Object {
                "AttributeName": "GSI1SK",
                "KeyType": "RANGE",
              },
            ],
            "Projection": Object {
              "ProjectionType": "ALL",
            },
          },
          Object {
            "IndexName": "GSI2",
            "KeySchema": Array [
              Object {
                "AttributeName": "GSI2PK",
                "KeyType": "HASH",
              },
              Object {
                "AttributeName": "GSI2SK",
                "KeyType": "RANGE",
              },
            ],
            "Projection": Object {
              "ProjectionType": "ALL",
            },
          },
        ],
        "KeySchema": Array [
          Object {
            "AttributeName": "PK",
            "KeyType": "HASH",
          },
          Object {
            "AttributeName": "SK",
            "KeyType": "RANGE",
          },
        ],
        "PointInTimeRecoverySpecification": Object {
          "PointInTimeRecoveryEnabled": true,
        },
        "SSESpecification": Object {
          "KMSMasterKeyId": Object {
            "Fn::GetAtt": Array [
              "testKey1CDDDD5E",
              "Arn",
            ],
          },
          "SSEEnabled": true,
          "SSEType": "KMS",
        },
        "TimeToLiveSpecification": Object {
          "AttributeName": "ttl",
          "Enabled": true,
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "DeaBackendConstructS3AccessLogsBucket2074272F": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W35",
              "reason": "This is an access log bucket, we don't need to configure access logging for access log buckets",
            },
          ],
        },
      },
      "Properties": Object {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerPreferred",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "DeaBackendConstructS3AccessLogsBucketAutoDeleteObjectsCustomResource6EDC2642": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "DeaBackendConstructS3AccessLogsBucketPolicy55BD9984",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "DeaBackendConstructS3AccessLogsBucket2074272F",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "DeaBackendConstructS3AccessLogsBucketPolicy55BD9984": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "F16",
              "reason": "S3 Bucket Policy * is used on Deny",
            },
          ],
        },
      },
      "Properties": Object {
        "Bucket": Object {
          "Ref": "DeaBackendConstructS3AccessLogsBucket2074272F",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaBackendConstructS3AccessLogsBucket2074272F",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaBackendConstructS3AccessLogsBucket2074272F",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaBackendConstructS3AccessLogsBucket2074272F",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaBackendConstructS3AccessLogsBucket2074272F",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:PutObject",
                "s3:PutObjectAcl",
              ],
              "Condition": Object {
                "StringEquals": Object {
                  "aws:SourceAccount": Object {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logging.s3.amazonaws.com",
              },
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaBackendConstructS3AccessLogsBucket2074272F",
                          "Arn",
                        ],
                      },
                      "/dea-ui-access-log*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaBackendConstructS3AccessLogsBucket2074272F",
                          "Arn",
                        ],
                      },
                      "/dea-datasets-access-log*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "DeaBackendConstructS3DatasetsBucketDDF4C58A": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "BucketKeyEnabled": true,
              "ServerSideEncryptionByDefault": Object {
                "KMSMasterKeyID": Object {
                  "Fn::GetAtt": Array [
                    "testKey1CDDDD5E",
                    "Arn",
                  ],
                },
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "CorsConfiguration": Object {
          "CorsRules": Array [
            Object {
              "AllowedHeaders": Array [
                "*",
              ],
              "AllowedMethods": Array [
                "GET",
                "PUT",
                "HEAD",
              ],
              "AllowedOrigins": Array [
                "*",
              ],
            },
          ],
        },
        "LifecycleConfiguration": Object {
          "Rules": Array [
            Object {
              "AbortIncompleteMultipartUpload": Object {
                "DaysAfterInitiation": 1,
              },
              "Id": "DeaDatasetsDeleteIncompleteUploadsLifecyclePolicy",
              "Status": "Enabled",
            },
          ],
        },
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Ref": "DeaBackendConstructS3AccessLogsBucket2074272F",
          },
          "LogFilePrefix": "dea-datasets-access-log",
        },
        "ObjectLockEnabled": true,
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerPreferred",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": Object {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "DeaBackendConstructS3DatasetsBucketPolicyA1DF7E5A": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "F16",
              "reason": "S3 Bucket Policy * is used on Deny",
            },
          ],
        },
      },
      "Properties": Object {
        "Bucket": Object {
          "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaBackendConstructS3DatasetsBucketDDF4C58A",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaBackendConstructS3DatasetsBucketDDF4C58A",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "DeaEventHandlersS3BatchJobStatusChangeRule89BEE9B4": Object {
      "Properties": Object {
        "EventPattern": Object {
          "detail": Object {
            "eventName": Array [
              "JobStatusChanged",
            ],
            "eventSource": Array [
              "s3.amazonaws.com",
            ],
          },
          "source": Array [
            "aws.s3",
          ],
        },
        "State": "ENABLED",
        "Targets": Array [
          Object {
            "Arn": Object {
              "Fn::GetAtt": Array [
                "DeaEventHandlerss3batchstatushandlerB5D8C0EA",
                "Arn",
              ],
            },
            "Id": "Target0",
          },
        ],
      },
      "Type": "AWS::Events::Rule",
    },
    "DeaEventHandlersS3BatchJobStatusChangeRuleAllowEventRuleteststackDeaEventHandlerss3batchstatushandler078BAD77D9ED4002": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaEventHandlerss3batchstatushandlerB5D8C0EA",
            "Arn",
          ],
        },
        "Principal": "events.amazonaws.com",
        "SourceArn": Object {
          "Fn::GetAtt": Array [
            "DeaEventHandlersS3BatchJobStatusChangeRule89BEE9B4",
            "Arn",
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaEventHandlerss3batchdeletecasefileF6E3BAAE": Object {
      "DependsOn": Array [
        "DeaEventHandlerss3batchdeletecasefilehandlerroleDefaultPolicyEED28940",
        "DeaEventHandlerss3batchdeletecasefilehandlerrole23FFF03E",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require access to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "NODE_OPTIONS": "--enable-source-maps",
            "STAGE": "[STAGE-REMOVED]",
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaEventHandlerss3batchdeletecasefilehandlerrole23FFF03E",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaEventHandlerss3batchdeletecasefilehandlerrole23FFF03E": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaEventHandlerss3batchdeletecasefilehandlerroleDefaultPolicyEED28940": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:GetItem",
                "dynamodb:PutItem",
                "dynamodb:Query",
                "dynamodb:UpdateItem",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DeaBackendConstructDeaTableB48721A0",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:DeleteObject",
                "s3:DeleteObjectVersion",
                "s3:GetObjectLegalHold",
                "s3:PutObjectLegalHold",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "DeaBackendConstructS3DatasetsBucketDDF4C58A",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "s3:DescribeJob",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:GenerateDataKey",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testKey1CDDDD5E",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeaEventHandlerss3batchdeletecasefilehandlerroleDefaultPolicyEED28940",
        "Roles": Array [
          Object {
            "Ref": "DeaEventHandlerss3batchdeletecasefilehandlerrole23FFF03E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DeaEventHandlerss3batchdeletecasefileroleBAD7A58C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "batchoperations.s3.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaEventHandlerss3batchdeletecasefileroleDefaultPolicy9351E35A": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject",
                "s3:GetObjectVersion",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaBackendConstructS3DatasetsBucketDDF4C58A",
                          "Arn",
                        ],
                      },
                      "/manifests/*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaBackendConstructS3DatasetsBucketDDF4C58A",
                          "Arn",
                        ],
                      },
                      "/reports/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "lambda:InvokeFunction",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DeaEventHandlerss3batchdeletecasefileF6E3BAAE",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeaEventHandlerss3batchdeletecasefileroleDefaultPolicy9351E35A",
        "Roles": Array [
          Object {
            "Ref": "DeaEventHandlerss3batchdeletecasefileroleBAD7A58C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DeaEventHandlerss3batchstatuschangehandlerrole897AED05": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaEventHandlerss3batchstatuschangehandlerroleDefaultPolicy14D56A34": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:GetItem",
                "dynamodb:PutItem",
                "dynamodb:Query",
                "dynamodb:UpdateItem",
                "dynamodb:DeleteItem",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DeaBackendConstructDeaTableB48721A0",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "s3:DescribeJob",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:GenerateDataKey",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testKey1CDDDD5E",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeaEventHandlerss3batchstatuschangehandlerroleDefaultPolicy14D56A34",
        "Roles": Array [
          Object {
            "Ref": "DeaEventHandlerss3batchstatuschangehandlerrole897AED05",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DeaEventHandlerss3batchstatushandlerB5D8C0EA": Object {
      "DependsOn": Array [
        "DeaEventHandlerss3batchstatuschangehandlerroleDefaultPolicy14D56A34",
        "DeaEventHandlerss3batchstatuschangehandlerrole897AED05",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require access to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "NODE_OPTIONS": "--enable-source-maps",
            "STAGE": "[STAGE-REMOVED]",
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaEventHandlerss3batchstatuschangehandlerrole897AED05",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 60,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaRestApiConstructAPIGatewayAccessLogs56D13F5D": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "KmsKeyId": Object {
          "Fn::GetAtt": Array [
            "testKey1CDDDD5E",
            "Arn",
          ],
        },
        "RetentionInDays": 731,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "DeaRestApiConstructDELETEDeleteCase9C8CBC88": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeabaselambdaroleDefaultPolicy8449FBB9",
        "DeaRestApiConstructdeabaselambdarole9EA2B06B",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require access to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOWED_ORIGINS": "https://localhost:3001",
            "AUDIT_DOWNLOAD_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeaauditdownloadrole41E0E771",
                "Arn",
              ],
            },
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AWS_PARTITION": Object {
              "Ref": "AWS::Partition",
            },
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
            },
            "DATASETS_ROLE": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeadatasetsrole293FB411",
                "Arn",
              ],
            },
            "KEY_ARN": Object {
              "Fn::GetAtt": Array [
                "testKey1CDDDD5E",
                "Arn",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "SAMESITE": "None",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendConstructDeaTableB48721A0",
            },
            "TRAIL_LOG_GROUP_NAME": Object {
              "Ref": "deaTrailLogs0A0531F5",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 2048,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeabaselambdarole9EA2B06B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaRestApiConstructDELETEDeleteCaseInvokeLambdaPermissionCB1C6040": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructDELETEDeleteCase9C8CBC88",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructDELETERemoveUserFromCase315FE1CE": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeabaselambdaroleDefaultPolicy8449FBB9",
        "DeaRestApiConstructdeabaselambdarole9EA2B06B",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require access to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOWED_ORIGINS": "https://localhost:3001",
            "AUDIT_DOWNLOAD_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeaauditdownloadrole41E0E771",
                "Arn",
              ],
            },
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AWS_PARTITION": Object {
              "Ref": "AWS::Partition",
            },
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
            },
            "DATASETS_ROLE": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeadatasetsrole293FB411",
                "Arn",
              ],
            },
            "KEY_ARN": Object {
              "Fn::GetAtt": Array [
                "testKey1CDDDD5E",
                "Arn",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "SAMESITE": "None",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendConstructDeaTableB48721A0",
            },
            "TRAIL_LOG_GROUP_NAME": Object {
              "Ref": "deaTrailLogs0A0531F5",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 2048,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeabaselambdarole9EA2B06B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaRestApiConstructDELETERemoveUserFromCaseInvokeLambdaPermissionB1A8C813": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructDELETERemoveUserFromCase315FE1CE",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructGETDownloadCaseFile04DF0D0C": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeabaselambdaroleDefaultPolicy8449FBB9",
        "DeaRestApiConstructdeabaselambdarole9EA2B06B",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require access to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOWED_ORIGINS": "https://localhost:3001",
            "AUDIT_DOWNLOAD_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeaauditdownloadrole41E0E771",
                "Arn",
              ],
            },
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AWS_PARTITION": Object {
              "Ref": "AWS::Partition",
            },
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
            },
            "DATASETS_ROLE": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeadatasetsrole293FB411",
                "Arn",
              ],
            },
            "KEY_ARN": Object {
              "Fn::GetAtt": Array [
                "testKey1CDDDD5E",
                "Arn",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "SAMESITE": "None",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendConstructDeaTableB48721A0",
            },
            "TRAIL_LOG_GROUP_NAME": Object {
              "Ref": "deaTrailLogs0A0531F5",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 2048,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeabaselambdarole9EA2B06B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaRestApiConstructGETDownloadCaseFileInvokeLambdaPermission6549CA6F": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETDownloadCaseFile04DF0D0C",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructGETGetAllCasesD64E9594": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeabaselambdaroleDefaultPolicy8449FBB9",
        "DeaRestApiConstructdeabaselambdarole9EA2B06B",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require access to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOWED_ORIGINS": "https://localhost:3001",
            "AUDIT_DOWNLOAD_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeaauditdownloadrole41E0E771",
                "Arn",
              ],
            },
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AWS_PARTITION": Object {
              "Ref": "AWS::Partition",
            },
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
            },
            "DATASETS_ROLE": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeadatasetsrole293FB411",
                "Arn",
              ],
            },
            "KEY_ARN": Object {
              "Fn::GetAtt": Array [
                "testKey1CDDDD5E",
                "Arn",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "SAMESITE": "None",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendConstructDeaTableB48721A0",
            },
            "TRAIL_LOG_GROUP_NAME": Object {
              "Ref": "deaTrailLogs0A0531F5",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 2048,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeabaselambdarole9EA2B06B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaRestApiConstructGETGetAllCasesInvokeLambdaPermission78E4B78B": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetAllCasesD64E9594",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructGETGetAllUsers77F79D7D": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeabaselambdaroleDefaultPolicy8449FBB9",
        "DeaRestApiConstructdeabaselambdarole9EA2B06B",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require access to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOWED_ORIGINS": "https://localhost:3001",
            "AUDIT_DOWNLOAD_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeaauditdownloadrole41E0E771",
                "Arn",
              ],
            },
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AWS_PARTITION": Object {
              "Ref": "AWS::Partition",
            },
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
            },
            "DATASETS_ROLE": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeadatasetsrole293FB411",
                "Arn",
              ],
            },
            "KEY_ARN": Object {
              "Fn::GetAtt": Array [
                "testKey1CDDDD5E",
                "Arn",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "SAMESITE": "None",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendConstructDeaTableB48721A0",
            },
            "TRAIL_LOG_GROUP_NAME": Object {
              "Ref": "deaTrailLogs0A0531F5",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 2048,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeabaselambdarole9EA2B06B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaRestApiConstructGETGetAllUsersInvokeLambdaPermission56998D5B": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetAllUsers77F79D7D",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructGETGetAvailableEndpoints64673B60": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeabaselambdaroleDefaultPolicy8449FBB9",
        "DeaRestApiConstructdeabaselambdarole9EA2B06B",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require access to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOWED_ORIGINS": "https://localhost:3001",
            "AUDIT_DOWNLOAD_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeaauditdownloadrole41E0E771",
                "Arn",
              ],
            },
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AWS_PARTITION": Object {
              "Ref": "AWS::Partition",
            },
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
            },
            "DATASETS_ROLE": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeadatasetsrole293FB411",
                "Arn",
              ],
            },
            "KEY_ARN": Object {
              "Fn::GetAtt": Array [
                "testKey1CDDDD5E",
                "Arn",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "SAMESITE": "None",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendConstructDeaTableB48721A0",
            },
            "TRAIL_LOG_GROUP_NAME": Object {
              "Ref": "deaTrailLogs0A0531F5",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 2048,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeabaselambdarole9EA2B06B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaRestApiConstructGETGetAvailableEndpointsInvokeLambdaPermission136DD8EA": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetAvailableEndpoints64673B60",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructGETGetCaseActions7D38DBB9": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeabaselambdaroleDefaultPolicy8449FBB9",
        "DeaRestApiConstructdeabaselambdarole9EA2B06B",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require access to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOWED_ORIGINS": "https://localhost:3001",
            "AUDIT_DOWNLOAD_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeaauditdownloadrole41E0E771",
                "Arn",
              ],
            },
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AWS_PARTITION": Object {
              "Ref": "AWS::Partition",
            },
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
            },
            "DATASETS_ROLE": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeadatasetsrole293FB411",
                "Arn",
              ],
            },
            "KEY_ARN": Object {
              "Fn::GetAtt": Array [
                "testKey1CDDDD5E",
                "Arn",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "SAMESITE": "None",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendConstructDeaTableB48721A0",
            },
            "TRAIL_LOG_GROUP_NAME": Object {
              "Ref": "deaTrailLogs0A0531F5",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 2048,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeabaselambdarole9EA2B06B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaRestApiConstructGETGetCaseActionsInvokeLambdaPermissionDC3D6F80": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetCaseActions7D38DBB9",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructGETGetCaseAuditB3A2988F": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeabaselambdaroleDefaultPolicy8449FBB9",
        "DeaRestApiConstructdeabaselambdarole9EA2B06B",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require access to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOWED_ORIGINS": "https://localhost:3001",
            "AUDIT_DOWNLOAD_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeaauditdownloadrole41E0E771",
                "Arn",
              ],
            },
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AWS_PARTITION": Object {
              "Ref": "AWS::Partition",
            },
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
            },
            "DATASETS_ROLE": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeadatasetsrole293FB411",
                "Arn",
              ],
            },
            "KEY_ARN": Object {
              "Fn::GetAtt": Array [
                "testKey1CDDDD5E",
                "Arn",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "SAMESITE": "None",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendConstructDeaTableB48721A0",
            },
            "TRAIL_LOG_GROUP_NAME": Object {
              "Ref": "deaTrailLogs0A0531F5",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 2048,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeabaselambdarole9EA2B06B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaRestApiConstructGETGetCaseAuditInvokeLambdaPermission202CA1E9": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetCaseAuditB3A2988F",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructGETGetCaseDetails37F7FEA5": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeabaselambdaroleDefaultPolicy8449FBB9",
        "DeaRestApiConstructdeabaselambdarole9EA2B06B",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require access to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOWED_ORIGINS": "https://localhost:3001",
            "AUDIT_DOWNLOAD_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeaauditdownloadrole41E0E771",
                "Arn",
              ],
            },
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AWS_PARTITION": Object {
              "Ref": "AWS::Partition",
            },
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
            },
            "DATASETS_ROLE": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeadatasetsrole293FB411",
                "Arn",
              ],
            },
            "KEY_ARN": Object {
              "Fn::GetAtt": Array [
                "testKey1CDDDD5E",
                "Arn",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "SAMESITE": "None",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendConstructDeaTableB48721A0",
            },
            "TRAIL_LOG_GROUP_NAME": Object {
              "Ref": "deaTrailLogs0A0531F5",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 2048,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeabaselambdarole9EA2B06B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaRestApiConstructGETGetCaseDetailsInvokeLambdaPermission4CA55C3D": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetCaseDetails37F7FEA5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructGETGetCaseFileAuditEC14BB8D": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeabaselambdaroleDefaultPolicy8449FBB9",
        "DeaRestApiConstructdeabaselambdarole9EA2B06B",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require access to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOWED_ORIGINS": "https://localhost:3001",
            "AUDIT_DOWNLOAD_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeaauditdownloadrole41E0E771",
                "Arn",
              ],
            },
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AWS_PARTITION": Object {
              "Ref": "AWS::Partition",
            },
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
            },
            "DATASETS_ROLE": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeadatasetsrole293FB411",
                "Arn",
              ],
            },
            "KEY_ARN": Object {
              "Fn::GetAtt": Array [
                "testKey1CDDDD5E",
                "Arn",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "SAMESITE": "None",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendConstructDeaTableB48721A0",
            },
            "TRAIL_LOG_GROUP_NAME": Object {
              "Ref": "deaTrailLogs0A0531F5",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 2048,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeabaselambdarole9EA2B06B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaRestApiConstructGETGetCaseFileAuditInvokeLambdaPermission827B13F3": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetCaseFileAuditEC14BB8D",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructGETGetCaseFileDetailAC2C6003": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeabaselambdaroleDefaultPolicy8449FBB9",
        "DeaRestApiConstructdeabaselambdarole9EA2B06B",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require access to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOWED_ORIGINS": "https://localhost:3001",
            "AUDIT_DOWNLOAD_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeaauditdownloadrole41E0E771",
                "Arn",
              ],
            },
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AWS_PARTITION": Object {
              "Ref": "AWS::Partition",
            },
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
            },
            "DATASETS_ROLE": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeadatasetsrole293FB411",
                "Arn",
              ],
            },
            "KEY_ARN": Object {
              "Fn::GetAtt": Array [
                "testKey1CDDDD5E",
                "Arn",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "SAMESITE": "None",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendConstructDeaTableB48721A0",
            },
            "TRAIL_LOG_GROUP_NAME": Object {
              "Ref": "deaTrailLogs0A0531F5",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 2048,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeabaselambdarole9EA2B06B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaRestApiConstructGETGetCaseFileDetailInvokeLambdaPermission45EAF685": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetCaseFileDetailAC2C6003",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructGETGetCaseFilesB601FAF5": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeabaselambdaroleDefaultPolicy8449FBB9",
        "DeaRestApiConstructdeabaselambdarole9EA2B06B",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require access to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOWED_ORIGINS": "https://localhost:3001",
            "AUDIT_DOWNLOAD_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeaauditdownloadrole41E0E771",
                "Arn",
              ],
            },
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AWS_PARTITION": Object {
              "Ref": "AWS::Partition",
            },
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
            },
            "DATASETS_ROLE": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeadatasetsrole293FB411",
                "Arn",
              ],
            },
            "KEY_ARN": Object {
              "Fn::GetAtt": Array [
                "testKey1CDDDD5E",
                "Arn",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "SAMESITE": "None",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendConstructDeaTableB48721A0",
            },
            "TRAIL_LOG_GROUP_NAME": Object {
              "Ref": "deaTrailLogs0A0531F5",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 2048,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeabaselambdarole9EA2B06B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaRestApiConstructGETGetCaseFilesInvokeLambdaPermission5C84CB5D": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetCaseFilesB601FAF5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructGETGetLoginUrlA95063AD": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeaauthlambdaroleDefaultPolicy15F6BB8F",
        "DeaRestApiConstructdeaauthlambdarole2081E9E6",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require access to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOWED_ORIGINS": "https://localhost:3001",
            "AUDIT_DOWNLOAD_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeaauditdownloadrole41E0E771",
                "Arn",
              ],
            },
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AWS_PARTITION": Object {
              "Ref": "AWS::Partition",
            },
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
            },
            "DATASETS_ROLE": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeadatasetsrole293FB411",
                "Arn",
              ],
            },
            "KEY_ARN": Object {
              "Fn::GetAtt": Array [
                "testKey1CDDDD5E",
                "Arn",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "SAMESITE": "None",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendConstructDeaTableB48721A0",
            },
            "TRAIL_LOG_GROUP_NAME": Object {
              "Ref": "deaTrailLogs0A0531F5",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 2048,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeaauthlambdarole2081E9E6",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaRestApiConstructGETGetLoginUrlInvokeLambdaPermission1141DFD7": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetLoginUrlA95063AD",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructGETGetLogoutUrl77EA9407": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeaauthlambdaroleDefaultPolicy15F6BB8F",
        "DeaRestApiConstructdeaauthlambdarole2081E9E6",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require access to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOWED_ORIGINS": "https://localhost:3001",
            "AUDIT_DOWNLOAD_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeaauditdownloadrole41E0E771",
                "Arn",
              ],
            },
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AWS_PARTITION": Object {
              "Ref": "AWS::Partition",
            },
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
            },
            "DATASETS_ROLE": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeadatasetsrole293FB411",
                "Arn",
              ],
            },
            "KEY_ARN": Object {
              "Fn::GetAtt": Array [
                "testKey1CDDDD5E",
                "Arn",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "SAMESITE": "None",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendConstructDeaTableB48721A0",
            },
            "TRAIL_LOG_GROUP_NAME": Object {
              "Ref": "deaTrailLogs0A0531F5",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 2048,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeaauthlambdarole2081E9E6",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaRestApiConstructGETGetLogoutUrlInvokeLambdaPermission58560981": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetLogoutUrl77EA9407",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructGETGetMyCasesBB9194E7": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeabaselambdaroleDefaultPolicy8449FBB9",
        "DeaRestApiConstructdeabaselambdarole9EA2B06B",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require access to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOWED_ORIGINS": "https://localhost:3001",
            "AUDIT_DOWNLOAD_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeaauditdownloadrole41E0E771",
                "Arn",
              ],
            },
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AWS_PARTITION": Object {
              "Ref": "AWS::Partition",
            },
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
            },
            "DATASETS_ROLE": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeadatasetsrole293FB411",
                "Arn",
              ],
            },
            "KEY_ARN": Object {
              "Fn::GetAtt": Array [
                "testKey1CDDDD5E",
                "Arn",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "SAMESITE": "None",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendConstructDeaTableB48721A0",
            },
            "TRAIL_LOG_GROUP_NAME": Object {
              "Ref": "deaTrailLogs0A0531F5",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 2048,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeabaselambdarole9EA2B06B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaRestApiConstructGETGetMyCasesInvokeLambdaPermissionD504224D": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetMyCasesBB9194E7",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructGETGetScopedCaseInformationC679F03C": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeabaselambdaroleDefaultPolicy8449FBB9",
        "DeaRestApiConstructdeabaselambdarole9EA2B06B",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require access to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOWED_ORIGINS": "https://localhost:3001",
            "AUDIT_DOWNLOAD_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeaauditdownloadrole41E0E771",
                "Arn",
              ],
            },
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AWS_PARTITION": Object {
              "Ref": "AWS::Partition",
            },
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
            },
            "DATASETS_ROLE": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeadatasetsrole293FB411",
                "Arn",
              ],
            },
            "KEY_ARN": Object {
              "Fn::GetAtt": Array [
                "testKey1CDDDD5E",
                "Arn",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "SAMESITE": "None",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendConstructDeaTableB48721A0",
            },
            "TRAIL_LOG_GROUP_NAME": Object {
              "Ref": "deaTrailLogs0A0531F5",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 2048,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeabaselambdarole9EA2B06B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaRestApiConstructGETGetScopedCaseInformationInvokeLambdaPermission45B6AECB": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetScopedCaseInformationC679F03C",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructGETGetSystemAuditE4C86CC7": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeabaselambdaroleDefaultPolicy8449FBB9",
        "DeaRestApiConstructdeabaselambdarole9EA2B06B",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require access to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOWED_ORIGINS": "https://localhost:3001",
            "AUDIT_DOWNLOAD_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeaauditdownloadrole41E0E771",
                "Arn",
              ],
            },
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AWS_PARTITION": Object {
              "Ref": "AWS::Partition",
            },
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
            },
            "DATASETS_ROLE": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeadatasetsrole293FB411",
                "Arn",
              ],
            },
            "KEY_ARN": Object {
              "Fn::GetAtt": Array [
                "testKey1CDDDD5E",
                "Arn",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "SAMESITE": "None",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendConstructDeaTableB48721A0",
            },
            "TRAIL_LOG_GROUP_NAME": Object {
              "Ref": "deaTrailLogs0A0531F5",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 2048,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeabaselambdarole9EA2B06B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaRestApiConstructGETGetSystemAuditInvokeLambdaPermissionFCD958AC": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetSystemAuditE4C86CC7",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructGETGetUserAudit8C04FC39": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeabaselambdaroleDefaultPolicy8449FBB9",
        "DeaRestApiConstructdeabaselambdarole9EA2B06B",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require access to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOWED_ORIGINS": "https://localhost:3001",
            "AUDIT_DOWNLOAD_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeaauditdownloadrole41E0E771",
                "Arn",
              ],
            },
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AWS_PARTITION": Object {
              "Ref": "AWS::Partition",
            },
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
            },
            "DATASETS_ROLE": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeadatasetsrole293FB411",
                "Arn",
              ],
            },
            "KEY_ARN": Object {
              "Fn::GetAtt": Array [
                "testKey1CDDDD5E",
                "Arn",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "SAMESITE": "None",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendConstructDeaTableB48721A0",
            },
            "TRAIL_LOG_GROUP_NAME": Object {
              "Ref": "deaTrailLogs0A0531F5",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 2048,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeabaselambdarole9EA2B06B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaRestApiConstructGETGetUserAuditInvokeLambdaPermissionFA9CD587": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetUserAudit8C04FC39",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructGETGetUsersFromCase05D0A5BE": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeabaselambdaroleDefaultPolicy8449FBB9",
        "DeaRestApiConstructdeabaselambdarole9EA2B06B",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require access to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOWED_ORIGINS": "https://localhost:3001",
            "AUDIT_DOWNLOAD_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeaauditdownloadrole41E0E771",
                "Arn",
              ],
            },
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AWS_PARTITION": Object {
              "Ref": "AWS::Partition",
            },
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
            },
            "DATASETS_ROLE": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeadatasetsrole293FB411",
                "Arn",
              ],
            },
            "KEY_ARN": Object {
              "Fn::GetAtt": Array [
                "testKey1CDDDD5E",
                "Arn",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "SAMESITE": "None",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendConstructDeaTableB48721A0",
            },
            "TRAIL_LOG_GROUP_NAME": Object {
              "Ref": "deaTrailLogs0A0531F5",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 2048,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeabaselambdarole9EA2B06B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaRestApiConstructGETGetUsersFromCaseInvokeLambdaPermissionF797EBD7": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetUsersFromCase05D0A5BE",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructPOSTCreateCase203FC2B5": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeabaselambdaroleDefaultPolicy8449FBB9",
        "DeaRestApiConstructdeabaselambdarole9EA2B06B",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require access to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOWED_ORIGINS": "https://localhost:3001",
            "AUDIT_DOWNLOAD_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeaauditdownloadrole41E0E771",
                "Arn",
              ],
            },
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AWS_PARTITION": Object {
              "Ref": "AWS::Partition",
            },
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
            },
            "DATASETS_ROLE": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeadatasetsrole293FB411",
                "Arn",
              ],
            },
            "KEY_ARN": Object {
              "Fn::GetAtt": Array [
                "testKey1CDDDD5E",
                "Arn",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "SAMESITE": "None",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendConstructDeaTableB48721A0",
            },
            "TRAIL_LOG_GROUP_NAME": Object {
              "Ref": "deaTrailLogs0A0531F5",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 2048,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeabaselambdarole9EA2B06B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaRestApiConstructPOSTCreateCaseInvokeLambdaPermission8F8B7978": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPOSTCreateCase203FC2B5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructPOSTCreateCaseOwner07019161": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeabaselambdaroleDefaultPolicy8449FBB9",
        "DeaRestApiConstructdeabaselambdarole9EA2B06B",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require access to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOWED_ORIGINS": "https://localhost:3001",
            "AUDIT_DOWNLOAD_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeaauditdownloadrole41E0E771",
                "Arn",
              ],
            },
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AWS_PARTITION": Object {
              "Ref": "AWS::Partition",
            },
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
            },
            "DATASETS_ROLE": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeadatasetsrole293FB411",
                "Arn",
              ],
            },
            "KEY_ARN": Object {
              "Fn::GetAtt": Array [
                "testKey1CDDDD5E",
                "Arn",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "SAMESITE": "None",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendConstructDeaTableB48721A0",
            },
            "TRAIL_LOG_GROUP_NAME": Object {
              "Ref": "deaTrailLogs0A0531F5",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 2048,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeabaselambdarole9EA2B06B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaRestApiConstructPOSTCreateCaseOwnerInvokeLambdaPermission7875B9D5": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPOSTCreateCaseOwner07019161",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructPOSTGetAuthenticationToken7831CF5E": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeaauthlambdaroleDefaultPolicy15F6BB8F",
        "DeaRestApiConstructdeaauthlambdarole2081E9E6",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require access to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOWED_ORIGINS": "https://localhost:3001",
            "AUDIT_DOWNLOAD_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeaauditdownloadrole41E0E771",
                "Arn",
              ],
            },
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AWS_PARTITION": Object {
              "Ref": "AWS::Partition",
            },
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
            },
            "DATASETS_ROLE": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeadatasetsrole293FB411",
                "Arn",
              ],
            },
            "KEY_ARN": Object {
              "Fn::GetAtt": Array [
                "testKey1CDDDD5E",
                "Arn",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "SAMESITE": "None",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendConstructDeaTableB48721A0",
            },
            "TRAIL_LOG_GROUP_NAME": Object {
              "Ref": "deaTrailLogs0A0531F5",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 2048,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeaauthlambdarole2081E9E6",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaRestApiConstructPOSTGetAuthenticationTokenInvokeLambdaPermission5E682E3A": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPOSTGetAuthenticationToken7831CF5E",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructPOSTInitiateCaseFileUpload4072CE29": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeabaselambdaroleDefaultPolicy8449FBB9",
        "DeaRestApiConstructdeabaselambdarole9EA2B06B",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require access to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOWED_ORIGINS": "https://localhost:3001",
            "AUDIT_DOWNLOAD_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeaauditdownloadrole41E0E771",
                "Arn",
              ],
            },
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AWS_PARTITION": Object {
              "Ref": "AWS::Partition",
            },
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
            },
            "DATASETS_ROLE": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeadatasetsrole293FB411",
                "Arn",
              ],
            },
            "KEY_ARN": Object {
              "Fn::GetAtt": Array [
                "testKey1CDDDD5E",
                "Arn",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "SAMESITE": "None",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendConstructDeaTableB48721A0",
            },
            "TRAIL_LOG_GROUP_NAME": Object {
              "Ref": "deaTrailLogs0A0531F5",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 2048,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeabaselambdarole9EA2B06B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaRestApiConstructPOSTInitiateCaseFileUploadInvokeLambdaPermission25B328D7": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPOSTInitiateCaseFileUpload4072CE29",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructPOSTInviteUserToCaseE52152F4": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeabaselambdaroleDefaultPolicy8449FBB9",
        "DeaRestApiConstructdeabaselambdarole9EA2B06B",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require access to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOWED_ORIGINS": "https://localhost:3001",
            "AUDIT_DOWNLOAD_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeaauditdownloadrole41E0E771",
                "Arn",
              ],
            },
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AWS_PARTITION": Object {
              "Ref": "AWS::Partition",
            },
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
            },
            "DATASETS_ROLE": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeadatasetsrole293FB411",
                "Arn",
              ],
            },
            "KEY_ARN": Object {
              "Fn::GetAtt": Array [
                "testKey1CDDDD5E",
                "Arn",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "SAMESITE": "None",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendConstructDeaTableB48721A0",
            },
            "TRAIL_LOG_GROUP_NAME": Object {
              "Ref": "deaTrailLogs0A0531F5",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 2048,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeabaselambdarole9EA2B06B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaRestApiConstructPOSTInviteUserToCaseInvokeLambdaPermissionC8244A1C": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPOSTInviteUserToCaseE52152F4",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructPOSTRefreshIdToken16E1721D": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeaauthlambdaroleDefaultPolicy15F6BB8F",
        "DeaRestApiConstructdeaauthlambdarole2081E9E6",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require access to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOWED_ORIGINS": "https://localhost:3001",
            "AUDIT_DOWNLOAD_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeaauditdownloadrole41E0E771",
                "Arn",
              ],
            },
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AWS_PARTITION": Object {
              "Ref": "AWS::Partition",
            },
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
            },
            "DATASETS_ROLE": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeadatasetsrole293FB411",
                "Arn",
              ],
            },
            "KEY_ARN": Object {
              "Fn::GetAtt": Array [
                "testKey1CDDDD5E",
                "Arn",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "SAMESITE": "None",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendConstructDeaTableB48721A0",
            },
            "TRAIL_LOG_GROUP_NAME": Object {
              "Ref": "deaTrailLogs0A0531F5",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 2048,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeaauthlambdarole2081E9E6",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaRestApiConstructPOSTRefreshIdTokenInvokeLambdaPermissionD66F9683": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPOSTRefreshIdToken16E1721D",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructPOSTRequestCaseAudit31F3AA5B": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeabaselambdaroleDefaultPolicy8449FBB9",
        "DeaRestApiConstructdeabaselambdarole9EA2B06B",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require access to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOWED_ORIGINS": "https://localhost:3001",
            "AUDIT_DOWNLOAD_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeaauditdownloadrole41E0E771",
                "Arn",
              ],
            },
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AWS_PARTITION": Object {
              "Ref": "AWS::Partition",
            },
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
            },
            "DATASETS_ROLE": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeadatasetsrole293FB411",
                "Arn",
              ],
            },
            "KEY_ARN": Object {
              "Fn::GetAtt": Array [
                "testKey1CDDDD5E",
                "Arn",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "SAMESITE": "None",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendConstructDeaTableB48721A0",
            },
            "TRAIL_LOG_GROUP_NAME": Object {
              "Ref": "deaTrailLogs0A0531F5",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 2048,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeabaselambdarole9EA2B06B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaRestApiConstructPOSTRequestCaseAuditInvokeLambdaPermission6EDA06D4": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPOSTRequestCaseAudit31F3AA5B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructPOSTRequestCaseFileAuditB217F48B": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeabaselambdaroleDefaultPolicy8449FBB9",
        "DeaRestApiConstructdeabaselambdarole9EA2B06B",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require access to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOWED_ORIGINS": "https://localhost:3001",
            "AUDIT_DOWNLOAD_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeaauditdownloadrole41E0E771",
                "Arn",
              ],
            },
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AWS_PARTITION": Object {
              "Ref": "AWS::Partition",
            },
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
            },
            "DATASETS_ROLE": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeadatasetsrole293FB411",
                "Arn",
              ],
            },
            "KEY_ARN": Object {
              "Fn::GetAtt": Array [
                "testKey1CDDDD5E",
                "Arn",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "SAMESITE": "None",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendConstructDeaTableB48721A0",
            },
            "TRAIL_LOG_GROUP_NAME": Object {
              "Ref": "deaTrailLogs0A0531F5",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 2048,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeabaselambdarole9EA2B06B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaRestApiConstructPOSTRequestCaseFileAuditInvokeLambdaPermission1BAE7400": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPOSTRequestCaseFileAuditB217F48B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructPOSTRequestSystemAuditF9687588": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeabaselambdaroleDefaultPolicy8449FBB9",
        "DeaRestApiConstructdeabaselambdarole9EA2B06B",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require access to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOWED_ORIGINS": "https://localhost:3001",
            "AUDIT_DOWNLOAD_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeaauditdownloadrole41E0E771",
                "Arn",
              ],
            },
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AWS_PARTITION": Object {
              "Ref": "AWS::Partition",
            },
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
            },
            "DATASETS_ROLE": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeadatasetsrole293FB411",
                "Arn",
              ],
            },
            "KEY_ARN": Object {
              "Fn::GetAtt": Array [
                "testKey1CDDDD5E",
                "Arn",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "SAMESITE": "None",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendConstructDeaTableB48721A0",
            },
            "TRAIL_LOG_GROUP_NAME": Object {
              "Ref": "deaTrailLogs0A0531F5",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 2048,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeabaselambdarole9EA2B06B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaRestApiConstructPOSTRequestSystemAuditInvokeLambdaPermission31C9D7B9": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPOSTRequestSystemAuditF9687588",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructPOSTRequestUserAudit18A97521": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeabaselambdaroleDefaultPolicy8449FBB9",
        "DeaRestApiConstructdeabaselambdarole9EA2B06B",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require access to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOWED_ORIGINS": "https://localhost:3001",
            "AUDIT_DOWNLOAD_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeaauditdownloadrole41E0E771",
                "Arn",
              ],
            },
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AWS_PARTITION": Object {
              "Ref": "AWS::Partition",
            },
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
            },
            "DATASETS_ROLE": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeadatasetsrole293FB411",
                "Arn",
              ],
            },
            "KEY_ARN": Object {
              "Fn::GetAtt": Array [
                "testKey1CDDDD5E",
                "Arn",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "SAMESITE": "None",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendConstructDeaTableB48721A0",
            },
            "TRAIL_LOG_GROUP_NAME": Object {
              "Ref": "deaTrailLogs0A0531F5",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 2048,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeabaselambdarole9EA2B06B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaRestApiConstructPOSTRequestUserAuditInvokeLambdaPermission8DD31076": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPOSTRequestUserAudit18A97521",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructPOSTRevokeAuthToken4994A05B": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeaauthlambdaroleDefaultPolicy15F6BB8F",
        "DeaRestApiConstructdeaauthlambdarole2081E9E6",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require access to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOWED_ORIGINS": "https://localhost:3001",
            "AUDIT_DOWNLOAD_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeaauditdownloadrole41E0E771",
                "Arn",
              ],
            },
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AWS_PARTITION": Object {
              "Ref": "AWS::Partition",
            },
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
            },
            "DATASETS_ROLE": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeadatasetsrole293FB411",
                "Arn",
              ],
            },
            "KEY_ARN": Object {
              "Fn::GetAtt": Array [
                "testKey1CDDDD5E",
                "Arn",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "SAMESITE": "None",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendConstructDeaTableB48721A0",
            },
            "TRAIL_LOG_GROUP_NAME": Object {
              "Ref": "deaTrailLogs0A0531F5",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 2048,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeaauthlambdarole2081E9E6",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaRestApiConstructPOSTRevokeAuthTokenInvokeLambdaPermission7257B082": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPOSTRevokeAuthToken4994A05B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructPUTCompleteCaseFileUpload51639C21": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeabaselambdaroleDefaultPolicy8449FBB9",
        "DeaRestApiConstructdeabaselambdarole9EA2B06B",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require access to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOWED_ORIGINS": "https://localhost:3001",
            "AUDIT_DOWNLOAD_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeaauditdownloadrole41E0E771",
                "Arn",
              ],
            },
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AWS_PARTITION": Object {
              "Ref": "AWS::Partition",
            },
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
            },
            "DATASETS_ROLE": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeadatasetsrole293FB411",
                "Arn",
              ],
            },
            "KEY_ARN": Object {
              "Fn::GetAtt": Array [
                "testKey1CDDDD5E",
                "Arn",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "SAMESITE": "None",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendConstructDeaTableB48721A0",
            },
            "TRAIL_LOG_GROUP_NAME": Object {
              "Ref": "deaTrailLogs0A0531F5",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 2048,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeabaselambdarole9EA2B06B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaRestApiConstructPUTCompleteCaseFileUploadInvokeLambdaPermission3B49279E": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPUTCompleteCaseFileUpload51639C21",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructPUTModifyUserCasePermissions3887B3D5": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeabaselambdaroleDefaultPolicy8449FBB9",
        "DeaRestApiConstructdeabaselambdarole9EA2B06B",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require access to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOWED_ORIGINS": "https://localhost:3001",
            "AUDIT_DOWNLOAD_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeaauditdownloadrole41E0E771",
                "Arn",
              ],
            },
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AWS_PARTITION": Object {
              "Ref": "AWS::Partition",
            },
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
            },
            "DATASETS_ROLE": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeadatasetsrole293FB411",
                "Arn",
              ],
            },
            "KEY_ARN": Object {
              "Fn::GetAtt": Array [
                "testKey1CDDDD5E",
                "Arn",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "SAMESITE": "None",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendConstructDeaTableB48721A0",
            },
            "TRAIL_LOG_GROUP_NAME": Object {
              "Ref": "deaTrailLogs0A0531F5",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 2048,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeabaselambdarole9EA2B06B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaRestApiConstructPUTModifyUserCasePermissionsInvokeLambdaPermission8D1FA2FC": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPUTModifyUserCasePermissions3887B3D5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructPUTRestoreCaseFile94160087": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeabaselambdaroleDefaultPolicy8449FBB9",
        "DeaRestApiConstructdeabaselambdarole9EA2B06B",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require access to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOWED_ORIGINS": "https://localhost:3001",
            "AUDIT_DOWNLOAD_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeaauditdownloadrole41E0E771",
                "Arn",
              ],
            },
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AWS_PARTITION": Object {
              "Ref": "AWS::Partition",
            },
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
            },
            "DATASETS_ROLE": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeadatasetsrole293FB411",
                "Arn",
              ],
            },
            "KEY_ARN": Object {
              "Fn::GetAtt": Array [
                "testKey1CDDDD5E",
                "Arn",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "SAMESITE": "None",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendConstructDeaTableB48721A0",
            },
            "TRAIL_LOG_GROUP_NAME": Object {
              "Ref": "deaTrailLogs0A0531F5",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 2048,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeabaselambdarole9EA2B06B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaRestApiConstructPUTRestoreCaseFileInvokeLambdaPermissionE8916967": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPUTRestoreCaseFile94160087",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructPUTUpdateCaseDetailsCAA16781": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeabaselambdaroleDefaultPolicy8449FBB9",
        "DeaRestApiConstructdeabaselambdarole9EA2B06B",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require access to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOWED_ORIGINS": "https://localhost:3001",
            "AUDIT_DOWNLOAD_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeaauditdownloadrole41E0E771",
                "Arn",
              ],
            },
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AWS_PARTITION": Object {
              "Ref": "AWS::Partition",
            },
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
            },
            "DATASETS_ROLE": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeadatasetsrole293FB411",
                "Arn",
              ],
            },
            "KEY_ARN": Object {
              "Fn::GetAtt": Array [
                "testKey1CDDDD5E",
                "Arn",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "SAMESITE": "None",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendConstructDeaTableB48721A0",
            },
            "TRAIL_LOG_GROUP_NAME": Object {
              "Ref": "deaTrailLogs0A0531F5",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 2048,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeabaselambdarole9EA2B06B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaRestApiConstructPUTUpdateCaseDetailsInvokeLambdaPermission1B8F6EF1": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPUTUpdateCaseDetailsCAA16781",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructPUTUpdateCaseStatusBE885A0D": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeabaselambdaroleDefaultPolicy8449FBB9",
        "DeaRestApiConstructdeabaselambdarole9EA2B06B",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require access to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "ALLOWED_ORIGINS": "https://localhost:3001",
            "AUDIT_DOWNLOAD_ROLE_ARN": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeaauditdownloadrole41E0E771",
                "Arn",
              ],
            },
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "AWS_PARTITION": Object {
              "Ref": "AWS::Partition",
            },
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
            },
            "DATASETS_ROLE": Object {
              "Fn::GetAtt": Array [
                "DeaRestApiConstructdeadatasetsrole293FB411",
                "Arn",
              ],
            },
            "KEY_ARN": Object {
              "Fn::GetAtt": Array [
                "testKey1CDDDD5E",
                "Arn",
              ],
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "SAMESITE": "None",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendConstructDeaTableB48721A0",
            },
            "TRAIL_LOG_GROUP_NAME": Object {
              "Ref": "deaTrailLogs0A0531F5",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 2048,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeabaselambdarole9EA2B06B",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 20,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaRestApiConstructPUTUpdateCaseStatusInvokeLambdaPermissionC5C63C79": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPUTUpdateCaseStatusBE885A0D",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceAccount": Object {
          "Ref": "AWS::AccountId",
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructUpdateBucketCORS03A74B63D": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "DeaRestApiConstructdeaapiAccount1E82C2B3",
        "DeaRestApiConstructdeaapiCloudWatchRole49932FD9",
        "DeaRestApiConstructdeaapiDEAUsagePlanBC29ADF7",
        "DeaRestApiConstructdeaapiauthauthCodeOPTIONS886A6DD8",
        "DeaRestApiConstructdeaapiauthauthCodeFF00F04A",
        "DeaRestApiConstructdeaapiauthauthCodetokenOPTIONSE3AA1727",
        "DeaRestApiConstructdeaapiauthauthCodetokenPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTauthauthCodetokenA42BE3E6",
        "DeaRestApiConstructdeaapiauthauthCodetokenPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTauthauthCodetokenE48A5552",
        "DeaRestApiConstructdeaapiauthauthCodetokenPOST81D6F43B",
        "DeaRestApiConstructdeaapiauthauthCodetokenC94184D9",
        "DeaRestApiConstructdeaapiauthloginUrlGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETauthloginUrl21F61114",
        "DeaRestApiConstructdeaapiauthloginUrlGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETauthloginUrl306C3EFF",
        "DeaRestApiConstructdeaapiauthloginUrlGET4F783A6D",
        "DeaRestApiConstructdeaapiauthloginUrlOPTIONSFCC225D0",
        "DeaRestApiConstructdeaapiauthloginUrlA5F3FDDA",
        "DeaRestApiConstructdeaapiauthlogoutUrlGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETauthlogoutUrlF8A5551B",
        "DeaRestApiConstructdeaapiauthlogoutUrlGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETauthlogoutUrl42120548",
        "DeaRestApiConstructdeaapiauthlogoutUrlGETC563ACE3",
        "DeaRestApiConstructdeaapiauthlogoutUrlOPTIONS3CD200C5",
        "DeaRestApiConstructdeaapiauthlogoutUrlC5CCF412",
        "DeaRestApiConstructdeaapiauthOPTIONSF807407C",
        "DeaRestApiConstructdeaapiauthrefreshTokenOPTIONS265AFE2E",
        "DeaRestApiConstructdeaapiauthrefreshTokenPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTauthrefreshToken099A885C",
        "DeaRestApiConstructdeaapiauthrefreshTokenPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTauthrefreshToken36514E33",
        "DeaRestApiConstructdeaapiauthrefreshTokenPOST4BC88F2D",
        "DeaRestApiConstructdeaapiauthrefreshToken91363B5F",
        "DeaRestApiConstructdeaapiauthE4846931",
        "DeaRestApiConstructdeaapiauthrevokeTokenOPTIONS8E56248E",
        "DeaRestApiConstructdeaapiauthrevokeTokenPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTauthrevokeToken13FAD07F",
        "DeaRestApiConstructdeaapiauthrevokeTokenPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTauthrevokeTokenD51670A5",
        "DeaRestApiConstructdeaapiauthrevokeTokenPOSTD4C71CFF",
        "DeaRestApiConstructdeaapiauthrevokeTokenF456D19A",
        "DeaRestApiConstructdeaapiavailableEndpointsGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETavailableEndpointsBF1A4F6F",
        "DeaRestApiConstructdeaapiavailableEndpointsGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETavailableEndpoints4616DB7F",
        "DeaRestApiConstructdeaapiavailableEndpointsGET587EF9CF",
        "DeaRestApiConstructdeaapiavailableEndpointsOPTIONS52EA7289",
        "DeaRestApiConstructdeaapiavailableEndpointsF75CB106",
        "DeaRestApiConstructdeaapicasescaseIdactionsGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdactionsE4633CE0",
        "DeaRestApiConstructdeaapicasescaseIdactionsGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdactionsFAD4690C",
        "DeaRestApiConstructdeaapicasescaseIdactionsGETDE6D1CEA",
        "DeaRestApiConstructdeaapicasescaseIdactionsOPTIONSE258076A",
        "DeaRestApiConstructdeaapicasescaseIdactions4A0D9ED8",
        "DeaRestApiConstructdeaapicasescaseIdauditauditIdcsvGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdauditauditIdcsv8740F849",
        "DeaRestApiConstructdeaapicasescaseIdauditauditIdcsvGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdauditauditIdcsvC4D46A81",
        "DeaRestApiConstructdeaapicasescaseIdauditauditIdcsvGET26466F30",
        "DeaRestApiConstructdeaapicasescaseIdauditauditIdcsvOPTIONS428A5C73",
        "DeaRestApiConstructdeaapicasescaseIdauditauditIdcsvF0D4AAEB",
        "DeaRestApiConstructdeaapicasescaseIdauditauditIdOPTIONS517DE0AB",
        "DeaRestApiConstructdeaapicasescaseIdauditauditId33263B8C",
        "DeaRestApiConstructdeaapicasescaseIdauditOPTIONSDEA3525B",
        "DeaRestApiConstructdeaapicasescaseIdauditPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdaudit10091757",
        "DeaRestApiConstructdeaapicasescaseIdauditPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdaudit5D5BA22A",
        "DeaRestApiConstructdeaapicasescaseIdauditPOSTE1FBCE9C",
        "DeaRestApiConstructdeaapicasescaseIdaudit16BF85CD",
        "DeaRestApiConstructdeaapicasescaseIddetailsDELETEApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4DELETEcasescaseIddetails918BFC1A",
        "DeaRestApiConstructdeaapicasescaseIddetailsDELETEApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4DELETEcasescaseIddetails2FC44B5A",
        "DeaRestApiConstructdeaapicasescaseIddetailsDELETED0F47C2D",
        "DeaRestApiConstructdeaapicasescaseIddetailsGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIddetails7EEFD469",
        "DeaRestApiConstructdeaapicasescaseIddetailsGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIddetails44CA90D4",
        "DeaRestApiConstructdeaapicasescaseIddetailsGET0AC0D58C",
        "DeaRestApiConstructdeaapicasescaseIddetailsOPTIONSA19CA131",
        "DeaRestApiConstructdeaapicasescaseIddetailsPUTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIddetailsD3729DE8",
        "DeaRestApiConstructdeaapicasescaseIddetailsPUTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIddetails7B2B7A41",
        "DeaRestApiConstructdeaapicasescaseIddetailsPUT33A3214F",
        "DeaRestApiConstructdeaapicasescaseIddetailsBD77A885",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdcsvGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesfileIdauditauditIdcsv61B26B23",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdcsvGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesfileIdauditauditIdcsvA8F10AD2",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdcsvGET502B4685",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdcsvOPTIONS5D0C778E",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdcsv94975A46",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdOPTIONSDBE821E3",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdAF04FFD1",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditOPTIONS08DD3796",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdfilesfileIdaudit5562DDDE",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdfilesfileIdauditF20DF571",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditPOST3CAF58FE",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdaudit231DCFA8",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesfileIdcontents8F8D422E",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesfileIdcontents28CE2C11",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsGET4172E867",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsOPTIONSC1A05A50",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsPUTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdfilesfileIdcontents638F2797",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsPUTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdfilesfileIdcontentsC77F4949",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsPUTF371EF84",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsDFF6E865",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdinfoGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesfileIdinfoBE59735B",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdinfoGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesfileIdinfoCCF7F8BF",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdinfoGETBCDCA5B2",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdinfoOPTIONS11169FBA",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdinfo2981169F",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdOPTIONS0739484E",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileId71AE0C3F",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdrestoreOPTIONSE2C15A72",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdrestorePUTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdfilesfileIdrestore95D02FC5",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdrestorePUTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdfilesfileIdrestore06D2657C",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdrestorePUTA4D1AB12",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdrestoreE48E6E5F",
        "DeaRestApiConstructdeaapicasescaseIdfilesGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesF013B694",
        "DeaRestApiConstructdeaapicasescaseIdfilesGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesA389BD7D",
        "DeaRestApiConstructdeaapicasescaseIdfilesGETB7EECD96",
        "DeaRestApiConstructdeaapicasescaseIdfilesOPTIONS18C09E02",
        "DeaRestApiConstructdeaapicasescaseIdfilesPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdfilesC519AD34",
        "DeaRestApiConstructdeaapicasescaseIdfilesPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdfiles39BF2383",
        "DeaRestApiConstructdeaapicasescaseIdfilesPOST6C02B6FD",
        "DeaRestApiConstructdeaapicasescaseIdfilesC98413A7",
        "DeaRestApiConstructdeaapicasescaseIdOPTIONS28A51954",
        "DeaRestApiConstructdeaapicasescaseIdownerOPTIONSBD3E6D71",
        "DeaRestApiConstructdeaapicasescaseIdownerPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdownerE92895A4",
        "DeaRestApiConstructdeaapicasescaseIdownerPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdowner0B48A767",
        "DeaRestApiConstructdeaapicasescaseIdownerPOSTFB8341CA",
        "DeaRestApiConstructdeaapicasescaseIdownerFA6D485F",
        "DeaRestApiConstructdeaapicasescaseId5919A5AE",
        "DeaRestApiConstructdeaapicasescaseIdscopedInformationGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdscopedInformation5EA98B1E",
        "DeaRestApiConstructdeaapicasescaseIdscopedInformationGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdscopedInformation45DD1C2C",
        "DeaRestApiConstructdeaapicasescaseIdscopedInformationGETB786FCDD",
        "DeaRestApiConstructdeaapicasescaseIdscopedInformationOPTIONSBA104BDD",
        "DeaRestApiConstructdeaapicasescaseIdscopedInformation3670B594",
        "DeaRestApiConstructdeaapicasescaseIdstatusOPTIONS0760E14E",
        "DeaRestApiConstructdeaapicasescaseIdstatusPUTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdstatus03BDFD4A",
        "DeaRestApiConstructdeaapicasescaseIdstatusPUTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdstatus787AC3AD",
        "DeaRestApiConstructdeaapicasescaseIdstatusPUT31B9CA11",
        "DeaRestApiConstructdeaapicasescaseIdstatus0AD7015F",
        "DeaRestApiConstructdeaapicasescaseIduserMembershipsGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIduserMembershipsBF5873AE",
        "DeaRestApiConstructdeaapicasescaseIduserMembershipsGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIduserMemberships87E19089",
        "DeaRestApiConstructdeaapicasescaseIduserMembershipsGETC6D66454",
        "DeaRestApiConstructdeaapicasescaseIduserMembershipsOPTIONS8FB7464B",
        "DeaRestApiConstructdeaapicasescaseIduserMembershipsPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIduserMembershipsBD47C55D",
        "DeaRestApiConstructdeaapicasescaseIduserMembershipsPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIduserMemberships7500E258",
        "DeaRestApiConstructdeaapicasescaseIduserMembershipsPOST84A13ED4",
        "DeaRestApiConstructdeaapicasescaseIduserMembershipsD5C1FDF3",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsDELETEApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4DELETEcasescaseIdusersuserIdmemberships7FD5F1FA",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsDELETEApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4DELETEcasescaseIdusersuserIdmemberships94BCD26D",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsDELETE66E50CD4",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsOPTIONS925E45CE",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsPUTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdusersuserIdmemberships4134D8D9",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsPUTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdusersuserIdmemberships748F3883",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsPUT67F6E361",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdmemberships2E2BE7E6",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdOPTIONS15B78F29",
        "DeaRestApiConstructdeaapicasescaseIdusersuserId4ECBA1E2",
        "DeaRestApiConstructdeaapicasescaseIdusersOPTIONS61C453FB",
        "DeaRestApiConstructdeaapicasescaseIdusers13CDB0B7",
        "DeaRestApiConstructdeaapicasesallcasesGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasesallcases0A56C052",
        "DeaRestApiConstructdeaapicasesallcasesGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasesallcases8A384810",
        "DeaRestApiConstructdeaapicasesallcasesGET3D7FE7B4",
        "DeaRestApiConstructdeaapicasesallcasesOPTIONSA5C611C6",
        "DeaRestApiConstructdeaapicasesallcases5A486593",
        "DeaRestApiConstructdeaapicasesmycasesGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasesmycasesC2E61486",
        "DeaRestApiConstructdeaapicasesmycasesGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasesmycasesEA5EFE48",
        "DeaRestApiConstructdeaapicasesmycasesGETC5597167",
        "DeaRestApiConstructdeaapicasesmycasesOPTIONSE1C2DE04",
        "DeaRestApiConstructdeaapicasesmycases5E6BEFAC",
        "DeaRestApiConstructdeaapicasesOPTIONS6C23822B",
        "DeaRestApiConstructdeaapicasesPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTcasesB76BA281",
        "DeaRestApiConstructdeaapicasesPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTcases9AE2A82E",
        "DeaRestApiConstructdeaapicasesPOST0A7C65AB",
        "DeaRestApiConstructdeaapicasesC2FD1C2B",
        "DeaRestApiConstructdeaapiOPTIONSE2FADC9C",
        "DeaRestApiConstructdeaapisystemauditauditIdcsvGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETsystemauditauditIdcsv32688A4B",
        "DeaRestApiConstructdeaapisystemauditauditIdcsvGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETsystemauditauditIdcsvFC587FF9",
        "DeaRestApiConstructdeaapisystemauditauditIdcsvGETB3B09D3C",
        "DeaRestApiConstructdeaapisystemauditauditIdcsvOPTIONSBC6D4692",
        "DeaRestApiConstructdeaapisystemauditauditIdcsv3DF23375",
        "DeaRestApiConstructdeaapisystemauditauditIdOPTIONS2EADE5A9",
        "DeaRestApiConstructdeaapisystemauditauditIdB2530B9D",
        "DeaRestApiConstructdeaapisystemauditOPTIONS30FFCB3F",
        "DeaRestApiConstructdeaapisystemauditPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTsystemaudit92D5D91E",
        "DeaRestApiConstructdeaapisystemauditPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTsystemauditCB076E78",
        "DeaRestApiConstructdeaapisystemauditPOSTA0F7E161",
        "DeaRestApiConstructdeaapisystemaudit2A5DAEF8",
        "DeaRestApiConstructdeaapisystemOPTIONS2695AC39",
        "DeaRestApiConstructdeaapisystemAD98847E",
        "DeaRestApiConstructdeaapiusersuserIdauditauditIdcsvGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETusersuserIdauditauditIdcsv84743A25",
        "DeaRestApiConstructdeaapiusersuserIdauditauditIdcsvGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETusersuserIdauditauditIdcsv64381123",
        "DeaRestApiConstructdeaapiusersuserIdauditauditIdcsvGET612A031C",
        "DeaRestApiConstructdeaapiusersuserIdauditauditIdcsvOPTIONSFD04EC81",
        "DeaRestApiConstructdeaapiusersuserIdauditauditIdcsv119B9333",
        "DeaRestApiConstructdeaapiusersuserIdauditauditIdOPTIONS3652E037",
        "DeaRestApiConstructdeaapiusersuserIdauditauditId63841CC8",
        "DeaRestApiConstructdeaapiusersuserIdauditOPTIONSEE6E3674",
        "DeaRestApiConstructdeaapiusersuserIdauditPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTusersuserIdaudit6194CA37",
        "DeaRestApiConstructdeaapiusersuserIdauditPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTusersuserIdaudit3F85C343",
        "DeaRestApiConstructdeaapiusersuserIdauditPOST04D75563",
        "DeaRestApiConstructdeaapiusersuserIdaudit60684DFA",
        "DeaRestApiConstructdeaapiusersuserIdOPTIONS66B09E53",
        "DeaRestApiConstructdeaapiusersuserIdB57BE8EB",
        "DeaRestApiConstructdeaapiusersGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETusers8EAF9CF0",
        "DeaRestApiConstructdeaapiusersGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETusers52337E4B",
        "DeaRestApiConstructdeaapiusersGET45E97005",
        "DeaRestApiConstructdeaapiusersOPTIONS8F715BE6",
        "DeaRestApiConstructdeaapiusers95152658",
        "DeaApiGatewaydeaapiDeployment-[HASH REMOVED]",
        "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
        "DeaRestApiConstructdeaapi6587DDA1",
        "DeaRestApiConstructUpdateBucketCORS0CustomResourcePolicy7AB0E605",
      ],
      "Properties": Object {
        "Create": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"S3\\",\\"action\\":\\"putBucketCors\\",\\"parameters\\":{\\"Bucket\\":\\"",
              Object {
                "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
              },
              "\\",\\"CORSConfiguration\\":{\\"CORSRules\\":[{\\"AllowedOrigins\\":[\\"https://localhost:3001\\",\\"https://",
              Object {
                "Fn::Select": Array [
                  0,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Fn::Select": Array [
                          1,
                          Object {
                            "Fn::Split": Array [
                              "//",
                              Object {
                                "Fn::Join": Array [
                                  "",
                                  Array [
                                    "https://",
                                    Object {
                                      "Ref": "DeaRestApiConstructdeaapi6587DDA1",
                                    },
                                    ".execute-api.",
                                    Object {
                                      "Ref": "AWS::Region",
                                    },
                                    ".",
                                    Object {
                                      "Ref": "AWS::URLSuffix",
                                    },
                                    "/",
                                    Object {
                                      "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                                    },
                                    "/",
                                  ],
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
              "\\"],\\"AllowedMethods\\":[\\"GET\\",\\"PUT\\",\\"HEAD\\"],\\"AllowedHeaders\\":[\\"*\\"]}]}},\\"physicalResourceId\\":{\\"id\\":\\"",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "\\"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": false,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"S3\\",\\"action\\":\\"putBucketCors\\",\\"parameters\\":{\\"Bucket\\":\\"",
              Object {
                "Ref": "DeaBackendConstructS3DatasetsBucketDDF4C58A",
              },
              "\\",\\"CORSConfiguration\\":{\\"CORSRules\\":[{\\"AllowedOrigins\\":[\\"https://localhost:3001\\",\\"https://",
              Object {
                "Fn::Select": Array [
                  0,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Fn::Select": Array [
                          1,
                          Object {
                            "Fn::Split": Array [
                              "//",
                              Object {
                                "Fn::Join": Array [
                                  "",
                                  Array [
                                    "https://",
                                    Object {
                                      "Ref": "DeaRestApiConstructdeaapi6587DDA1",
                                    },
                                    ".execute-api.",
                                    Object {
                                      "Ref": "AWS::Region",
                                    },
                                    ".",
                                    Object {
                                      "Ref": "AWS::URLSuffix",
                                    },
                                    "/",
                                    Object {
                                      "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                                    },
                                    "/",
                                  ],
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
              "\\"],\\"AllowedMethods\\":[\\"GET\\",\\"PUT\\",\\"HEAD\\"],\\"AllowedHeaders\\":[\\"*\\"]}]}},\\"physicalResourceId\\":{\\"id\\":\\"",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "\\"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "DeaRestApiConstructUpdateBucketCORS0CustomResourcePolicy7AB0E605": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeaapiAccount1E82C2B3",
        "DeaRestApiConstructdeaapiCloudWatchRole49932FD9",
        "DeaRestApiConstructdeaapiDEAUsagePlanBC29ADF7",
        "DeaRestApiConstructdeaapiauthauthCodeOPTIONS886A6DD8",
        "DeaRestApiConstructdeaapiauthauthCodeFF00F04A",
        "DeaRestApiConstructdeaapiauthauthCodetokenOPTIONSE3AA1727",
        "DeaRestApiConstructdeaapiauthauthCodetokenPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTauthauthCodetokenA42BE3E6",
        "DeaRestApiConstructdeaapiauthauthCodetokenPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTauthauthCodetokenE48A5552",
        "DeaRestApiConstructdeaapiauthauthCodetokenPOST81D6F43B",
        "DeaRestApiConstructdeaapiauthauthCodetokenC94184D9",
        "DeaRestApiConstructdeaapiauthloginUrlGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETauthloginUrl21F61114",
        "DeaRestApiConstructdeaapiauthloginUrlGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETauthloginUrl306C3EFF",
        "DeaRestApiConstructdeaapiauthloginUrlGET4F783A6D",
        "DeaRestApiConstructdeaapiauthloginUrlOPTIONSFCC225D0",
        "DeaRestApiConstructdeaapiauthloginUrlA5F3FDDA",
        "DeaRestApiConstructdeaapiauthlogoutUrlGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETauthlogoutUrlF8A5551B",
        "DeaRestApiConstructdeaapiauthlogoutUrlGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETauthlogoutUrl42120548",
        "DeaRestApiConstructdeaapiauthlogoutUrlGETC563ACE3",
        "DeaRestApiConstructdeaapiauthlogoutUrlOPTIONS3CD200C5",
        "DeaRestApiConstructdeaapiauthlogoutUrlC5CCF412",
        "DeaRestApiConstructdeaapiauthOPTIONSF807407C",
        "DeaRestApiConstructdeaapiauthrefreshTokenOPTIONS265AFE2E",
        "DeaRestApiConstructdeaapiauthrefreshTokenPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTauthrefreshToken099A885C",
        "DeaRestApiConstructdeaapiauthrefreshTokenPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTauthrefreshToken36514E33",
        "DeaRestApiConstructdeaapiauthrefreshTokenPOST4BC88F2D",
        "DeaRestApiConstructdeaapiauthrefreshToken91363B5F",
        "DeaRestApiConstructdeaapiauthE4846931",
        "DeaRestApiConstructdeaapiauthrevokeTokenOPTIONS8E56248E",
        "DeaRestApiConstructdeaapiauthrevokeTokenPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTauthrevokeToken13FAD07F",
        "DeaRestApiConstructdeaapiauthrevokeTokenPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTauthrevokeTokenD51670A5",
        "DeaRestApiConstructdeaapiauthrevokeTokenPOSTD4C71CFF",
        "DeaRestApiConstructdeaapiauthrevokeTokenF456D19A",
        "DeaRestApiConstructdeaapiavailableEndpointsGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETavailableEndpointsBF1A4F6F",
        "DeaRestApiConstructdeaapiavailableEndpointsGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETavailableEndpoints4616DB7F",
        "DeaRestApiConstructdeaapiavailableEndpointsGET587EF9CF",
        "DeaRestApiConstructdeaapiavailableEndpointsOPTIONS52EA7289",
        "DeaRestApiConstructdeaapiavailableEndpointsF75CB106",
        "DeaRestApiConstructdeaapicasescaseIdactionsGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdactionsE4633CE0",
        "DeaRestApiConstructdeaapicasescaseIdactionsGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdactionsFAD4690C",
        "DeaRestApiConstructdeaapicasescaseIdactionsGETDE6D1CEA",
        "DeaRestApiConstructdeaapicasescaseIdactionsOPTIONSE258076A",
        "DeaRestApiConstructdeaapicasescaseIdactions4A0D9ED8",
        "DeaRestApiConstructdeaapicasescaseIdauditauditIdcsvGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdauditauditIdcsv8740F849",
        "DeaRestApiConstructdeaapicasescaseIdauditauditIdcsvGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdauditauditIdcsvC4D46A81",
        "DeaRestApiConstructdeaapicasescaseIdauditauditIdcsvGET26466F30",
        "DeaRestApiConstructdeaapicasescaseIdauditauditIdcsvOPTIONS428A5C73",
        "DeaRestApiConstructdeaapicasescaseIdauditauditIdcsvF0D4AAEB",
        "DeaRestApiConstructdeaapicasescaseIdauditauditIdOPTIONS517DE0AB",
        "DeaRestApiConstructdeaapicasescaseIdauditauditId33263B8C",
        "DeaRestApiConstructdeaapicasescaseIdauditOPTIONSDEA3525B",
        "DeaRestApiConstructdeaapicasescaseIdauditPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdaudit10091757",
        "DeaRestApiConstructdeaapicasescaseIdauditPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdaudit5D5BA22A",
        "DeaRestApiConstructdeaapicasescaseIdauditPOSTE1FBCE9C",
        "DeaRestApiConstructdeaapicasescaseIdaudit16BF85CD",
        "DeaRestApiConstructdeaapicasescaseIddetailsDELETEApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4DELETEcasescaseIddetails918BFC1A",
        "DeaRestApiConstructdeaapicasescaseIddetailsDELETEApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4DELETEcasescaseIddetails2FC44B5A",
        "DeaRestApiConstructdeaapicasescaseIddetailsDELETED0F47C2D",
        "DeaRestApiConstructdeaapicasescaseIddetailsGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIddetails7EEFD469",
        "DeaRestApiConstructdeaapicasescaseIddetailsGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIddetails44CA90D4",
        "DeaRestApiConstructdeaapicasescaseIddetailsGET0AC0D58C",
        "DeaRestApiConstructdeaapicasescaseIddetailsOPTIONSA19CA131",
        "DeaRestApiConstructdeaapicasescaseIddetailsPUTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIddetailsD3729DE8",
        "DeaRestApiConstructdeaapicasescaseIddetailsPUTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIddetails7B2B7A41",
        "DeaRestApiConstructdeaapicasescaseIddetailsPUT33A3214F",
        "DeaRestApiConstructdeaapicasescaseIddetailsBD77A885",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdcsvGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesfileIdauditauditIdcsv61B26B23",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdcsvGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesfileIdauditauditIdcsvA8F10AD2",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdcsvGET502B4685",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdcsvOPTIONS5D0C778E",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdcsv94975A46",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdOPTIONSDBE821E3",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdAF04FFD1",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditOPTIONS08DD3796",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdfilesfileIdaudit5562DDDE",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdfilesfileIdauditF20DF571",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditPOST3CAF58FE",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdaudit231DCFA8",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesfileIdcontents8F8D422E",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesfileIdcontents28CE2C11",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsGET4172E867",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsOPTIONSC1A05A50",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsPUTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdfilesfileIdcontents638F2797",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsPUTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdfilesfileIdcontentsC77F4949",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsPUTF371EF84",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsDFF6E865",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdinfoGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesfileIdinfoBE59735B",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdinfoGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesfileIdinfoCCF7F8BF",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdinfoGETBCDCA5B2",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdinfoOPTIONS11169FBA",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdinfo2981169F",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdOPTIONS0739484E",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileId71AE0C3F",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdrestoreOPTIONSE2C15A72",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdrestorePUTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdfilesfileIdrestore95D02FC5",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdrestorePUTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdfilesfileIdrestore06D2657C",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdrestorePUTA4D1AB12",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdrestoreE48E6E5F",
        "DeaRestApiConstructdeaapicasescaseIdfilesGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesF013B694",
        "DeaRestApiConstructdeaapicasescaseIdfilesGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesA389BD7D",
        "DeaRestApiConstructdeaapicasescaseIdfilesGETB7EECD96",
        "DeaRestApiConstructdeaapicasescaseIdfilesOPTIONS18C09E02",
        "DeaRestApiConstructdeaapicasescaseIdfilesPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdfilesC519AD34",
        "DeaRestApiConstructdeaapicasescaseIdfilesPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdfiles39BF2383",
        "DeaRestApiConstructdeaapicasescaseIdfilesPOST6C02B6FD",
        "DeaRestApiConstructdeaapicasescaseIdfilesC98413A7",
        "DeaRestApiConstructdeaapicasescaseIdOPTIONS28A51954",
        "DeaRestApiConstructdeaapicasescaseIdownerOPTIONSBD3E6D71",
        "DeaRestApiConstructdeaapicasescaseIdownerPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdownerE92895A4",
        "DeaRestApiConstructdeaapicasescaseIdownerPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdowner0B48A767",
        "DeaRestApiConstructdeaapicasescaseIdownerPOSTFB8341CA",
        "DeaRestApiConstructdeaapicasescaseIdownerFA6D485F",
        "DeaRestApiConstructdeaapicasescaseId5919A5AE",
        "DeaRestApiConstructdeaapicasescaseIdscopedInformationGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdscopedInformation5EA98B1E",
        "DeaRestApiConstructdeaapicasescaseIdscopedInformationGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdscopedInformation45DD1C2C",
        "DeaRestApiConstructdeaapicasescaseIdscopedInformationGETB786FCDD",
        "DeaRestApiConstructdeaapicasescaseIdscopedInformationOPTIONSBA104BDD",
        "DeaRestApiConstructdeaapicasescaseIdscopedInformation3670B594",
        "DeaRestApiConstructdeaapicasescaseIdstatusOPTIONS0760E14E",
        "DeaRestApiConstructdeaapicasescaseIdstatusPUTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdstatus03BDFD4A",
        "DeaRestApiConstructdeaapicasescaseIdstatusPUTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdstatus787AC3AD",
        "DeaRestApiConstructdeaapicasescaseIdstatusPUT31B9CA11",
        "DeaRestApiConstructdeaapicasescaseIdstatus0AD7015F",
        "DeaRestApiConstructdeaapicasescaseIduserMembershipsGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIduserMembershipsBF5873AE",
        "DeaRestApiConstructdeaapicasescaseIduserMembershipsGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIduserMemberships87E19089",
        "DeaRestApiConstructdeaapicasescaseIduserMembershipsGETC6D66454",
        "DeaRestApiConstructdeaapicasescaseIduserMembershipsOPTIONS8FB7464B",
        "DeaRestApiConstructdeaapicasescaseIduserMembershipsPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIduserMembershipsBD47C55D",
        "DeaRestApiConstructdeaapicasescaseIduserMembershipsPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIduserMemberships7500E258",
        "DeaRestApiConstructdeaapicasescaseIduserMembershipsPOST84A13ED4",
        "DeaRestApiConstructdeaapicasescaseIduserMembershipsD5C1FDF3",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsDELETEApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4DELETEcasescaseIdusersuserIdmemberships7FD5F1FA",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsDELETEApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4DELETEcasescaseIdusersuserIdmemberships94BCD26D",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsDELETE66E50CD4",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsOPTIONS925E45CE",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsPUTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdusersuserIdmemberships4134D8D9",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsPUTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdusersuserIdmemberships748F3883",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsPUT67F6E361",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdmemberships2E2BE7E6",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdOPTIONS15B78F29",
        "DeaRestApiConstructdeaapicasescaseIdusersuserId4ECBA1E2",
        "DeaRestApiConstructdeaapicasescaseIdusersOPTIONS61C453FB",
        "DeaRestApiConstructdeaapicasescaseIdusers13CDB0B7",
        "DeaRestApiConstructdeaapicasesallcasesGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasesallcases0A56C052",
        "DeaRestApiConstructdeaapicasesallcasesGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasesallcases8A384810",
        "DeaRestApiConstructdeaapicasesallcasesGET3D7FE7B4",
        "DeaRestApiConstructdeaapicasesallcasesOPTIONSA5C611C6",
        "DeaRestApiConstructdeaapicasesallcases5A486593",
        "DeaRestApiConstructdeaapicasesmycasesGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasesmycasesC2E61486",
        "DeaRestApiConstructdeaapicasesmycasesGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasesmycasesEA5EFE48",
        "DeaRestApiConstructdeaapicasesmycasesGETC5597167",
        "DeaRestApiConstructdeaapicasesmycasesOPTIONSE1C2DE04",
        "DeaRestApiConstructdeaapicasesmycases5E6BEFAC",
        "DeaRestApiConstructdeaapicasesOPTIONS6C23822B",
        "DeaRestApiConstructdeaapicasesPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTcasesB76BA281",
        "DeaRestApiConstructdeaapicasesPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTcases9AE2A82E",
        "DeaRestApiConstructdeaapicasesPOST0A7C65AB",
        "DeaRestApiConstructdeaapicasesC2FD1C2B",
        "DeaRestApiConstructdeaapiOPTIONSE2FADC9C",
        "DeaRestApiConstructdeaapisystemauditauditIdcsvGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETsystemauditauditIdcsv32688A4B",
        "DeaRestApiConstructdeaapisystemauditauditIdcsvGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETsystemauditauditIdcsvFC587FF9",
        "DeaRestApiConstructdeaapisystemauditauditIdcsvGETB3B09D3C",
        "DeaRestApiConstructdeaapisystemauditauditIdcsvOPTIONSBC6D4692",
        "DeaRestApiConstructdeaapisystemauditauditIdcsv3DF23375",
        "DeaRestApiConstructdeaapisystemauditauditIdOPTIONS2EADE5A9",
        "DeaRestApiConstructdeaapisystemauditauditIdB2530B9D",
        "DeaRestApiConstructdeaapisystemauditOPTIONS30FFCB3F",
        "DeaRestApiConstructdeaapisystemauditPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTsystemaudit92D5D91E",
        "DeaRestApiConstructdeaapisystemauditPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTsystemauditCB076E78",
        "DeaRestApiConstructdeaapisystemauditPOSTA0F7E161",
        "DeaRestApiConstructdeaapisystemaudit2A5DAEF8",
        "DeaRestApiConstructdeaapisystemOPTIONS2695AC39",
        "DeaRestApiConstructdeaapisystemAD98847E",
        "DeaRestApiConstructdeaapiusersuserIdauditauditIdcsvGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETusersuserIdauditauditIdcsv84743A25",
        "DeaRestApiConstructdeaapiusersuserIdauditauditIdcsvGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETusersuserIdauditauditIdcsv64381123",
        "DeaRestApiConstructdeaapiusersuserIdauditauditIdcsvGET612A031C",
        "DeaRestApiConstructdeaapiusersuserIdauditauditIdcsvOPTIONSFD04EC81",
        "DeaRestApiConstructdeaapiusersuserIdauditauditIdcsv119B9333",
        "DeaRestApiConstructdeaapiusersuserIdauditauditIdOPTIONS3652E037",
        "DeaRestApiConstructdeaapiusersuserIdauditauditId63841CC8",
        "DeaRestApiConstructdeaapiusersuserIdauditOPTIONSEE6E3674",
        "DeaRestApiConstructdeaapiusersuserIdauditPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTusersuserIdaudit6194CA37",
        "DeaRestApiConstructdeaapiusersuserIdauditPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTusersuserIdaudit3F85C343",
        "DeaRestApiConstructdeaapiusersuserIdauditPOST04D75563",
        "DeaRestApiConstructdeaapiusersuserIdaudit60684DFA",
        "DeaRestApiConstructdeaapiusersuserIdOPTIONS66B09E53",
        "DeaRestApiConstructdeaapiusersuserIdB57BE8EB",
        "DeaRestApiConstructdeaapiusersGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETusers8EAF9CF0",
        "DeaRestApiConstructdeaapiusersGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETusers52337E4B",
        "DeaRestApiConstructdeaapiusersGET45E97005",
        "DeaRestApiConstructdeaapiusersOPTIONS8F715BE6",
        "DeaRestApiConstructdeaapiusers95152658",
        "DeaApiGatewaydeaapiDeployment-[HASH REMOVED]",
        "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
        "DeaRestApiConstructdeaapi6587DDA1",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:PutBucketCors",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeaRestApiConstructUpdateBucketCORS0CustomResourcePolicy7AB0E605",
        "Roles": Array [
          Object {
            "Ref": "DeaRestApiConstructcustomresourcerole327E13A2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DeaRestApiConstructUpdateBucketCORS1CustomResourcePolicyBD382E26": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeaapiAccount1E82C2B3",
        "DeaRestApiConstructdeaapiCloudWatchRole49932FD9",
        "DeaRestApiConstructdeaapiDEAUsagePlanBC29ADF7",
        "DeaRestApiConstructdeaapiauthauthCodeOPTIONS886A6DD8",
        "DeaRestApiConstructdeaapiauthauthCodeFF00F04A",
        "DeaRestApiConstructdeaapiauthauthCodetokenOPTIONSE3AA1727",
        "DeaRestApiConstructdeaapiauthauthCodetokenPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTauthauthCodetokenA42BE3E6",
        "DeaRestApiConstructdeaapiauthauthCodetokenPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTauthauthCodetokenE48A5552",
        "DeaRestApiConstructdeaapiauthauthCodetokenPOST81D6F43B",
        "DeaRestApiConstructdeaapiauthauthCodetokenC94184D9",
        "DeaRestApiConstructdeaapiauthloginUrlGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETauthloginUrl21F61114",
        "DeaRestApiConstructdeaapiauthloginUrlGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETauthloginUrl306C3EFF",
        "DeaRestApiConstructdeaapiauthloginUrlGET4F783A6D",
        "DeaRestApiConstructdeaapiauthloginUrlOPTIONSFCC225D0",
        "DeaRestApiConstructdeaapiauthloginUrlA5F3FDDA",
        "DeaRestApiConstructdeaapiauthlogoutUrlGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETauthlogoutUrlF8A5551B",
        "DeaRestApiConstructdeaapiauthlogoutUrlGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETauthlogoutUrl42120548",
        "DeaRestApiConstructdeaapiauthlogoutUrlGETC563ACE3",
        "DeaRestApiConstructdeaapiauthlogoutUrlOPTIONS3CD200C5",
        "DeaRestApiConstructdeaapiauthlogoutUrlC5CCF412",
        "DeaRestApiConstructdeaapiauthOPTIONSF807407C",
        "DeaRestApiConstructdeaapiauthrefreshTokenOPTIONS265AFE2E",
        "DeaRestApiConstructdeaapiauthrefreshTokenPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTauthrefreshToken099A885C",
        "DeaRestApiConstructdeaapiauthrefreshTokenPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTauthrefreshToken36514E33",
        "DeaRestApiConstructdeaapiauthrefreshTokenPOST4BC88F2D",
        "DeaRestApiConstructdeaapiauthrefreshToken91363B5F",
        "DeaRestApiConstructdeaapiauthE4846931",
        "DeaRestApiConstructdeaapiauthrevokeTokenOPTIONS8E56248E",
        "DeaRestApiConstructdeaapiauthrevokeTokenPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTauthrevokeToken13FAD07F",
        "DeaRestApiConstructdeaapiauthrevokeTokenPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTauthrevokeTokenD51670A5",
        "DeaRestApiConstructdeaapiauthrevokeTokenPOSTD4C71CFF",
        "DeaRestApiConstructdeaapiauthrevokeTokenF456D19A",
        "DeaRestApiConstructdeaapiavailableEndpointsGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETavailableEndpointsBF1A4F6F",
        "DeaRestApiConstructdeaapiavailableEndpointsGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETavailableEndpoints4616DB7F",
        "DeaRestApiConstructdeaapiavailableEndpointsGET587EF9CF",
        "DeaRestApiConstructdeaapiavailableEndpointsOPTIONS52EA7289",
        "DeaRestApiConstructdeaapiavailableEndpointsF75CB106",
        "DeaRestApiConstructdeaapicasescaseIdactionsGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdactionsE4633CE0",
        "DeaRestApiConstructdeaapicasescaseIdactionsGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdactionsFAD4690C",
        "DeaRestApiConstructdeaapicasescaseIdactionsGETDE6D1CEA",
        "DeaRestApiConstructdeaapicasescaseIdactionsOPTIONSE258076A",
        "DeaRestApiConstructdeaapicasescaseIdactions4A0D9ED8",
        "DeaRestApiConstructdeaapicasescaseIdauditauditIdcsvGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdauditauditIdcsv8740F849",
        "DeaRestApiConstructdeaapicasescaseIdauditauditIdcsvGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdauditauditIdcsvC4D46A81",
        "DeaRestApiConstructdeaapicasescaseIdauditauditIdcsvGET26466F30",
        "DeaRestApiConstructdeaapicasescaseIdauditauditIdcsvOPTIONS428A5C73",
        "DeaRestApiConstructdeaapicasescaseIdauditauditIdcsvF0D4AAEB",
        "DeaRestApiConstructdeaapicasescaseIdauditauditIdOPTIONS517DE0AB",
        "DeaRestApiConstructdeaapicasescaseIdauditauditId33263B8C",
        "DeaRestApiConstructdeaapicasescaseIdauditOPTIONSDEA3525B",
        "DeaRestApiConstructdeaapicasescaseIdauditPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdaudit10091757",
        "DeaRestApiConstructdeaapicasescaseIdauditPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdaudit5D5BA22A",
        "DeaRestApiConstructdeaapicasescaseIdauditPOSTE1FBCE9C",
        "DeaRestApiConstructdeaapicasescaseIdaudit16BF85CD",
        "DeaRestApiConstructdeaapicasescaseIddetailsDELETEApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4DELETEcasescaseIddetails918BFC1A",
        "DeaRestApiConstructdeaapicasescaseIddetailsDELETEApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4DELETEcasescaseIddetails2FC44B5A",
        "DeaRestApiConstructdeaapicasescaseIddetailsDELETED0F47C2D",
        "DeaRestApiConstructdeaapicasescaseIddetailsGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIddetails7EEFD469",
        "DeaRestApiConstructdeaapicasescaseIddetailsGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIddetails44CA90D4",
        "DeaRestApiConstructdeaapicasescaseIddetailsGET0AC0D58C",
        "DeaRestApiConstructdeaapicasescaseIddetailsOPTIONSA19CA131",
        "DeaRestApiConstructdeaapicasescaseIddetailsPUTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIddetailsD3729DE8",
        "DeaRestApiConstructdeaapicasescaseIddetailsPUTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIddetails7B2B7A41",
        "DeaRestApiConstructdeaapicasescaseIddetailsPUT33A3214F",
        "DeaRestApiConstructdeaapicasescaseIddetailsBD77A885",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdcsvGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesfileIdauditauditIdcsv61B26B23",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdcsvGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesfileIdauditauditIdcsvA8F10AD2",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdcsvGET502B4685",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdcsvOPTIONS5D0C778E",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdcsv94975A46",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdOPTIONSDBE821E3",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdAF04FFD1",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditOPTIONS08DD3796",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdfilesfileIdaudit5562DDDE",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdfilesfileIdauditF20DF571",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditPOST3CAF58FE",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdaudit231DCFA8",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesfileIdcontents8F8D422E",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesfileIdcontents28CE2C11",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsGET4172E867",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsOPTIONSC1A05A50",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsPUTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdfilesfileIdcontents638F2797",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsPUTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdfilesfileIdcontentsC77F4949",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsPUTF371EF84",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsDFF6E865",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdinfoGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesfileIdinfoBE59735B",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdinfoGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesfileIdinfoCCF7F8BF",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdinfoGETBCDCA5B2",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdinfoOPTIONS11169FBA",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdinfo2981169F",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdOPTIONS0739484E",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileId71AE0C3F",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdrestoreOPTIONSE2C15A72",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdrestorePUTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdfilesfileIdrestore95D02FC5",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdrestorePUTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdfilesfileIdrestore06D2657C",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdrestorePUTA4D1AB12",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdrestoreE48E6E5F",
        "DeaRestApiConstructdeaapicasescaseIdfilesGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesF013B694",
        "DeaRestApiConstructdeaapicasescaseIdfilesGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesA389BD7D",
        "DeaRestApiConstructdeaapicasescaseIdfilesGETB7EECD96",
        "DeaRestApiConstructdeaapicasescaseIdfilesOPTIONS18C09E02",
        "DeaRestApiConstructdeaapicasescaseIdfilesPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdfilesC519AD34",
        "DeaRestApiConstructdeaapicasescaseIdfilesPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdfiles39BF2383",
        "DeaRestApiConstructdeaapicasescaseIdfilesPOST6C02B6FD",
        "DeaRestApiConstructdeaapicasescaseIdfilesC98413A7",
        "DeaRestApiConstructdeaapicasescaseIdOPTIONS28A51954",
        "DeaRestApiConstructdeaapicasescaseIdownerOPTIONSBD3E6D71",
        "DeaRestApiConstructdeaapicasescaseIdownerPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdownerE92895A4",
        "DeaRestApiConstructdeaapicasescaseIdownerPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdowner0B48A767",
        "DeaRestApiConstructdeaapicasescaseIdownerPOSTFB8341CA",
        "DeaRestApiConstructdeaapicasescaseIdownerFA6D485F",
        "DeaRestApiConstructdeaapicasescaseId5919A5AE",
        "DeaRestApiConstructdeaapicasescaseIdscopedInformationGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdscopedInformation5EA98B1E",
        "DeaRestApiConstructdeaapicasescaseIdscopedInformationGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdscopedInformation45DD1C2C",
        "DeaRestApiConstructdeaapicasescaseIdscopedInformationGETB786FCDD",
        "DeaRestApiConstructdeaapicasescaseIdscopedInformationOPTIONSBA104BDD",
        "DeaRestApiConstructdeaapicasescaseIdscopedInformation3670B594",
        "DeaRestApiConstructdeaapicasescaseIdstatusOPTIONS0760E14E",
        "DeaRestApiConstructdeaapicasescaseIdstatusPUTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdstatus03BDFD4A",
        "DeaRestApiConstructdeaapicasescaseIdstatusPUTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdstatus787AC3AD",
        "DeaRestApiConstructdeaapicasescaseIdstatusPUT31B9CA11",
        "DeaRestApiConstructdeaapicasescaseIdstatus0AD7015F",
        "DeaRestApiConstructdeaapicasescaseIduserMembershipsGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIduserMembershipsBF5873AE",
        "DeaRestApiConstructdeaapicasescaseIduserMembershipsGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIduserMemberships87E19089",
        "DeaRestApiConstructdeaapicasescaseIduserMembershipsGETC6D66454",
        "DeaRestApiConstructdeaapicasescaseIduserMembershipsOPTIONS8FB7464B",
        "DeaRestApiConstructdeaapicasescaseIduserMembershipsPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIduserMembershipsBD47C55D",
        "DeaRestApiConstructdeaapicasescaseIduserMembershipsPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIduserMemberships7500E258",
        "DeaRestApiConstructdeaapicasescaseIduserMembershipsPOST84A13ED4",
        "DeaRestApiConstructdeaapicasescaseIduserMembershipsD5C1FDF3",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsDELETEApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4DELETEcasescaseIdusersuserIdmemberships7FD5F1FA",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsDELETEApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4DELETEcasescaseIdusersuserIdmemberships94BCD26D",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsDELETE66E50CD4",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsOPTIONS925E45CE",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsPUTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdusersuserIdmemberships4134D8D9",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsPUTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdusersuserIdmemberships748F3883",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsPUT67F6E361",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdmemberships2E2BE7E6",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdOPTIONS15B78F29",
        "DeaRestApiConstructdeaapicasescaseIdusersuserId4ECBA1E2",
        "DeaRestApiConstructdeaapicasescaseIdusersOPTIONS61C453FB",
        "DeaRestApiConstructdeaapicasescaseIdusers13CDB0B7",
        "DeaRestApiConstructdeaapicasesallcasesGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasesallcases0A56C052",
        "DeaRestApiConstructdeaapicasesallcasesGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasesallcases8A384810",
        "DeaRestApiConstructdeaapicasesallcasesGET3D7FE7B4",
        "DeaRestApiConstructdeaapicasesallcasesOPTIONSA5C611C6",
        "DeaRestApiConstructdeaapicasesallcases5A486593",
        "DeaRestApiConstructdeaapicasesmycasesGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasesmycasesC2E61486",
        "DeaRestApiConstructdeaapicasesmycasesGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasesmycasesEA5EFE48",
        "DeaRestApiConstructdeaapicasesmycasesGETC5597167",
        "DeaRestApiConstructdeaapicasesmycasesOPTIONSE1C2DE04",
        "DeaRestApiConstructdeaapicasesmycases5E6BEFAC",
        "DeaRestApiConstructdeaapicasesOPTIONS6C23822B",
        "DeaRestApiConstructdeaapicasesPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTcasesB76BA281",
        "DeaRestApiConstructdeaapicasesPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTcases9AE2A82E",
        "DeaRestApiConstructdeaapicasesPOST0A7C65AB",
        "DeaRestApiConstructdeaapicasesC2FD1C2B",
        "DeaRestApiConstructdeaapiOPTIONSE2FADC9C",
        "DeaRestApiConstructdeaapisystemauditauditIdcsvGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETsystemauditauditIdcsv32688A4B",
        "DeaRestApiConstructdeaapisystemauditauditIdcsvGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETsystemauditauditIdcsvFC587FF9",
        "DeaRestApiConstructdeaapisystemauditauditIdcsvGETB3B09D3C",
        "DeaRestApiConstructdeaapisystemauditauditIdcsvOPTIONSBC6D4692",
        "DeaRestApiConstructdeaapisystemauditauditIdcsv3DF23375",
        "DeaRestApiConstructdeaapisystemauditauditIdOPTIONS2EADE5A9",
        "DeaRestApiConstructdeaapisystemauditauditIdB2530B9D",
        "DeaRestApiConstructdeaapisystemauditOPTIONS30FFCB3F",
        "DeaRestApiConstructdeaapisystemauditPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTsystemaudit92D5D91E",
        "DeaRestApiConstructdeaapisystemauditPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTsystemauditCB076E78",
        "DeaRestApiConstructdeaapisystemauditPOSTA0F7E161",
        "DeaRestApiConstructdeaapisystemaudit2A5DAEF8",
        "DeaRestApiConstructdeaapisystemOPTIONS2695AC39",
        "DeaRestApiConstructdeaapisystemAD98847E",
        "DeaRestApiConstructdeaapiusersuserIdauditauditIdcsvGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETusersuserIdauditauditIdcsv84743A25",
        "DeaRestApiConstructdeaapiusersuserIdauditauditIdcsvGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETusersuserIdauditauditIdcsv64381123",
        "DeaRestApiConstructdeaapiusersuserIdauditauditIdcsvGET612A031C",
        "DeaRestApiConstructdeaapiusersuserIdauditauditIdcsvOPTIONSFD04EC81",
        "DeaRestApiConstructdeaapiusersuserIdauditauditIdcsv119B9333",
        "DeaRestApiConstructdeaapiusersuserIdauditauditIdOPTIONS3652E037",
        "DeaRestApiConstructdeaapiusersuserIdauditauditId63841CC8",
        "DeaRestApiConstructdeaapiusersuserIdauditOPTIONSEE6E3674",
        "DeaRestApiConstructdeaapiusersuserIdauditPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTusersuserIdaudit6194CA37",
        "DeaRestApiConstructdeaapiusersuserIdauditPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTusersuserIdaudit3F85C343",
        "DeaRestApiConstructdeaapiusersuserIdauditPOST04D75563",
        "DeaRestApiConstructdeaapiusersuserIdaudit60684DFA",
        "DeaRestApiConstructdeaapiusersuserIdOPTIONS66B09E53",
        "DeaRestApiConstructdeaapiusersuserIdB57BE8EB",
        "DeaRestApiConstructdeaapiusersGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETusers8EAF9CF0",
        "DeaRestApiConstructdeaapiusersGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETusers52337E4B",
        "DeaRestApiConstructdeaapiusersGET45E97005",
        "DeaRestApiConstructdeaapiusersOPTIONS8F715BE6",
        "DeaRestApiConstructdeaapiusers95152658",
        "DeaApiGatewaydeaapiDeployment-[HASH REMOVED]",
        "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
        "DeaRestApiConstructdeaapi6587DDA1",
      ],
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:PutBucketCors",
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeaRestApiConstructUpdateBucketCORS1CustomResourcePolicyBD382E26",
        "Roles": Array [
          Object {
            "Ref": "DeaRestApiConstructcustomresourcerole327E13A2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DeaRestApiConstructUpdateBucketCORS1FB85EA38": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "DeaRestApiConstructdeaapiAccount1E82C2B3",
        "DeaRestApiConstructdeaapiCloudWatchRole49932FD9",
        "DeaRestApiConstructdeaapiDEAUsagePlanBC29ADF7",
        "DeaRestApiConstructdeaapiauthauthCodeOPTIONS886A6DD8",
        "DeaRestApiConstructdeaapiauthauthCodeFF00F04A",
        "DeaRestApiConstructdeaapiauthauthCodetokenOPTIONSE3AA1727",
        "DeaRestApiConstructdeaapiauthauthCodetokenPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTauthauthCodetokenA42BE3E6",
        "DeaRestApiConstructdeaapiauthauthCodetokenPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTauthauthCodetokenE48A5552",
        "DeaRestApiConstructdeaapiauthauthCodetokenPOST81D6F43B",
        "DeaRestApiConstructdeaapiauthauthCodetokenC94184D9",
        "DeaRestApiConstructdeaapiauthloginUrlGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETauthloginUrl21F61114",
        "DeaRestApiConstructdeaapiauthloginUrlGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETauthloginUrl306C3EFF",
        "DeaRestApiConstructdeaapiauthloginUrlGET4F783A6D",
        "DeaRestApiConstructdeaapiauthloginUrlOPTIONSFCC225D0",
        "DeaRestApiConstructdeaapiauthloginUrlA5F3FDDA",
        "DeaRestApiConstructdeaapiauthlogoutUrlGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETauthlogoutUrlF8A5551B",
        "DeaRestApiConstructdeaapiauthlogoutUrlGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETauthlogoutUrl42120548",
        "DeaRestApiConstructdeaapiauthlogoutUrlGETC563ACE3",
        "DeaRestApiConstructdeaapiauthlogoutUrlOPTIONS3CD200C5",
        "DeaRestApiConstructdeaapiauthlogoutUrlC5CCF412",
        "DeaRestApiConstructdeaapiauthOPTIONSF807407C",
        "DeaRestApiConstructdeaapiauthrefreshTokenOPTIONS265AFE2E",
        "DeaRestApiConstructdeaapiauthrefreshTokenPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTauthrefreshToken099A885C",
        "DeaRestApiConstructdeaapiauthrefreshTokenPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTauthrefreshToken36514E33",
        "DeaRestApiConstructdeaapiauthrefreshTokenPOST4BC88F2D",
        "DeaRestApiConstructdeaapiauthrefreshToken91363B5F",
        "DeaRestApiConstructdeaapiauthE4846931",
        "DeaRestApiConstructdeaapiauthrevokeTokenOPTIONS8E56248E",
        "DeaRestApiConstructdeaapiauthrevokeTokenPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTauthrevokeToken13FAD07F",
        "DeaRestApiConstructdeaapiauthrevokeTokenPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTauthrevokeTokenD51670A5",
        "DeaRestApiConstructdeaapiauthrevokeTokenPOSTD4C71CFF",
        "DeaRestApiConstructdeaapiauthrevokeTokenF456D19A",
        "DeaRestApiConstructdeaapiavailableEndpointsGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETavailableEndpointsBF1A4F6F",
        "DeaRestApiConstructdeaapiavailableEndpointsGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETavailableEndpoints4616DB7F",
        "DeaRestApiConstructdeaapiavailableEndpointsGET587EF9CF",
        "DeaRestApiConstructdeaapiavailableEndpointsOPTIONS52EA7289",
        "DeaRestApiConstructdeaapiavailableEndpointsF75CB106",
        "DeaRestApiConstructdeaapicasescaseIdactionsGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdactionsE4633CE0",
        "DeaRestApiConstructdeaapicasescaseIdactionsGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdactionsFAD4690C",
        "DeaRestApiConstructdeaapicasescaseIdactionsGETDE6D1CEA",
        "DeaRestApiConstructdeaapicasescaseIdactionsOPTIONSE258076A",
        "DeaRestApiConstructdeaapicasescaseIdactions4A0D9ED8",
        "DeaRestApiConstructdeaapicasescaseIdauditauditIdcsvGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdauditauditIdcsv8740F849",
        "DeaRestApiConstructdeaapicasescaseIdauditauditIdcsvGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdauditauditIdcsvC4D46A81",
        "DeaRestApiConstructdeaapicasescaseIdauditauditIdcsvGET26466F30",
        "DeaRestApiConstructdeaapicasescaseIdauditauditIdcsvOPTIONS428A5C73",
        "DeaRestApiConstructdeaapicasescaseIdauditauditIdcsvF0D4AAEB",
        "DeaRestApiConstructdeaapicasescaseIdauditauditIdOPTIONS517DE0AB",
        "DeaRestApiConstructdeaapicasescaseIdauditauditId33263B8C",
        "DeaRestApiConstructdeaapicasescaseIdauditOPTIONSDEA3525B",
        "DeaRestApiConstructdeaapicasescaseIdauditPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdaudit10091757",
        "DeaRestApiConstructdeaapicasescaseIdauditPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdaudit5D5BA22A",
        "DeaRestApiConstructdeaapicasescaseIdauditPOSTE1FBCE9C",
        "DeaRestApiConstructdeaapicasescaseIdaudit16BF85CD",
        "DeaRestApiConstructdeaapicasescaseIddetailsDELETEApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4DELETEcasescaseIddetails918BFC1A",
        "DeaRestApiConstructdeaapicasescaseIddetailsDELETEApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4DELETEcasescaseIddetails2FC44B5A",
        "DeaRestApiConstructdeaapicasescaseIddetailsDELETED0F47C2D",
        "DeaRestApiConstructdeaapicasescaseIddetailsGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIddetails7EEFD469",
        "DeaRestApiConstructdeaapicasescaseIddetailsGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIddetails44CA90D4",
        "DeaRestApiConstructdeaapicasescaseIddetailsGET0AC0D58C",
        "DeaRestApiConstructdeaapicasescaseIddetailsOPTIONSA19CA131",
        "DeaRestApiConstructdeaapicasescaseIddetailsPUTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIddetailsD3729DE8",
        "DeaRestApiConstructdeaapicasescaseIddetailsPUTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIddetails7B2B7A41",
        "DeaRestApiConstructdeaapicasescaseIddetailsPUT33A3214F",
        "DeaRestApiConstructdeaapicasescaseIddetailsBD77A885",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdcsvGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesfileIdauditauditIdcsv61B26B23",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdcsvGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesfileIdauditauditIdcsvA8F10AD2",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdcsvGET502B4685",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdcsvOPTIONS5D0C778E",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdcsv94975A46",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdOPTIONSDBE821E3",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdAF04FFD1",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditOPTIONS08DD3796",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdfilesfileIdaudit5562DDDE",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdfilesfileIdauditF20DF571",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditPOST3CAF58FE",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdaudit231DCFA8",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesfileIdcontents8F8D422E",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesfileIdcontents28CE2C11",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsGET4172E867",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsOPTIONSC1A05A50",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsPUTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdfilesfileIdcontents638F2797",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsPUTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdfilesfileIdcontentsC77F4949",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsPUTF371EF84",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsDFF6E865",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdinfoGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesfileIdinfoBE59735B",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdinfoGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesfileIdinfoCCF7F8BF",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdinfoGETBCDCA5B2",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdinfoOPTIONS11169FBA",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdinfo2981169F",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdOPTIONS0739484E",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileId71AE0C3F",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdrestoreOPTIONSE2C15A72",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdrestorePUTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdfilesfileIdrestore95D02FC5",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdrestorePUTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdfilesfileIdrestore06D2657C",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdrestorePUTA4D1AB12",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdrestoreE48E6E5F",
        "DeaRestApiConstructdeaapicasescaseIdfilesGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesF013B694",
        "DeaRestApiConstructdeaapicasescaseIdfilesGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesA389BD7D",
        "DeaRestApiConstructdeaapicasescaseIdfilesGETB7EECD96",
        "DeaRestApiConstructdeaapicasescaseIdfilesOPTIONS18C09E02",
        "DeaRestApiConstructdeaapicasescaseIdfilesPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdfilesC519AD34",
        "DeaRestApiConstructdeaapicasescaseIdfilesPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdfiles39BF2383",
        "DeaRestApiConstructdeaapicasescaseIdfilesPOST6C02B6FD",
        "DeaRestApiConstructdeaapicasescaseIdfilesC98413A7",
        "DeaRestApiConstructdeaapicasescaseIdOPTIONS28A51954",
        "DeaRestApiConstructdeaapicasescaseIdownerOPTIONSBD3E6D71",
        "DeaRestApiConstructdeaapicasescaseIdownerPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdownerE92895A4",
        "DeaRestApiConstructdeaapicasescaseIdownerPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdowner0B48A767",
        "DeaRestApiConstructdeaapicasescaseIdownerPOSTFB8341CA",
        "DeaRestApiConstructdeaapicasescaseIdownerFA6D485F",
        "DeaRestApiConstructdeaapicasescaseId5919A5AE",
        "DeaRestApiConstructdeaapicasescaseIdscopedInformationGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdscopedInformation5EA98B1E",
        "DeaRestApiConstructdeaapicasescaseIdscopedInformationGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdscopedInformation45DD1C2C",
        "DeaRestApiConstructdeaapicasescaseIdscopedInformationGETB786FCDD",
        "DeaRestApiConstructdeaapicasescaseIdscopedInformationOPTIONSBA104BDD",
        "DeaRestApiConstructdeaapicasescaseIdscopedInformation3670B594",
        "DeaRestApiConstructdeaapicasescaseIdstatusOPTIONS0760E14E",
        "DeaRestApiConstructdeaapicasescaseIdstatusPUTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdstatus03BDFD4A",
        "DeaRestApiConstructdeaapicasescaseIdstatusPUTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdstatus787AC3AD",
        "DeaRestApiConstructdeaapicasescaseIdstatusPUT31B9CA11",
        "DeaRestApiConstructdeaapicasescaseIdstatus0AD7015F",
        "DeaRestApiConstructdeaapicasescaseIduserMembershipsGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIduserMembershipsBF5873AE",
        "DeaRestApiConstructdeaapicasescaseIduserMembershipsGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIduserMemberships87E19089",
        "DeaRestApiConstructdeaapicasescaseIduserMembershipsGETC6D66454",
        "DeaRestApiConstructdeaapicasescaseIduserMembershipsOPTIONS8FB7464B",
        "DeaRestApiConstructdeaapicasescaseIduserMembershipsPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIduserMembershipsBD47C55D",
        "DeaRestApiConstructdeaapicasescaseIduserMembershipsPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIduserMemberships7500E258",
        "DeaRestApiConstructdeaapicasescaseIduserMembershipsPOST84A13ED4",
        "DeaRestApiConstructdeaapicasescaseIduserMembershipsD5C1FDF3",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsDELETEApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4DELETEcasescaseIdusersuserIdmemberships7FD5F1FA",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsDELETEApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4DELETEcasescaseIdusersuserIdmemberships94BCD26D",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsDELETE66E50CD4",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsOPTIONS925E45CE",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsPUTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdusersuserIdmemberships4134D8D9",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsPUTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdusersuserIdmemberships748F3883",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsPUT67F6E361",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdmemberships2E2BE7E6",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdOPTIONS15B78F29",
        "DeaRestApiConstructdeaapicasescaseIdusersuserId4ECBA1E2",
        "DeaRestApiConstructdeaapicasescaseIdusersOPTIONS61C453FB",
        "DeaRestApiConstructdeaapicasescaseIdusers13CDB0B7",
        "DeaRestApiConstructdeaapicasesallcasesGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasesallcases0A56C052",
        "DeaRestApiConstructdeaapicasesallcasesGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasesallcases8A384810",
        "DeaRestApiConstructdeaapicasesallcasesGET3D7FE7B4",
        "DeaRestApiConstructdeaapicasesallcasesOPTIONSA5C611C6",
        "DeaRestApiConstructdeaapicasesallcases5A486593",
        "DeaRestApiConstructdeaapicasesmycasesGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasesmycasesC2E61486",
        "DeaRestApiConstructdeaapicasesmycasesGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasesmycasesEA5EFE48",
        "DeaRestApiConstructdeaapicasesmycasesGETC5597167",
        "DeaRestApiConstructdeaapicasesmycasesOPTIONSE1C2DE04",
        "DeaRestApiConstructdeaapicasesmycases5E6BEFAC",
        "DeaRestApiConstructdeaapicasesOPTIONS6C23822B",
        "DeaRestApiConstructdeaapicasesPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTcasesB76BA281",
        "DeaRestApiConstructdeaapicasesPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTcases9AE2A82E",
        "DeaRestApiConstructdeaapicasesPOST0A7C65AB",
        "DeaRestApiConstructdeaapicasesC2FD1C2B",
        "DeaRestApiConstructdeaapiOPTIONSE2FADC9C",
        "DeaRestApiConstructdeaapisystemauditauditIdcsvGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETsystemauditauditIdcsv32688A4B",
        "DeaRestApiConstructdeaapisystemauditauditIdcsvGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETsystemauditauditIdcsvFC587FF9",
        "DeaRestApiConstructdeaapisystemauditauditIdcsvGETB3B09D3C",
        "DeaRestApiConstructdeaapisystemauditauditIdcsvOPTIONSBC6D4692",
        "DeaRestApiConstructdeaapisystemauditauditIdcsv3DF23375",
        "DeaRestApiConstructdeaapisystemauditauditIdOPTIONS2EADE5A9",
        "DeaRestApiConstructdeaapisystemauditauditIdB2530B9D",
        "DeaRestApiConstructdeaapisystemauditOPTIONS30FFCB3F",
        "DeaRestApiConstructdeaapisystemauditPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTsystemaudit92D5D91E",
        "DeaRestApiConstructdeaapisystemauditPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTsystemauditCB076E78",
        "DeaRestApiConstructdeaapisystemauditPOSTA0F7E161",
        "DeaRestApiConstructdeaapisystemaudit2A5DAEF8",
        "DeaRestApiConstructdeaapisystemOPTIONS2695AC39",
        "DeaRestApiConstructdeaapisystemAD98847E",
        "DeaRestApiConstructdeaapiusersuserIdauditauditIdcsvGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETusersuserIdauditauditIdcsv84743A25",
        "DeaRestApiConstructdeaapiusersuserIdauditauditIdcsvGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETusersuserIdauditauditIdcsv64381123",
        "DeaRestApiConstructdeaapiusersuserIdauditauditIdcsvGET612A031C",
        "DeaRestApiConstructdeaapiusersuserIdauditauditIdcsvOPTIONSFD04EC81",
        "DeaRestApiConstructdeaapiusersuserIdauditauditIdcsv119B9333",
        "DeaRestApiConstructdeaapiusersuserIdauditauditIdOPTIONS3652E037",
        "DeaRestApiConstructdeaapiusersuserIdauditauditId63841CC8",
        "DeaRestApiConstructdeaapiusersuserIdauditOPTIONSEE6E3674",
        "DeaRestApiConstructdeaapiusersuserIdauditPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTusersuserIdaudit6194CA37",
        "DeaRestApiConstructdeaapiusersuserIdauditPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTusersuserIdaudit3F85C343",
        "DeaRestApiConstructdeaapiusersuserIdauditPOST04D75563",
        "DeaRestApiConstructdeaapiusersuserIdaudit60684DFA",
        "DeaRestApiConstructdeaapiusersuserIdOPTIONS66B09E53",
        "DeaRestApiConstructdeaapiusersuserIdB57BE8EB",
        "DeaRestApiConstructdeaapiusersGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETusers8EAF9CF0",
        "DeaRestApiConstructdeaapiusersGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETusers52337E4B",
        "DeaRestApiConstructdeaapiusersGET45E97005",
        "DeaRestApiConstructdeaapiusersOPTIONS8F715BE6",
        "DeaRestApiConstructdeaapiusers95152658",
        "DeaApiGatewaydeaapiDeployment-[HASH REMOVED]",
        "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
        "DeaRestApiConstructdeaapi6587DDA1",
        "DeaRestApiConstructUpdateBucketCORS1CustomResourcePolicyBD382E26",
      ],
      "Properties": Object {
        "Create": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"S3\\",\\"action\\":\\"putBucketCors\\",\\"parameters\\":{\\"Bucket\\":\\"",
              Object {
                "Ref": "DeaAuditqueryResultBucket9D5EA764",
              },
              "\\",\\"CORSConfiguration\\":{\\"CORSRules\\":[{\\"AllowedOrigins\\":[\\"https://localhost:3001\\",\\"https://",
              Object {
                "Fn::Select": Array [
                  0,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Fn::Select": Array [
                          1,
                          Object {
                            "Fn::Split": Array [
                              "//",
                              Object {
                                "Fn::Join": Array [
                                  "",
                                  Array [
                                    "https://",
                                    Object {
                                      "Ref": "DeaRestApiConstructdeaapi6587DDA1",
                                    },
                                    ".execute-api.",
                                    Object {
                                      "Ref": "AWS::Region",
                                    },
                                    ".",
                                    Object {
                                      "Ref": "AWS::URLSuffix",
                                    },
                                    "/",
                                    Object {
                                      "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                                    },
                                    "/",
                                  ],
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
              "\\"],\\"AllowedMethods\\":[\\"GET\\",\\"PUT\\",\\"HEAD\\"],\\"AllowedHeaders\\":[\\"*\\"]}]}},\\"physicalResourceId\\":{\\"id\\":\\"",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "\\"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": false,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
        "Update": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"service\\":\\"S3\\",\\"action\\":\\"putBucketCors\\",\\"parameters\\":{\\"Bucket\\":\\"",
              Object {
                "Ref": "DeaAuditqueryResultBucket9D5EA764",
              },
              "\\",\\"CORSConfiguration\\":{\\"CORSRules\\":[{\\"AllowedOrigins\\":[\\"https://localhost:3001\\",\\"https://",
              Object {
                "Fn::Select": Array [
                  0,
                  Object {
                    "Fn::Split": Array [
                      "/",
                      Object {
                        "Fn::Select": Array [
                          1,
                          Object {
                            "Fn::Split": Array [
                              "//",
                              Object {
                                "Fn::Join": Array [
                                  "",
                                  Array [
                                    "https://",
                                    Object {
                                      "Ref": "DeaRestApiConstructdeaapi6587DDA1",
                                    },
                                    ".execute-api.",
                                    Object {
                                      "Ref": "AWS::Region",
                                    },
                                    ".",
                                    Object {
                                      "Ref": "AWS::URLSuffix",
                                    },
                                    "/",
                                    Object {
                                      "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                                    },
                                    "/",
                                  ],
                                ],
                              },
                            ],
                          },
                        ],
                      },
                    ],
                  },
                ],
              },
              "\\"],\\"AllowedMethods\\":[\\"GET\\",\\"PUT\\",\\"HEAD\\"],\\"AllowedHeaders\\":[\\"*\\"]}]}},\\"physicalResourceId\\":{\\"id\\":\\"",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "\\"}}",
            ],
          ],
        },
      },
      "Type": "Custom::AWS",
      "UpdateReplacePolicy": "Delete",
    },
    "DeaRestApiConstructcustomresourcerole327E13A2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaRestApiConstructdeaapi6587DDA1": Object {
      "Properties": Object {
        "Description": "Backend API",
        "DisableExecuteApiEndpoint": false,
        "EndpointConfiguration": Object {
          "Types": Array [
            "REGIONAL",
          ],
        },
        "Name": "dea-api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "DeaRestApiConstructdeaapiAccount1E82C2B3": Object {
      "DeletionPolicy": "Retain",
      "DependsOn": Array [
        "DeaRestApiConstructdeaapi6587DDA1",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeaapiCloudWatchRole49932FD9",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "DeaRestApiConstructdeaapiCloudWatchRole49932FD9": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "DeaRestApiConstructdeaapiDEAUsagePlanBC29ADF7": Object {
      "Properties": Object {
        "ApiStages": Array [
          Object {
            "ApiId": Object {
              "Ref": "DeaRestApiConstructdeaapi6587DDA1",
            },
            "Stage": Object {
              "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
            },
            "Throttle": Object {},
          },
        ],
        "Throttle": Object {
          "BurstLimit": 10,
          "RateLimit": 10,
        },
        "UsagePlanName": "dea-usage-plan",
      },
      "Type": "AWS::ApiGateway::UsagePlan",
    },
    "DeaApiGatewaydeaapiDeployment-[HASH REMOVED]": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeaapiauthauthCodeOPTIONS886A6DD8",
        "DeaRestApiConstructdeaapiauthauthCodeFF00F04A",
        "DeaRestApiConstructdeaapiauthauthCodetokenOPTIONSE3AA1727",
        "DeaRestApiConstructdeaapiauthauthCodetokenPOST81D6F43B",
        "DeaRestApiConstructdeaapiauthauthCodetokenC94184D9",
        "DeaRestApiConstructdeaapiauthloginUrlGET4F783A6D",
        "DeaRestApiConstructdeaapiauthloginUrlOPTIONSFCC225D0",
        "DeaRestApiConstructdeaapiauthloginUrlA5F3FDDA",
        "DeaRestApiConstructdeaapiauthlogoutUrlGETC563ACE3",
        "DeaRestApiConstructdeaapiauthlogoutUrlOPTIONS3CD200C5",
        "DeaRestApiConstructdeaapiauthlogoutUrlC5CCF412",
        "DeaRestApiConstructdeaapiauthOPTIONSF807407C",
        "DeaRestApiConstructdeaapiauthrefreshTokenOPTIONS265AFE2E",
        "DeaRestApiConstructdeaapiauthrefreshTokenPOST4BC88F2D",
        "DeaRestApiConstructdeaapiauthrefreshToken91363B5F",
        "DeaRestApiConstructdeaapiauthE4846931",
        "DeaRestApiConstructdeaapiauthrevokeTokenOPTIONS8E56248E",
        "DeaRestApiConstructdeaapiauthrevokeTokenPOSTD4C71CFF",
        "DeaRestApiConstructdeaapiauthrevokeTokenF456D19A",
        "DeaRestApiConstructdeaapiavailableEndpointsGET587EF9CF",
        "DeaRestApiConstructdeaapiavailableEndpointsOPTIONS52EA7289",
        "DeaRestApiConstructdeaapiavailableEndpointsF75CB106",
        "DeaRestApiConstructdeaapicasescaseIdactionsGETDE6D1CEA",
        "DeaRestApiConstructdeaapicasescaseIdactionsOPTIONSE258076A",
        "DeaRestApiConstructdeaapicasescaseIdactions4A0D9ED8",
        "DeaRestApiConstructdeaapicasescaseIdauditauditIdcsvGET26466F30",
        "DeaRestApiConstructdeaapicasescaseIdauditauditIdcsvOPTIONS428A5C73",
        "DeaRestApiConstructdeaapicasescaseIdauditauditIdcsvF0D4AAEB",
        "DeaRestApiConstructdeaapicasescaseIdauditauditIdOPTIONS517DE0AB",
        "DeaRestApiConstructdeaapicasescaseIdauditauditId33263B8C",
        "DeaRestApiConstructdeaapicasescaseIdauditOPTIONSDEA3525B",
        "DeaRestApiConstructdeaapicasescaseIdauditPOSTE1FBCE9C",
        "DeaRestApiConstructdeaapicasescaseIdaudit16BF85CD",
        "DeaRestApiConstructdeaapicasescaseIddetailsDELETED0F47C2D",
        "DeaRestApiConstructdeaapicasescaseIddetailsGET0AC0D58C",
        "DeaRestApiConstructdeaapicasescaseIddetailsOPTIONSA19CA131",
        "DeaRestApiConstructdeaapicasescaseIddetailsPUT33A3214F",
        "DeaRestApiConstructdeaapicasescaseIddetailsBD77A885",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdcsvGET502B4685",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdcsvOPTIONS5D0C778E",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdcsv94975A46",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdOPTIONSDBE821E3",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdAF04FFD1",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditOPTIONS08DD3796",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditPOST3CAF58FE",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdaudit231DCFA8",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsGET4172E867",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsOPTIONSC1A05A50",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsPUTF371EF84",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsDFF6E865",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdinfoGETBCDCA5B2",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdinfoOPTIONS11169FBA",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdinfo2981169F",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdOPTIONS0739484E",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileId71AE0C3F",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdrestoreOPTIONSE2C15A72",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdrestorePUTA4D1AB12",
        "DeaRestApiConstructdeaapicasescaseIdfilesfileIdrestoreE48E6E5F",
        "DeaRestApiConstructdeaapicasescaseIdfilesGETB7EECD96",
        "DeaRestApiConstructdeaapicasescaseIdfilesOPTIONS18C09E02",
        "DeaRestApiConstructdeaapicasescaseIdfilesPOST6C02B6FD",
        "DeaRestApiConstructdeaapicasescaseIdfilesC98413A7",
        "DeaRestApiConstructdeaapicasescaseIdOPTIONS28A51954",
        "DeaRestApiConstructdeaapicasescaseIdownerOPTIONSBD3E6D71",
        "DeaRestApiConstructdeaapicasescaseIdownerPOSTFB8341CA",
        "DeaRestApiConstructdeaapicasescaseIdownerFA6D485F",
        "DeaRestApiConstructdeaapicasescaseId5919A5AE",
        "DeaRestApiConstructdeaapicasescaseIdscopedInformationGETB786FCDD",
        "DeaRestApiConstructdeaapicasescaseIdscopedInformationOPTIONSBA104BDD",
        "DeaRestApiConstructdeaapicasescaseIdscopedInformation3670B594",
        "DeaRestApiConstructdeaapicasescaseIdstatusOPTIONS0760E14E",
        "DeaRestApiConstructdeaapicasescaseIdstatusPUT31B9CA11",
        "DeaRestApiConstructdeaapicasescaseIdstatus0AD7015F",
        "DeaRestApiConstructdeaapicasescaseIduserMembershipsGETC6D66454",
        "DeaRestApiConstructdeaapicasescaseIduserMembershipsOPTIONS8FB7464B",
        "DeaRestApiConstructdeaapicasescaseIduserMembershipsPOST84A13ED4",
        "DeaRestApiConstructdeaapicasescaseIduserMembershipsD5C1FDF3",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsDELETE66E50CD4",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsOPTIONS925E45CE",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsPUT67F6E361",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdmemberships2E2BE7E6",
        "DeaRestApiConstructdeaapicasescaseIdusersuserIdOPTIONS15B78F29",
        "DeaRestApiConstructdeaapicasescaseIdusersuserId4ECBA1E2",
        "DeaRestApiConstructdeaapicasescaseIdusersOPTIONS61C453FB",
        "DeaRestApiConstructdeaapicasescaseIdusers13CDB0B7",
        "DeaRestApiConstructdeaapicasesallcasesGET3D7FE7B4",
        "DeaRestApiConstructdeaapicasesallcasesOPTIONSA5C611C6",
        "DeaRestApiConstructdeaapicasesallcases5A486593",
        "DeaRestApiConstructdeaapicasesmycasesGETC5597167",
        "DeaRestApiConstructdeaapicasesmycasesOPTIONSE1C2DE04",
        "DeaRestApiConstructdeaapicasesmycases5E6BEFAC",
        "DeaRestApiConstructdeaapicasesOPTIONS6C23822B",
        "DeaRestApiConstructdeaapicasesPOST0A7C65AB",
        "DeaRestApiConstructdeaapicasesC2FD1C2B",
        "DeaRestApiConstructdeaapiOPTIONSE2FADC9C",
        "DeaRestApiConstructdeaapisystemauditauditIdcsvGETB3B09D3C",
        "DeaRestApiConstructdeaapisystemauditauditIdcsvOPTIONSBC6D4692",
        "DeaRestApiConstructdeaapisystemauditauditIdcsv3DF23375",
        "DeaRestApiConstructdeaapisystemauditauditIdOPTIONS2EADE5A9",
        "DeaRestApiConstructdeaapisystemauditauditIdB2530B9D",
        "DeaRestApiConstructdeaapisystemauditOPTIONS30FFCB3F",
        "DeaRestApiConstructdeaapisystemauditPOSTA0F7E161",
        "DeaRestApiConstructdeaapisystemaudit2A5DAEF8",
        "DeaRestApiConstructdeaapisystemOPTIONS2695AC39",
        "DeaRestApiConstructdeaapisystemAD98847E",
        "DeaRestApiConstructdeaapiusersuserIdauditauditIdcsvGET612A031C",
        "DeaRestApiConstructdeaapiusersuserIdauditauditIdcsvOPTIONSFD04EC81",
        "DeaRestApiConstructdeaapiusersuserIdauditauditIdcsv119B9333",
        "DeaRestApiConstructdeaapiusersuserIdauditauditIdOPTIONS3652E037",
        "DeaRestApiConstructdeaapiusersuserIdauditauditId63841CC8",
        "DeaRestApiConstructdeaapiusersuserIdauditOPTIONSEE6E3674",
        "DeaRestApiConstructdeaapiusersuserIdauditPOST04D75563",
        "DeaRestApiConstructdeaapiusersuserIdaudit60684DFA",
        "DeaRestApiConstructdeaapiusersuserIdOPTIONS66B09E53",
        "DeaRestApiConstructdeaapiusersuserIdB57BE8EB",
        "DeaRestApiConstructdeaapiusersGET45E97005",
        "DeaRestApiConstructdeaapiusersOPTIONS8F715BE6",
        "DeaRestApiConstructdeaapiusers95152658",
      ],
      "Properties": Object {
        "Description": "Backend API",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]": Object {
      "DependsOn": Array [
        "DeaRestApiConstructdeaapiAccount1E82C2B3",
      ],
      "Properties": Object {
        "AccessLogSetting": Object {
          "DestinationArn": Object {
            "Fn::GetAtt": Array [
              "DeaRestApiConstructAPIGatewayAccessLogs56D13F5D",
              "Arn",
            ],
          },
          "Format": "{\\"stage\\":\\"$context.stage\\",\\"requestId\\":\\"$context.requestId\\",\\"integrationRequestId\\":\\"$context.integration.requestId\\",\\"status\\":\\"$context.status\\",\\"apiId\\":\\"$context.apiId\\",\\"resourcePath\\":\\"$context.resourcePath\\",\\"path\\":\\"$context.path\\",\\"resourceId\\":\\"$context.resourceId\\",\\"httpMethod\\":\\"$context.httpMethod\\",\\"sourceIp\\":\\"$context.identity.sourceIp\\",\\"userAgent\\":\\"$context.identity.userAgent\\",\\"integrationLatency\\":\\"$context.integrationLatency\\",\\"responseLatency\\":\\"$context.responseLatency\\"}",
        },
        "DeploymentId": Object {
          "Ref": "DeaApiGatewaydeaapiDeployment-[HASH REMOVED]",
        },
        "MethodSettings": Array [
          Object {
            "DataTraceEnabled": false,
            "HttpMethod": "*",
            "MetricsEnabled": true,
            "ResourcePath": "/*",
          },
          Object {
            "DataTraceEnabled": false,
            "HttpMethod": "*",
            "MetricsEnabled": true,
            "ResourcePath": "/*",
            "ThrottlingBurstLimit": 40,
            "ThrottlingRateLimit": 40,
          },
          Object {
            "DataTraceEnabled": false,
            "HttpMethod": "GET",
            "MetricsEnabled": true,
            "ResourcePath": "/~1availableEndpoints",
            "ThrottlingBurstLimit": 30,
            "ThrottlingRateLimit": 30,
          },
        ],
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
        "StageName": "[STAGE-REMOVED]",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "DeaRestApiConstructdeaapiOPTIONSE2FADC9C": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeaapi6587DDA1",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapiauthE4846931": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeaapi6587DDA1",
            "RootResourceId",
          ],
        },
        "PathPart": "auth",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapiauthOPTIONSF807407C": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapiauthE4846931",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapiauthauthCodeFF00F04A": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaRestApiConstructdeaapiauthE4846931",
        },
        "PathPart": "{authCode}",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapiauthauthCodeOPTIONS886A6DD8": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapiauthauthCodeFF00F04A",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapiauthauthCodetokenC94184D9": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaRestApiConstructdeaapiauthauthCodeFF00F04A",
        },
        "PathPart": "token",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapiauthauthCodetokenOPTIONSE3AA1727": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapiauthauthCodetokenC94184D9",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapiauthauthCodetokenPOST81D6F43B": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaRestApiConstructPOSTGetAuthenticationToken7831CF5E",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapiauthauthCodetokenC94184D9",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapiauthauthCodetokenPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTauthauthCodetokenA42BE3E6": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPOSTGetAuthenticationToken7831CF5E",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/test-invoke-stage/POST/auth/*/token",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapiauthauthCodetokenPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTauthauthCodetokenE48A5552": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPOSTGetAuthenticationToken7831CF5E",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/",
              Object {
                "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/POST/auth/*/token",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapiauthloginUrlA5F3FDDA": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaRestApiConstructdeaapiauthE4846931",
        },
        "PathPart": "loginUrl",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapiauthloginUrlGET4F783A6D": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaRestApiConstructGETGetLoginUrlA95063AD",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapiauthloginUrlA5F3FDDA",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapiauthloginUrlGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETauthloginUrl21F61114": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetLoginUrlA95063AD",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/test-invoke-stage/GET/auth/loginUrl",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapiauthloginUrlGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETauthloginUrl306C3EFF": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetLoginUrlA95063AD",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/",
              Object {
                "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/GET/auth/loginUrl",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapiauthloginUrlOPTIONSFCC225D0": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapiauthloginUrlA5F3FDDA",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapiauthlogoutUrlC5CCF412": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaRestApiConstructdeaapiauthE4846931",
        },
        "PathPart": "logoutUrl",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapiauthlogoutUrlGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETauthlogoutUrlF8A5551B": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetLogoutUrl77EA9407",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/test-invoke-stage/GET/auth/logoutUrl",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapiauthlogoutUrlGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETauthlogoutUrl42120548": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetLogoutUrl77EA9407",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/",
              Object {
                "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/GET/auth/logoutUrl",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapiauthlogoutUrlGETC563ACE3": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaRestApiConstructGETGetLogoutUrl77EA9407",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapiauthlogoutUrlC5CCF412",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapiauthlogoutUrlOPTIONS3CD200C5": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapiauthlogoutUrlC5CCF412",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapiauthrefreshToken91363B5F": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaRestApiConstructdeaapiauthE4846931",
        },
        "PathPart": "refreshToken",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapiauthrefreshTokenOPTIONS265AFE2E": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapiauthrefreshToken91363B5F",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapiauthrefreshTokenPOST4BC88F2D": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaRestApiConstructPOSTRefreshIdToken16E1721D",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapiauthrefreshToken91363B5F",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapiauthrefreshTokenPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTauthrefreshToken099A885C": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPOSTRefreshIdToken16E1721D",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/test-invoke-stage/POST/auth/refreshToken",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapiauthrefreshTokenPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTauthrefreshToken36514E33": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPOSTRefreshIdToken16E1721D",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/",
              Object {
                "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/POST/auth/refreshToken",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapiauthrevokeTokenF456D19A": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaRestApiConstructdeaapiauthE4846931",
        },
        "PathPart": "revokeToken",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapiauthrevokeTokenOPTIONS8E56248E": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapiauthrevokeTokenF456D19A",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapiauthrevokeTokenPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTauthrevokeToken13FAD07F": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPOSTRevokeAuthToken4994A05B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/test-invoke-stage/POST/auth/revokeToken",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapiauthrevokeTokenPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTauthrevokeTokenD51670A5": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPOSTRevokeAuthToken4994A05B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/",
              Object {
                "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/POST/auth/revokeToken",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapiauthrevokeTokenPOSTD4C71CFF": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaRestApiConstructPOSTRevokeAuthToken4994A05B",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapiauthrevokeTokenF456D19A",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapiavailableEndpointsF75CB106": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeaapi6587DDA1",
            "RootResourceId",
          ],
        },
        "PathPart": "availableEndpoints",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapiavailableEndpointsGET587EF9CF": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaRestApiConstructGETGetAvailableEndpoints64673B60",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapiavailableEndpointsF75CB106",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapiavailableEndpointsGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETavailableEndpointsBF1A4F6F": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetAvailableEndpoints64673B60",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/test-invoke-stage/GET/availableEndpoints",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapiavailableEndpointsGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETavailableEndpoints4616DB7F": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetAvailableEndpoints64673B60",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/",
              Object {
                "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/GET/availableEndpoints",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapiavailableEndpointsOPTIONS52EA7289": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapiavailableEndpointsF75CB106",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasesC2FD1C2B": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeaapi6587DDA1",
            "RootResourceId",
          ],
        },
        "PathPart": "cases",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapicasesOPTIONS6C23822B": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasesC2FD1C2B",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasesPOST0A7C65AB": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaRestApiConstructPOSTCreateCase203FC2B5",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasesC2FD1C2B",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasesPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTcasesB76BA281": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPOSTCreateCase203FC2B5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/test-invoke-stage/POST/cases",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasesPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTcases9AE2A82E": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPOSTCreateCase203FC2B5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/",
              Object {
                "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/POST/cases",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasesallcases5A486593": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaRestApiConstructdeaapicasesC2FD1C2B",
        },
        "PathPart": "all-cases",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapicasesallcasesGET3D7FE7B4": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "RequestParameters": Object {
            "integration.request.querystring.limit": "method.request.querystring.limit",
            "integration.request.querystring.next": "method.request.querystring.next",
          },
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaRestApiConstructGETGetAllCasesD64E9594",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "RequestParameters": Object {
          "method.request.querystring.limit": false,
          "method.request.querystring.next": false,
        },
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasesallcases5A486593",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasesallcasesGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasesallcases0A56C052": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetAllCasesD64E9594",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/test-invoke-stage/GET/cases/all-cases",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasesallcasesGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasesallcases8A384810": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetAllCasesD64E9594",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/",
              Object {
                "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/GET/cases/all-cases",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasesallcasesOPTIONSA5C611C6": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasesallcases5A486593",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseId5919A5AE": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaRestApiConstructdeaapicasesC2FD1C2B",
        },
        "PathPart": "{caseId}",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapicasescaseIdOPTIONS28A51954": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseId5919A5AE",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIdactions4A0D9ED8": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseId5919A5AE",
        },
        "PathPart": "actions",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapicasescaseIdactionsGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdactionsE4633CE0": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetCaseActions7D38DBB9",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/test-invoke-stage/GET/cases/*/actions",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIdactionsGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdactionsFAD4690C": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetCaseActions7D38DBB9",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/",
              Object {
                "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/GET/cases/*/actions",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIdactionsGETDE6D1CEA": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaRestApiConstructGETGetCaseActions7D38DBB9",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdactions4A0D9ED8",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIdactionsOPTIONSE258076A": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdactions4A0D9ED8",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIdaudit16BF85CD": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseId5919A5AE",
        },
        "PathPart": "audit",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapicasescaseIdauditOPTIONSDEA3525B": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdaudit16BF85CD",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIdauditPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdaudit10091757": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPOSTRequestCaseAudit31F3AA5B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/test-invoke-stage/POST/cases/*/audit",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIdauditPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdaudit5D5BA22A": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPOSTRequestCaseAudit31F3AA5B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/",
              Object {
                "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/POST/cases/*/audit",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIdauditPOSTE1FBCE9C": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaRestApiConstructPOSTRequestCaseAudit31F3AA5B",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdaudit16BF85CD",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIdauditauditId33263B8C": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdaudit16BF85CD",
        },
        "PathPart": "{auditId}",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapicasescaseIdauditauditIdOPTIONS517DE0AB": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdauditauditId33263B8C",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIdauditauditIdcsvF0D4AAEB": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdauditauditId33263B8C",
        },
        "PathPart": "csv",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapicasescaseIdauditauditIdcsvGET26466F30": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaRestApiConstructGETGetCaseAuditB3A2988F",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdauditauditIdcsvF0D4AAEB",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIdauditauditIdcsvGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdauditauditIdcsv8740F849": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetCaseAuditB3A2988F",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/test-invoke-stage/GET/cases/*/audit/*/csv",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIdauditauditIdcsvGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdauditauditIdcsvC4D46A81": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetCaseAuditB3A2988F",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/",
              Object {
                "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/GET/cases/*/audit/*/csv",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIdauditauditIdcsvOPTIONS428A5C73": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdauditauditIdcsvF0D4AAEB",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIddetailsBD77A885": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseId5919A5AE",
        },
        "PathPart": "details",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapicasescaseIddetailsDELETEApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4DELETEcasescaseIddetails918BFC1A": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructDELETEDeleteCase9C8CBC88",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/test-invoke-stage/DELETE/cases/*/details",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIddetailsDELETEApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4DELETEcasescaseIddetails2FC44B5A": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructDELETEDeleteCase9C8CBC88",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/",
              Object {
                "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/DELETE/cases/*/details",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIddetailsDELETED0F47C2D": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "DELETE",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaRestApiConstructDELETEDeleteCase9C8CBC88",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIddetailsBD77A885",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIddetailsGET0AC0D58C": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaRestApiConstructGETGetCaseDetails37F7FEA5",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIddetailsBD77A885",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIddetailsGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIddetails7EEFD469": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetCaseDetails37F7FEA5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/test-invoke-stage/GET/cases/*/details",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIddetailsGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIddetails44CA90D4": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetCaseDetails37F7FEA5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/",
              Object {
                "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/GET/cases/*/details",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIddetailsOPTIONSA19CA131": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIddetailsBD77A885",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIddetailsPUT33A3214F": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "PUT",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaRestApiConstructPUTUpdateCaseDetailsCAA16781",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIddetailsBD77A885",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIddetailsPUTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIddetailsD3729DE8": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPUTUpdateCaseDetailsCAA16781",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/test-invoke-stage/PUT/cases/*/details",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIddetailsPUTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIddetails7B2B7A41": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPUTUpdateCaseDetailsCAA16781",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/",
              Object {
                "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/PUT/cases/*/details",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesC98413A7": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseId5919A5AE",
        },
        "PathPart": "files",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesF013B694": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetCaseFilesB601FAF5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/test-invoke-stage/GET/cases/*/files",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesA389BD7D": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetCaseFilesB601FAF5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/",
              Object {
                "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/GET/cases/*/files",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesGETB7EECD96": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaRestApiConstructGETGetCaseFilesB601FAF5",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdfilesC98413A7",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesOPTIONS18C09E02": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdfilesC98413A7",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesPOST6C02B6FD": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaRestApiConstructPOSTInitiateCaseFileUpload4072CE29",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdfilesC98413A7",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdfilesC519AD34": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPOSTInitiateCaseFileUpload4072CE29",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/test-invoke-stage/POST/cases/*/files",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdfiles39BF2383": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPOSTInitiateCaseFileUpload4072CE29",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/",
              Object {
                "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/POST/cases/*/files",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesfileId71AE0C3F": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdfilesC98413A7",
        },
        "PathPart": "{fileId}",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesfileIdOPTIONS0739484E": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdfilesfileId71AE0C3F",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesfileIdaudit231DCFA8": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdfilesfileId71AE0C3F",
        },
        "PathPart": "audit",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditOPTIONS08DD3796": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdfilesfileIdaudit231DCFA8",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditPOST3CAF58FE": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaRestApiConstructPOSTRequestCaseFileAuditB217F48B",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdfilesfileIdaudit231DCFA8",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdfilesfileIdaudit5562DDDE": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPOSTRequestCaseFileAuditB217F48B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/test-invoke-stage/POST/cases/*/files/*/audit",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdfilesfileIdauditF20DF571": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPOSTRequestCaseFileAuditB217F48B",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/",
              Object {
                "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/POST/cases/*/files/*/audit",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdAF04FFD1": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdfilesfileIdaudit231DCFA8",
        },
        "PathPart": "{auditId}",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdOPTIONSDBE821E3": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdAF04FFD1",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdcsv94975A46": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdAF04FFD1",
        },
        "PathPart": "csv",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdcsvGET502B4685": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaRestApiConstructGETGetCaseFileAuditEC14BB8D",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdcsv94975A46",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdcsvGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesfileIdauditauditIdcsv61B26B23": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetCaseFileAuditEC14BB8D",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/test-invoke-stage/GET/cases/*/files/*/audit/*/csv",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdcsvGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesfileIdauditauditIdcsvA8F10AD2": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetCaseFileAuditEC14BB8D",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/",
              Object {
                "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/GET/cases/*/files/*/audit/*/csv",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdcsvOPTIONS5D0C778E": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdfilesfileIdauditauditIdcsv94975A46",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsDFF6E865": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdfilesfileId71AE0C3F",
        },
        "PathPart": "contents",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsGET4172E867": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaRestApiConstructGETDownloadCaseFile04DF0D0C",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsDFF6E865",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesfileIdcontents8F8D422E": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETDownloadCaseFile04DF0D0C",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/test-invoke-stage/GET/cases/*/files/*/contents",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesfileIdcontents28CE2C11": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETDownloadCaseFile04DF0D0C",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/",
              Object {
                "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/GET/cases/*/files/*/contents",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsOPTIONSC1A05A50": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsDFF6E865",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsPUTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdfilesfileIdcontents638F2797": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPUTCompleteCaseFileUpload51639C21",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/test-invoke-stage/PUT/cases/*/files/*/contents",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsPUTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdfilesfileIdcontentsC77F4949": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPUTCompleteCaseFileUpload51639C21",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/",
              Object {
                "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/PUT/cases/*/files/*/contents",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsPUTF371EF84": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "PUT",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaRestApiConstructPUTCompleteCaseFileUpload51639C21",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdfilesfileIdcontentsDFF6E865",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesfileIdinfo2981169F": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdfilesfileId71AE0C3F",
        },
        "PathPart": "info",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesfileIdinfoGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesfileIdinfoBE59735B": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetCaseFileDetailAC2C6003",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/test-invoke-stage/GET/cases/*/files/*/info",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesfileIdinfoGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdfilesfileIdinfoCCF7F8BF": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetCaseFileDetailAC2C6003",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/",
              Object {
                "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/GET/cases/*/files/*/info",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesfileIdinfoGETBCDCA5B2": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaRestApiConstructGETGetCaseFileDetailAC2C6003",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdfilesfileIdinfo2981169F",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesfileIdinfoOPTIONS11169FBA": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdfilesfileIdinfo2981169F",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesfileIdrestoreE48E6E5F": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdfilesfileId71AE0C3F",
        },
        "PathPart": "restore",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesfileIdrestoreOPTIONSE2C15A72": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdfilesfileIdrestoreE48E6E5F",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesfileIdrestorePUTA4D1AB12": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "PUT",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaRestApiConstructPUTRestoreCaseFile94160087",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdfilesfileIdrestoreE48E6E5F",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesfileIdrestorePUTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdfilesfileIdrestore95D02FC5": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPUTRestoreCaseFile94160087",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/test-invoke-stage/PUT/cases/*/files/*/restore",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIdfilesfileIdrestorePUTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdfilesfileIdrestore06D2657C": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPUTRestoreCaseFile94160087",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/",
              Object {
                "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/PUT/cases/*/files/*/restore",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIdownerFA6D485F": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseId5919A5AE",
        },
        "PathPart": "owner",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapicasescaseIdownerOPTIONSBD3E6D71": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdownerFA6D485F",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIdownerPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdownerE92895A4": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPOSTCreateCaseOwner07019161",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/test-invoke-stage/POST/cases/*/owner",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIdownerPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIdowner0B48A767": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPOSTCreateCaseOwner07019161",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/",
              Object {
                "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/POST/cases/*/owner",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIdownerPOSTFB8341CA": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaRestApiConstructPOSTCreateCaseOwner07019161",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdownerFA6D485F",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIdscopedInformation3670B594": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseId5919A5AE",
        },
        "PathPart": "scopedInformation",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapicasescaseIdscopedInformationGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdscopedInformation5EA98B1E": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetScopedCaseInformationC679F03C",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/test-invoke-stage/GET/cases/*/scopedInformation",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIdscopedInformationGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIdscopedInformation45DD1C2C": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetScopedCaseInformationC679F03C",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/",
              Object {
                "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/GET/cases/*/scopedInformation",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIdscopedInformationGETB786FCDD": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaRestApiConstructGETGetScopedCaseInformationC679F03C",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdscopedInformation3670B594",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIdscopedInformationOPTIONSBA104BDD": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdscopedInformation3670B594",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIdstatus0AD7015F": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseId5919A5AE",
        },
        "PathPart": "status",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapicasescaseIdstatusOPTIONS0760E14E": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdstatus0AD7015F",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIdstatusPUT31B9CA11": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "PUT",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaRestApiConstructPUTUpdateCaseStatusBE885A0D",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdstatus0AD7015F",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIdstatusPUTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdstatus03BDFD4A": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPUTUpdateCaseStatusBE885A0D",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/test-invoke-stage/PUT/cases/*/status",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIdstatusPUTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdstatus787AC3AD": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPUTUpdateCaseStatusBE885A0D",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/",
              Object {
                "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/PUT/cases/*/status",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIduserMembershipsD5C1FDF3": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseId5919A5AE",
        },
        "PathPart": "userMemberships",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapicasescaseIduserMembershipsGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIduserMembershipsBF5873AE": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetUsersFromCase05D0A5BE",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/test-invoke-stage/GET/cases/*/userMemberships",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIduserMembershipsGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasescaseIduserMemberships87E19089": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetUsersFromCase05D0A5BE",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/",
              Object {
                "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/GET/cases/*/userMemberships",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIduserMembershipsGETC6D66454": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaRestApiConstructGETGetUsersFromCase05D0A5BE",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIduserMembershipsD5C1FDF3",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIduserMembershipsOPTIONS8FB7464B": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIduserMembershipsD5C1FDF3",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIduserMembershipsPOST84A13ED4": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaRestApiConstructPOSTInviteUserToCaseE52152F4",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIduserMembershipsD5C1FDF3",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIduserMembershipsPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIduserMembershipsBD47C55D": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPOSTInviteUserToCaseE52152F4",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/test-invoke-stage/POST/cases/*/userMemberships",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIduserMembershipsPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTcasescaseIduserMemberships7500E258": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPOSTInviteUserToCaseE52152F4",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/",
              Object {
                "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/POST/cases/*/userMemberships",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIdusers13CDB0B7": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseId5919A5AE",
        },
        "PathPart": "users",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapicasescaseIdusersOPTIONS61C453FB": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdusers13CDB0B7",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIdusersuserId4ECBA1E2": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdusers13CDB0B7",
        },
        "PathPart": "{userId}",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapicasescaseIdusersuserIdOPTIONS15B78F29": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdusersuserId4ECBA1E2",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIdusersuserIdmemberships2E2BE7E6": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdusersuserId4ECBA1E2",
        },
        "PathPart": "memberships",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsDELETE66E50CD4": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "DELETE",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaRestApiConstructDELETERemoveUserFromCase315FE1CE",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdusersuserIdmemberships2E2BE7E6",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsDELETEApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4DELETEcasescaseIdusersuserIdmemberships7FD5F1FA": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructDELETERemoveUserFromCase315FE1CE",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/test-invoke-stage/DELETE/cases/*/users/*/memberships",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsDELETEApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4DELETEcasescaseIdusersuserIdmemberships94BCD26D": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructDELETERemoveUserFromCase315FE1CE",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/",
              Object {
                "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/DELETE/cases/*/users/*/memberships",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsOPTIONS925E45CE": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdusersuserIdmemberships2E2BE7E6",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsPUT67F6E361": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "PUT",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaRestApiConstructPUTModifyUserCasePermissions3887B3D5",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasescaseIdusersuserIdmemberships2E2BE7E6",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsPUTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdusersuserIdmemberships4134D8D9": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPUTModifyUserCasePermissions3887B3D5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/test-invoke-stage/PUT/cases/*/users/*/memberships",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasescaseIdusersuserIdmembershipsPUTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4PUTcasescaseIdusersuserIdmemberships748F3883": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPUTModifyUserCasePermissions3887B3D5",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/",
              Object {
                "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/PUT/cases/*/users/*/memberships",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasesmycases5E6BEFAC": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaRestApiConstructdeaapicasesC2FD1C2B",
        },
        "PathPart": "my-cases",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapicasesmycasesGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETcasesmycasesC2E61486": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetMyCasesBB9194E7",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/test-invoke-stage/GET/cases/my-cases",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasesmycasesGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETcasesmycasesEA5EFE48": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetMyCasesBB9194E7",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/",
              Object {
                "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/GET/cases/my-cases",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapicasesmycasesGETC5597167": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "RequestParameters": Object {
            "integration.request.querystring.limit": "method.request.querystring.limit",
            "integration.request.querystring.next": "method.request.querystring.next",
          },
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaRestApiConstructGETGetMyCasesBB9194E7",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "RequestParameters": Object {
          "method.request.querystring.limit": false,
          "method.request.querystring.next": false,
        },
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasesmycases5E6BEFAC",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapicasesmycasesOPTIONSE1C2DE04": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapicasesmycases5E6BEFAC",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapisystemAD98847E": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeaapi6587DDA1",
            "RootResourceId",
          ],
        },
        "PathPart": "system",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapisystemOPTIONS2695AC39": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapisystemAD98847E",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapisystemaudit2A5DAEF8": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaRestApiConstructdeaapisystemAD98847E",
        },
        "PathPart": "audit",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapisystemauditOPTIONS30FFCB3F": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapisystemaudit2A5DAEF8",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapisystemauditPOSTA0F7E161": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaRestApiConstructPOSTRequestSystemAuditF9687588",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapisystemaudit2A5DAEF8",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapisystemauditPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTsystemaudit92D5D91E": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPOSTRequestSystemAuditF9687588",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/test-invoke-stage/POST/system/audit",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapisystemauditPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTsystemauditCB076E78": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPOSTRequestSystemAuditF9687588",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/",
              Object {
                "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/POST/system/audit",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapisystemauditauditIdB2530B9D": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaRestApiConstructdeaapisystemaudit2A5DAEF8",
        },
        "PathPart": "{auditId}",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapisystemauditauditIdOPTIONS2EADE5A9": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapisystemauditauditIdB2530B9D",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapisystemauditauditIdcsv3DF23375": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaRestApiConstructdeaapisystemauditauditIdB2530B9D",
        },
        "PathPart": "csv",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapisystemauditauditIdcsvGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETsystemauditauditIdcsv32688A4B": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetSystemAuditE4C86CC7",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/test-invoke-stage/GET/system/audit/*/csv",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapisystemauditauditIdcsvGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETsystemauditauditIdcsvFC587FF9": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetSystemAuditE4C86CC7",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/",
              Object {
                "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/GET/system/audit/*/csv",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapisystemauditauditIdcsvGETB3B09D3C": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaRestApiConstructGETGetSystemAuditE4C86CC7",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapisystemauditauditIdcsv3DF23375",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapisystemauditauditIdcsvOPTIONSBC6D4692": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapisystemauditauditIdcsv3DF23375",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapiusers95152658": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructdeaapi6587DDA1",
            "RootResourceId",
          ],
        },
        "PathPart": "users",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapiusersGET45E97005": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "RequestParameters": Object {
            "integration.request.querystring.nameBeginsWith": "method.request.querystring.nameBeginsWith",
          },
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaRestApiConstructGETGetAllUsers77F79D7D",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "RequestParameters": Object {
          "method.request.querystring.nameBeginsWith": false,
        },
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapiusers95152658",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapiusersGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETusers8EAF9CF0": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetAllUsers77F79D7D",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/test-invoke-stage/GET/users",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapiusersGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETusers52337E4B": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetAllUsers77F79D7D",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/",
              Object {
                "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/GET/users",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapiusersOPTIONS8F715BE6": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapiusers95152658",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapiusersuserIdB57BE8EB": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaRestApiConstructdeaapiusers95152658",
        },
        "PathPart": "{userId}",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapiusersuserIdOPTIONS66B09E53": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapiusersuserIdB57BE8EB",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapiusersuserIdaudit60684DFA": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaRestApiConstructdeaapiusersuserIdB57BE8EB",
        },
        "PathPart": "audit",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapiusersuserIdauditOPTIONSEE6E3674": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapiusersuserIdaudit60684DFA",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapiusersuserIdauditPOST04D75563": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaRestApiConstructPOSTRequestUserAudit18A97521",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapiusersuserIdaudit60684DFA",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapiusersuserIdauditPOSTApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4POSTusersuserIdaudit6194CA37": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPOSTRequestUserAudit18A97521",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/test-invoke-stage/POST/users/*/audit",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapiusersuserIdauditPOSTApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4POSTusersuserIdaudit3F85C343": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructPOSTRequestUserAudit18A97521",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/",
              Object {
                "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/POST/users/*/audit",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapiusersuserIdauditauditId63841CC8": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaRestApiConstructdeaapiusersuserIdaudit60684DFA",
        },
        "PathPart": "{auditId}",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapiusersuserIdauditauditIdOPTIONS3652E037": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapiusersuserIdauditauditId63841CC8",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapiusersuserIdauditauditIdcsv119B9333": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaRestApiConstructdeaapiusersuserIdauditauditId63841CC8",
        },
        "PathPart": "csv",
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaRestApiConstructdeaapiusersuserIdauditauditIdcsvGET612A031C": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaRestApiConstructGETGetUserAudit8C04FC39",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapiusersuserIdauditauditIdcsv119B9333",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaapiusersuserIdauditauditIdcsvGETApiPermissionTestteststackDeaRestApiConstructdeaapi96FE45F4GETusersuserIdauditauditIdcsv84743A25": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetUserAudit8C04FC39",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/test-invoke-stage/GET/users/*/audit/*/csv",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapiusersuserIdauditauditIdcsvGETApiPermissionteststackDeaRestApiConstructdeaapi96FE45F4GETusersuserIdauditauditIdcsv64381123": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaRestApiConstructGETGetUserAudit8C04FC39",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaRestApiConstructdeaapi6587DDA1",
              },
              "/",
              Object {
                "Ref": "DeaRestApiConstructdeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/GET/users/*/audit/*/csv",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaRestApiConstructdeaapiusersuserIdauditauditIdcsvOPTIONSFD04EC81": Object {
      "Properties": Object {
        "ApiKeyRequired": false,
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie,Host,Content-Length'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'https://localhost:3001'",
                "method.response.header.Vary": "'Origin'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
              "method.response.header.Vary": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaRestApiConstructdeaapiusersuserIdauditauditIdcsv119B9333",
        },
        "RestApiId": Object {
          "Ref": "DeaRestApiConstructdeaapi6587DDA1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaRestApiConstructdeaauditdownloadrole41E0E771": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "DeaRestApiConstructdeabaselambdarole9EA2B06B",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaRestApiConstructdeaauditdownloadroleDefaultPolicy88E58624": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject",
                "s3:GetObjectVersion",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "DeaAuditqueryResultBucket9D5EA764",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:GenerateDataKey",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testKey1CDDDD5E",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeaRestApiConstructdeaauditdownloadroleDefaultPolicy88E58624",
        "Roles": Array [
          Object {
            "Ref": "DeaRestApiConstructdeaauditdownloadrole41E0E771",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DeaRestApiConstructdeaauthlambdarole2081E9E6": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaRestApiConstructdeaauthlambdaroleDefaultPolicy15F6BB8F": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/dea/[STAGE-REMOVED]*",
                  ],
                ],
              },
            },
            Object {
              "Action": "secretsmanager:GetSecretValue",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":secretsmanager:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":secret:/dea/[STAGE-REMOVED]/clientSecret-*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeaRestApiConstructdeaauthlambdaroleDefaultPolicy15F6BB8F",
        "Roles": Array [
          Object {
            "Ref": "DeaRestApiConstructdeaauthlambdarole2081E9E6",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DeaRestApiConstructdeabaselambdarole9EA2B06B": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaRestApiConstructdeabaselambdaroleDefaultPolicy8449FBB9": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:GetItem",
                "dynamodb:DeleteItem",
                "dynamodb:BatchGetItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:Query",
                "dynamodb:UpdateItem",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaBackendConstructDeaTableB48721A0",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaBackendConstructDeaTableB48721A0",
                          "Arn",
                        ],
                      },
                      "/index/GSI1",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaBackendConstructDeaTableB48721A0",
                          "Arn",
                        ],
                      },
                      "/index/GSI2",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:AbortMultipartUpload",
                "s3:ListMultipartUploadParts",
                "s3:PutObject",
                "s3:GetObject",
                "s3:GetObjectVersion",
                "s3:GetObjectLegalHold",
                "s3:PutObjectLegalHold",
                "s3:RestoreObject",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "DeaBackendConstructS3DatasetsBucketDDF4C58A",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "s3:ListBucket",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DeaBackendConstructS3DatasetsBucketDDF4C58A",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "logs:StartQuery",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "deaAuditLogs7B75D3F1",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::GetAtt": Array [
                    "deaTrailLogs0A0531F5",
                    "Arn",
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "logs:GetQueryResults",
                "s3:CreateJob",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DeaEventHandlerss3batchdeletecasefileroleBAD7A58C",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:GenerateDataKey",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testKey1CDDDD5E",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/dea/[STAGE-REMOVED]*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "s3:GetBucketLocation",
                "s3:GetObject",
                "s3:ListBucket",
                "s3:ListBucketMultipartUploads",
                "s3:ListMultipartUploadParts",
                "s3:AbortMultipartUpload",
                "s3:PutObject",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaAuditqueryResultBucket9D5EA764",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaAuditqueryResultBucket9D5EA764",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "athena:GetQueryResults",
                "athena:GetQueryExecution",
                "athena:StartQueryExecution",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": "athena:GetWorkgroup",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":athena:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":workgroup/",
                    Object {
                      "Ref": "AWS::StackName",
                    },
                    "-dea-athena-workgroup",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "glue:GetTable",
                "glue:GetDatabase",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":catalog",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":database/",
                      Object {
                        "Ref": "DeaAuditauditDB8F465ECE",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":glue:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":table/",
                      Object {
                        "Ref": "DeaAuditauditDB8F465ECE",
                      },
                      "/",
                      Object {
                        "Ref": "DeaAuditauditTableF413E0BA",
                      },
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaAuditauditBucketD75893B5",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaAuditauditBucketD75893B5",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:DescribeKey",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testKey1CDDDD5E",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeaRestApiConstructdeabaselambdaroleDefaultPolicy8449FBB9",
        "Roles": Array [
          Object {
            "Ref": "DeaRestApiConstructdeabaselambdarole9EA2B06B",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DeaRestApiConstructdeadatasetsrole293FB411": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "DeaRestApiConstructdeabaselambdarole9EA2B06B",
                    "Arn",
                  ],
                },
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaRestApiConstructdeadatasetsroleDefaultPolicyF065267B": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:PutObject",
                "s3:GetObject",
                "s3:GetObjectVersion",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "DeaBackendConstructS3DatasetsBucketDDF4C58A",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": Array [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:GenerateDataKey",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "testKey1CDDDD5E",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeaRestApiConstructdeadatasetsroleDefaultPolicyF065267B",
        "Roles": Array [
          Object {
            "Ref": "DeaRestApiConstructdeadatasetsrole293FB411",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aFD4BFC8A": Object {
      "DependsOn": Array [
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
            "Arn",
          ],
        },
        "Runtime": Object {
          "Fn::FindInMap": Array [
            "DefaultCrNodeVersionMap",
            Object {
              "Ref": "AWS::Region",
            },
            "value",
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutRetentionPolicy",
                "logs:DeleteRetentionPolicy",
              ],
              "Effect": "Allow",
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRoleDefaultPolicyADDA7DEB",
        "Roles": Array [
          Object {
            "Ref": "LogRetentionaae0aa3c5b4d4f87b02d85b201efdd8aServiceRole9741ECFB",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "deaAuditLogs7B75D3F1": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W86",
              "reason": "Should not retain on test stacks",
            },
          ],
        },
      },
      "Properties": Object {
        "KmsKeyId": Object {
          "Fn::GetAtt": Array [
            "testKey1CDDDD5E",
            "Arn",
          ],
        },
        "RetentionInDays": 14,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "deaTrail2681791A": Object {
      "DependsOn": Array [
        "DeaAuditdeaTrailBucketPolicyA68DF945",
        "deaTrailLogsRoleDefaultPolicyA1D73827",
        "deaTrailLogsRole13472204",
      ],
      "Properties": Object {
        "CloudWatchLogsLogGroupArn": Object {
          "Fn::GetAtt": Array [
            "deaTrailLogs0A0531F5",
            "Arn",
          ],
        },
        "CloudWatchLogsRoleArn": Object {
          "Fn::GetAtt": Array [
            "deaTrailLogsRole13472204",
            "Arn",
          ],
        },
        "EnableLogFileValidation": true,
        "EventSelectors": Array [
          Object {
            "DataResources": Array [
              Object {
                "Type": "AWS::S3::Object",
                "Values": Array [
                  Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        Object {
                          "Fn::GetAtt": Array [
                            "DeaBackendConstructS3DatasetsBucketDDF4C58A",
                            "Arn",
                          ],
                        },
                        "/",
                      ],
                    ],
                  },
                ],
              },
              Object {
                "Type": "AWS::DynamoDB::Table",
                "Values": Array [
                  Object {
                    "Fn::GetAtt": Array [
                      "DeaBackendConstructDeaTableB48721A0",
                      "Arn",
                    ],
                  },
                ],
              },
              Object {
                "Type": "AWS::Lambda::Function",
                "Values": Array [
                  "arn:aws:lambda",
                ],
              },
            ],
            "IncludeManagementEvents": true,
            "ReadWriteType": "All",
          },
        ],
        "IncludeGlobalServiceEvents": true,
        "IsLogging": true,
        "IsMultiRegionTrail": false,
        "KMSKeyId": Object {
          "Fn::GetAtt": Array [
            "testKey1CDDDD5E",
            "Arn",
          ],
        },
        "S3BucketName": Object {
          "Ref": "DeaAuditdeaTrailBucket4819FF43",
        },
      },
      "Type": "AWS::CloudTrail::Trail",
    },
    "deaTrailLogs0A0531F5": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W86",
              "reason": "Should not retain on test stacks",
            },
          ],
        },
      },
      "Properties": Object {
        "KmsKeyId": Object {
          "Fn::GetAtt": Array [
            "testKey1CDDDD5E",
            "Arn",
          ],
        },
        "RetentionInDays": 14,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "deaTrailLogsRole13472204": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W86",
              "reason": "Should not retain on test stacks",
            },
          ],
        },
      },
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "cloudtrail.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "deaTrailLogsRoleDefaultPolicyA1D73827": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutLogEvents",
                "logs:CreateLogStream",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "deaTrailLogs0A0531F5",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "deaTrailLogsRoleDefaultPolicyA1D73827",
        "Roles": Array [
          Object {
            "Ref": "deaTrailLogsRole13472204",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testKey1CDDDD5E": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "EnableKeyRotation": true,
        "KeyPolicy": Object {
          "Statement": Array [
            Object {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Encrypt*",
                "kms:Decrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "DeaAuditFireHosetoS3Role97400919",
                    "Arn",
                  ],
                },
              },
              "Resource": "*",
              "Sid": "Allow Firehose Key access",
            },
            Object {
              "Action": Array [
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "Service": "cloudtrail.amazonaws.com",
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Encrypt*",
                "kms:Decrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Array [
                  Object {
                    "Fn::GetAtt": Array [
                      "DeaEventHandlerss3batchdeletecasefileroleBAD7A58C",
                      "Arn",
                    ],
                  },
                  Object {
                    "Fn::GetAtt": Array [
                      "DeaEventHandlerss3batchdeletecasefilehandlerrole23FFF03E",
                      "Arn",
                    ],
                  },
                  Object {
                    "Fn::GetAtt": Array [
                      "DeaEventHandlerss3batchstatuschangehandlerrole897AED05",
                      "Arn",
                    ],
                  },
                ],
              },
              "Resource": "*",
              "Sid": "dea-event-handlers-key-share-statement",
            },
            Object {
              "Action": Array [
                "kms:Encrypt*",
                "kms:Decrypt*",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
                "kms:Describe*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Array [
                  Object {
                    "Fn::GetAtt": Array [
                      "DeaRestApiConstructdeabaselambdarole9EA2B06B",
                      "Arn",
                    ],
                  },
                  Object {
                    "Fn::GetAtt": Array [
                      "DeaRestApiConstructdeaauthlambdarole2081E9E6",
                      "Arn",
                    ],
                  },
                  Object {
                    "Fn::GetAtt": Array [
                      "DeaRestApiConstructdeadatasetsrole293FB411",
                      "Arn",
                    ],
                  },
                  Object {
                    "Fn::GetAtt": Array [
                      "DeaRestApiConstructdeaauditdownloadrole41E0E771",
                      "Arn",
                    ],
                  },
                ],
              },
              "Resource": "*",
              "Sid": "lambda-roles-key-share-statement",
            },
          ],
          "Version": "2012-10-17",
        },
        "PendingWindowInDays": 7,
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Delete",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
