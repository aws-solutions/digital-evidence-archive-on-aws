// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DeaBackendStack synthesizes the way we expect 1`] = `
Object {
  "Outputs": Object {
    "APIGatewayAPIEndpoint67A1C4AD": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "APIGatewayAPI321F7D19",
            },
            ".execute-api.us-test-1.",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "APIGatewayAPIDeploymentStagedev3D4E02C9",
            },
            "/",
          ],
        ],
      },
    },
    "apiUrlOutput": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "APIGatewayAPI321F7D19",
            },
            ".execute-api.us-test-1.",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "APIGatewayAPIDeploymentStagedev3D4E02C9",
            },
            "/",
          ],
        ],
      },
    },
    "cognitoDomainName": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "DigitalEvidenceArchiveCognitoWorkbenchUserPoolDomain2E16F07A",
            },
            ".auth.us-test-1.amazoncognito.com",
          ],
        ],
      },
    },
    "cognitoUserPoolClientId": Object {
      "Value": Object {
        "Ref": "DigitalEvidenceArchiveCognitoWorkbenchUserPoolClient36D1EB5A",
      },
    },
    "cognitoUserPoolId": Object {
      "Value": Object {
        "Ref": "DigitalEvidenceArchiveCognitoWorkbenchUserPoolEC3F0768",
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "APIGatewayAPI321F7D19": Object {
      "Properties": Object {
        "Description": "Backend API",
        "Name": "API-Gateway API",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "APIGatewayAPIANYAB270493": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": Object {
          "Type": "MOCK",
        },
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "APIGatewayAPI321F7D19",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "APIGatewayAPI321F7D19",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "APIGatewayAPIAccount789DB935": Object {
      "DependsOn": Array [
        "APIGatewayAPI321F7D19",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "APIGatewayAPICloudWatchRole04468EC8",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
    },
    "APIGatewayAPIBackendUsagePlan7F2BA821": Object {
      "Properties": Object {
        "UsagePlanName": "backend-usage-plan",
      },
      "Type": "AWS::ApiGateway::UsagePlan",
    },
    "APIGatewayAPICloudWatchRole04468EC8": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "APIGatewayAPIDeploymentCABB9A2B935a4eed7e4325b36d56d6cbefea1648": Object {
      "DependsOn": Array [
        "APIGatewayAPIproxyANYDB3CFBD0",
        "APIGatewayAPIproxy6CE33476",
        "APIGatewayAPIANYAB270493",
      ],
      "Properties": Object {
        "Description": "Automatically created by the RestApi construct",
        "RestApiId": Object {
          "Ref": "APIGatewayAPI321F7D19",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "APIGatewayAPIDeploymentStagedev3D4E02C9": Object {
      "DependsOn": Array [
        "APIGatewayAPIAccount789DB935",
      ],
      "Properties": Object {
        "AccessLogSetting": Object {
          "DestinationArn": Object {
            "Fn::GetAtt": Array [
              "APIGatewayAccessLogsC4B63309",
              "Arn",
            ],
          },
          "Format": "{\\"stage\\":\\"$context.stage\\",\\"requestId\\":\\"$context.requestId\\",\\"integrationRequestId\\":\\"$context.integration.requestId\\",\\"status\\":\\"$context.status\\",\\"apiId\\":\\"$context.apiId\\",\\"resourcePath\\":\\"$context.resourcePath\\",\\"path\\":\\"$context.path\\",\\"resourceId\\":\\"$context.resourceId\\",\\"httpMethod\\":\\"$context.httpMethod\\",\\"sourceIp\\":\\"$context.identity.sourceIp\\",\\"userAgent\\":\\"$context.identity.userAgent\\"}",
        },
        "DeploymentId": Object {
          "Ref": "APIGatewayAPIDeploymentCABB9A2B935a4eed7e4325b36d56d6cbefea1648",
        },
        "RestApiId": Object {
          "Ref": "APIGatewayAPI321F7D19",
        },
        "StageName": "dev",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "APIGatewayAPIproxy6CE33476": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "APIGatewayAPI321F7D19",
            "RootResourceId",
          ],
        },
        "PathPart": "{proxy+}",
        "RestApiId": Object {
          "Ref": "APIGatewayAPI321F7D19",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "APIGatewayAPIproxyANYApiPermissionDeaBackendStackAPIGatewayAPI080A2E57ANYproxy9615C505": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Ref": "LiveAlias9B8FFEA9",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-test-1:",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "APIGatewayAPI321F7D19",
              },
              "/",
              Object {
                "Ref": "APIGatewayAPIDeploymentStagedev3D4E02C9",
              },
              "/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "APIGatewayAPIproxyANYApiPermissionTestDeaBackendStackAPIGatewayAPI080A2E57ANYproxy25A5F3BD": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Ref": "LiveAlias9B8FFEA9",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:us-test-1:",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "APIGatewayAPI321F7D19",
              },
              "/test-invoke-stage/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "APIGatewayAPIproxyANYDB3CFBD0": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:us-test-1:lambda:path/2015-03-31/functions/",
                Object {
                  "Ref": "LiveAlias9B8FFEA9",
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "APIGatewayAPIproxy6CE33476",
        },
        "RestApiId": Object {
          "Ref": "APIGatewayAPI321F7D19",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "APIGatewayAccessLogsC4B63309": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 731,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "AWS679f53fac002430cb0da5b7982bd22872D164C4C": Object {
      "DependsOn": Array [
        "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-test-1",
          },
          "S3Key": "864aa5eb2d6ca4e0d4d65c940bc9e4d5a29db1e4f3f3a098ddb56f76b2129ac4.zip",
        },
        "Handler": "index.handler",
        "Role": Object {
          "Fn::GetAtt": Array [
            "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 120,
      },
      "Type": "AWS::Lambda::Function",
    },
    "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DigitalEvidenceArchiveCognitoDescribeCognitoUserPoolClient6FD347DA": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "DigitalEvidenceArchiveCognitoDescribeCognitoUserPoolClientCustomResourcePolicy2B5EE361",
      ],
      "Properties": Object {
        "Create": Object {
          "Fn::Join": Array [
            "",
            Array [
              "{\\"region\\":\\"us-test-1\\",\\"service\\":\\"CognitoIdentityServiceProvider\\",\\"action\\":\\"describeUserPoolClient\\",\\"parameters\\":{\\"UserPoolId\\":\\"",
              Object {
                "Ref": "DigitalEvidenceArchiveCognitoWorkbenchUserPoolEC3F0768",
              },
              "\\",\\"ClientId\\":\\"",
              Object {
                "Ref": "DigitalEvidenceArchiveCognitoWorkbenchUserPoolClient36D1EB5A",
              },
              "\\"},\\"physicalResourceId\\":{\\"id\\":\\"",
              Object {
                "Ref": "DigitalEvidenceArchiveCognitoWorkbenchUserPoolClient36D1EB5A",
              },
              "\\"}}",
            ],
          ],
        },
        "InstallLatestAwsSdk": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "AWS679f53fac002430cb0da5b7982bd22872D164C4C",
            "Arn",
          ],
        },
      },
      "Type": "Custom::DescribeCognitoUserPoolClient",
      "UpdateReplacePolicy": "Delete",
    },
    "DigitalEvidenceArchiveCognitoDescribeCognitoUserPoolClientCustomResourcePolicy2B5EE361": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "cognito-idp:DescribeUserPoolClient",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DigitalEvidenceArchiveCognitoWorkbenchUserPoolEC3F0768",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DigitalEvidenceArchiveCognitoDescribeCognitoUserPoolClientCustomResourcePolicy2B5EE361",
        "Roles": Array [
          Object {
            "Ref": "AWS679f53fac002430cb0da5b7982bd2287ServiceRoleC1EA0FF2",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DigitalEvidenceArchiveCognitoWorkbenchUserPoolClient36D1EB5A": Object {
      "Properties": Object {
        "AccessTokenValidity": 15,
        "AllowedOAuthFlows": Array [
          "code",
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": Array [
          "openid",
        ],
        "CallbackURLs": Array [
          "test",
          "https://bogus.bogus",
        ],
        "ClientName": "dea-client-test-Testville",
        "EnableTokenRevocation": true,
        "ExplicitAuthFlows": Array [
          "ALLOW_ADMIN_USER_PASSWORD_AUTH",
          "ALLOW_CUSTOM_AUTH",
          "ALLOW_USER_SRP_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH",
        ],
        "GenerateSecret": true,
        "IdTokenValidity": 15,
        "LogoutURLs": Array [
          "test",
          "https://bogus.bogus",
        ],
        "PreventUserExistenceErrors": "ENABLED",
        "RefreshTokenValidity": 10080,
        "SupportedIdentityProviders": Array [
          "COGNITO",
        ],
        "TokenValidityUnits": Object {
          "AccessToken": "minutes",
          "IdToken": "minutes",
          "RefreshToken": "minutes",
        },
        "UserPoolId": Object {
          "Ref": "DigitalEvidenceArchiveCognitoWorkbenchUserPoolEC3F0768",
        },
      },
      "Type": "AWS::Cognito::UserPoolClient",
    },
    "DigitalEvidenceArchiveCognitoWorkbenchUserPoolDomain2E16F07A": Object {
      "Properties": Object {
        "Domain": "cogtest",
        "UserPoolId": Object {
          "Ref": "DigitalEvidenceArchiveCognitoWorkbenchUserPoolEC3F0768",
        },
      },
      "Type": "AWS::Cognito::UserPoolDomain",
    },
    "DigitalEvidenceArchiveCognitoWorkbenchUserPoolEC3F0768": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AccountRecoverySetting": Object {
          "RecoveryMechanisms": Array [
            Object {
              "Name": "verified_email",
              "Priority": 1,
            },
          ],
        },
        "AdminCreateUserConfig": Object {
          "AllowAdminCreateUserOnly": true,
        },
        "AutoVerifiedAttributes": Array [
          "email",
        ],
        "EmailVerificationMessage": "The verification code to your new account is {####}",
        "EmailVerificationSubject": "Verify your new account",
        "EnabledMfas": Array [
          "SOFTWARE_TOKEN_MFA",
        ],
        "MfaConfiguration": "OPTIONAL",
        "Schema": Array [
          Object {
            "Mutable": true,
            "Name": "given_name",
            "Required": true,
          },
          Object {
            "Mutable": true,
            "Name": "family_name",
            "Required": true,
          },
          Object {
            "Mutable": true,
            "Name": "email",
            "Required": true,
          },
        ],
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "UserPoolName": "dea-userpool-test-Testville",
        "UsernameAttributes": Array [
          "email",
        ],
        "UsernameConfiguration": Object {
          "CaseSensitive": false,
        },
        "VerificationMessageTemplate": Object {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new account is {####}",
          "EmailSubject": "Verify your new account",
          "SmsMessage": "The verification code to your new account is {####}",
        },
      },
      "Type": "AWS::Cognito::UserPool",
      "UpdateReplacePolicy": "Retain",
    },
    "FlowLog3CB084E9": Object {
      "Properties": Object {
        "DeliverLogsPermissionArn": Object {
          "Fn::GetAtt": Array [
            "flowlogrole97E07705",
            "Arn",
          ],
        },
        "LogDestinationType": "cloud-watch-logs",
        "LogGroupName": Object {
          "Ref": "deavpcloggroup15482769",
        },
        "ResourceId": Object {
          "Ref": "deavpc904D699F",
        },
        "ResourceType": "VPC",
        "TrafficType": "ALL",
      },
      "Type": "AWS::EC2::FlowLog",
    },
    "LiveAlias9B8FFEA9": Object {
      "Properties": Object {
        "FunctionName": Object {
          "Ref": "deaapphandler5A2E0A8F",
        },
        "FunctionVersion": Object {
          "Fn::GetAtt": Array [
            "deaapphandlerCurrentVersion3921518A63fee98014f8275f50a82cdcfc513bec",
            "Version",
          ],
        },
        "Name": "live",
      },
      "Type": "AWS::Lambda::Alias",
    },
    "deaapphandler5A2E0A8F": Object {
      "DependsOn": Array [
        "deabaselambdarole86C6FF7A",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-us-test-1",
          },
          "S3Key": "b796d1e2fd16030b199d482d9e30bb9b54085f80b1bb1768504cc3a6bc43326b.zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "deabaselambdarole86C6FF7A",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 180,
        "VpcConfig": Object {
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "deaapphandlerSecurityGroup9058D096",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": Array [
            Object {
              "Ref": "deavpcIngressSubnet1Subnet18DEBB64",
            },
            Object {
              "Ref": "deavpcIngressSubnet2Subnet93350CD8",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "deaapphandlerCurrentVersion3921518A63fee98014f8275f50a82cdcfc513bec": Object {
      "Properties": Object {
        "FunctionName": Object {
          "Ref": "deaapphandler5A2E0A8F",
        },
      },
      "Type": "AWS::Lambda::Version",
    },
    "deaapphandlerSecurityGroup9058D096": Object {
      "Properties": Object {
        "GroupDescription": "Automatic security group for Lambda Function DeaBackendStackdeaapphandlerEF00DCA7",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "deavpc904D699F",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "deabaselambdarole86C6FF7A": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "deavpc904D699F": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "DeaBackendStack/dea-vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "deavpcIngressSubnet1RouteTable899FEE3E": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "DeaBackendStack/dea-vpc/IngressSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "deavpc904D699F",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "deavpcIngressSubnet1RouteTableAssociationACF6F084": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "deavpcIngressSubnet1RouteTable899FEE3E",
        },
        "SubnetId": Object {
          "Ref": "deavpcIngressSubnet1Subnet18DEBB64",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "deavpcIngressSubnet1Subnet18DEBB64": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Ingress",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "DeaBackendStack/dea-vpc/IngressSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "deavpc904D699F",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "deavpcIngressSubnet2RouteTable3EB65955": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "DeaBackendStack/dea-vpc/IngressSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "deavpc904D699F",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "deavpcIngressSubnet2RouteTableAssociationCF07F874": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "deavpcIngressSubnet2RouteTable3EB65955",
        },
        "SubnetId": Object {
          "Ref": "deavpcIngressSubnet2Subnet93350CD8",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "deavpcIngressSubnet2Subnet93350CD8": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.1.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Ingress",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "DeaBackendStack/dea-vpc/IngressSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "deavpc904D699F",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "deavpcloggroup15482769": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 731,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "flowlogrole97E07705": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "vpc-flow-logs.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "flowlogroleDefaultPolicy50B2239C": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogStreams",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "deavpcloggroup15482769",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "flowlogrole97E07705",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "flowlogroleDefaultPolicy50B2239C",
        "Roles": Array [
          Object {
            "Ref": "flowlogrole97E07705",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "vpcsg90F3EB1C": Object {
      "Properties": Object {
        "GroupDescription": "DeaBackendStack/vpc-sg",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "deavpc904D699F",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
