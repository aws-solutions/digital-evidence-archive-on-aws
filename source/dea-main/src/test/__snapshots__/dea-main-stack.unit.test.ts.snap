// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DeaMainStack synthesizes the way we expect 1`] = `
Object {
  "Outputs": Object {
    "DeaApiGatewaydeaApiUrlOutputF204C1DD": Object {
      "Export": Object {
        "Name": "deaApiUrl",
      },
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "DeaApiGatewaydeaapi822A9228",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "DeaApiGatewaydeaapiDeploymentStagetestDA53C9A7",
            },
            "/",
          ],
        ],
      },
    },
    "DeaApiGatewaydeaapiEndpointE11E5524": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "DeaApiGatewaydeaapi822A9228",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "DeaApiGatewaydeaapiDeploymentStagetestDA53C9A7",
            },
            "/",
          ],
        ],
      },
    },
    "DeaAuthIdentityPool7519C87D": Object {
      "Export": Object {
        "Name": "identityPoolId",
      },
      "Value": Object {
        "Ref": "DeaAuthDEAIdentityPool0B891C1B",
      },
    },
    "DeaAuthPoolProviderUrl8350014C": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "DeaAuthDEAUserPool22DB2BAB",
          "ProviderURL",
        ],
      },
    },
    "DeaAuthUserPoolClientId0B9AE544": Object {
      "Export": Object {
        "Name": "userPoolClientId",
      },
      "Value": Object {
        "Ref": "DeaAuthDEAUserPooldeaappclient3742F9D7",
      },
    },
    "DeaAuthUserPoolId0E4885B2": Object {
      "Export": Object {
        "Name": "userPoolId",
      },
      "Value": Object {
        "Ref": "DeaAuthDEAUserPool22DB2BAB",
      },
    },
    "DeaBackendStackDeaMainStackDeaS3AccessLogsDEDCF0A9": Object {
      "Export": Object {
        "Name": "DeaMainStack-DeaS3AccessLogs",
      },
      "Value": Object {
        "Ref": "DeaBackendStackS3AccessLogsBucket46FDD3E0",
      },
    },
    "mainaccountkmskey": Object {
      "Value": Object {
        "Fn::GetAtt": Array [
          "primaryCustomerKey87EC2263",
          "Arn",
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": Object {
      "DependsOn": Array [
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)             indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Handler": "index.handler",
        "Layers": Array [
          Object {
            "Ref": "DeaUiStackDeaUiStackdeploymentbucketAwsCliLayerE6B55D5A",
          },
        ],
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaUiStackDeaUiStackbucket2409F549",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaUiStackDeaUiStackbucket2409F549",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "Roles": Array [
          Object {
            "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": Object {
      "DependsOn": Array [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)             indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Lambda function for auto-deleting objects in ",
              Object {
                "Ref": "DeaBackendStackS3AccessLogsBucket46FDD3E0",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaApiGatewayAPIGatewayAccessLogs1571FA9D": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "KmsKeyId": Object {
          "Fn::GetAtt": Array [
            "primaryCustomerKey87EC2263",
            "Arn",
          ],
        },
        "RetentionInDays": 731,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "DeaApiGatewayDELETEcaseId8BA29E4C": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1",
        "DeaApiGatewaydeabaselambdarole91512884",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "NODE_OPTIONS": "--enable-source-maps",
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeabaselambdarole91512884",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewayGETallcasesF6A8BE63": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1",
        "DeaApiGatewaydeabaselambdarole91512884",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "NODE_OPTIONS": "--enable-source-maps",
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeabaselambdarole91512884",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewayGETbye52347458": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1",
        "DeaApiGatewaydeabaselambdarole91512884",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "NODE_OPTIONS": "--enable-source-maps",
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeabaselambdarole91512884",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewayGETcaseIdACE0459E": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1",
        "DeaApiGatewaydeabaselambdarole91512884",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "NODE_OPTIONS": "--enable-source-maps",
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeabaselambdarole91512884",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewayGEThiE4FE069A": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1",
        "DeaApiGatewaydeabaselambdarole91512884",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "NODE_OPTIONS": "--enable-source-maps",
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeabaselambdarole91512884",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewayGETmycasesD3845992": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1",
        "DeaApiGatewaydeabaselambdarole91512884",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "NODE_OPTIONS": "--enable-source-maps",
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeabaselambdarole91512884",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewayPOSTcases1FE4F197": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1",
        "DeaApiGatewaydeabaselambdarole91512884",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "NODE_OPTIONS": "--enable-source-maps",
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeabaselambdarole91512884",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewayPOSTuserMembershipsF0715011": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1",
        "DeaApiGatewaydeabaselambdarole91512884",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "NODE_OPTIONS": "--enable-source-maps",
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeabaselambdarole91512884",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewayPUTcaseIdB013D384": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1",
        "DeaApiGatewaydeabaselambdarole91512884",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "NODE_OPTIONS": "--enable-source-maps",
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeabaselambdarole91512884",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewaydeaapi822A9228": Object {
      "Properties": Object {
        "Description": "Backend API",
        "Name": "dea-api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "DeaApiGatewaydeaapiAccountBA9E69BF": Object {
      "DeletionPolicy": "Retain",
      "DependsOn": Array [
        "DeaApiGatewaydeaapi822A9228",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeaapiCloudWatchRole1E7850B5",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "DeaApiGatewaydeaapiCloudWatchRole1E7850B5": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "DeaApiGatewaydeaapiDEAUsagePlanEA7656DD": Object {
      "Properties": Object {
        "ApiStages": Array [
          Object {
            "ApiId": Object {
              "Ref": "DeaApiGatewaydeaapi822A9228",
            },
            "Stage": Object {
              "Ref": "DeaApiGatewaydeaapiDeploymentStagetestDA53C9A7",
            },
            "Throttle": Object {},
          },
        ],
        "Throttle": Object {
          "BurstLimit": 50,
          "RateLimit": 25,
        },
        "UsagePlanName": "dea-usage-plan",
      },
      "Type": "AWS::ApiGateway::UsagePlan",
    },
    "DeaApiGatewaydeaapiDeployment99E77629611b937b3689e4aca4f2810c24650f2e": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeaapibyeGETD2EE08E8",
        "DeaApiGatewaydeaapibyeOPTIONSC9B258C6",
        "DeaApiGatewaydeaapibyeBEA43136",
        "DeaApiGatewaydeaapicasescaseIdDELETEA83E21F2",
        "DeaApiGatewaydeaapicasescaseIdGET223D8BD1",
        "DeaApiGatewaydeaapicasescaseIdOPTIONSED4E4189",
        "DeaApiGatewaydeaapicasescaseIdPUT635DAE21",
        "DeaApiGatewaydeaapicasescaseId3D754C88",
        "DeaApiGatewaydeaapicasescaseIduserMembershipsOPTIONSA41AAFF1",
        "DeaApiGatewaydeaapicasescaseIduserMembershipsPOST9A7D9804",
        "DeaApiGatewaydeaapicasescaseIduserMemberships4457D242",
        "DeaApiGatewaydeaapicasesallcasesGET92FB3B5C",
        "DeaApiGatewaydeaapicasesallcasesOPTIONSF976C9CD",
        "DeaApiGatewaydeaapicasesallcasesBDAE5421",
        "DeaApiGatewaydeaapicasesmycasesGET6F1F66A1",
        "DeaApiGatewaydeaapicasesmycasesOPTIONS4C431DB3",
        "DeaApiGatewaydeaapicasesmycases25599FEB",
        "DeaApiGatewaydeaapicasesOPTIONS4FE777E3",
        "DeaApiGatewaydeaapicasesPOST966FABAB",
        "DeaApiGatewaydeaapicasesC01D624D",
        "DeaApiGatewaydeaapihiGETC25F92C7",
        "DeaApiGatewaydeaapihiOPTIONSDCE6F2EB",
        "DeaApiGatewaydeaapihi94AFA016",
        "DeaApiGatewaydeaapiOPTIONS098252F2",
        "DeaApiGatewaydeaapiuiproxyGETD7F3590B",
        "DeaApiGatewaydeaapiuiproxyOPTIONS7D1A7859",
        "DeaApiGatewaydeaapiuiproxy57F1250D",
        "DeaApiGatewaydeaapiuiGET4360368B",
        "DeaApiGatewaydeaapiuiOPTIONSF590A754",
        "DeaApiGatewaydeaapiui838E08AB",
      ],
      "Properties": Object {
        "Description": "Backend API",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "DeaApiGatewaydeaapiDeploymentStagetestDA53C9A7": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeaapiAccountBA9E69BF",
      ],
      "Properties": Object {
        "AccessLogSetting": Object {
          "DestinationArn": Object {
            "Fn::GetAtt": Array [
              "DeaApiGatewayAPIGatewayAccessLogs1571FA9D",
              "Arn",
            ],
          },
          "Format": "{\\"stage\\":\\"$context.stage\\",\\"requestId\\":\\"$context.requestId\\",\\"integrationRequestId\\":\\"$context.integration.requestId\\",\\"status\\":\\"$context.status\\",\\"apiId\\":\\"$context.apiId\\",\\"resourcePath\\":\\"$context.resourcePath\\",\\"path\\":\\"$context.path\\",\\"resourceId\\":\\"$context.resourceId\\",\\"httpMethod\\":\\"$context.httpMethod\\",\\"sourceIp\\":\\"$context.identity.sourceIp\\",\\"userAgent\\":\\"$context.identity.userAgent\\"}",
        },
        "DeploymentId": Object {
          "Ref": "DeaApiGatewaydeaapiDeployment99E77629611b937b3689e4aca4f2810c24650f2e",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
        "StageName": "test",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "DeaApiGatewaydeaapiOPTIONS098252F2": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeaapi822A9228",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapibyeBEA43136": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeaapi822A9228",
            "RootResourceId",
          ],
        },
        "PathPart": "bye",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapibyeGETApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9GETbyeDE686D43": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETbye52347458",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStagetestDA53C9A7",
              },
              "/GET/bye",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapibyeGETApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9GETbye9DF63ABC": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETbye52347458",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/GET/bye",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapibyeGETD2EE08E8": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayGETbye52347458",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapibyeBEA43136",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapibyeOPTIONSC9B258C6": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapibyeBEA43136",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasesC01D624D": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeaapi822A9228",
            "RootResourceId",
          ],
        },
        "PathPart": "cases",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapicasesOPTIONS4FE777E3": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasesC01D624D",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasesPOST966FABAB": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayPOSTcases1FE4F197",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasesC01D624D",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasesPOSTApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9POSTcases87C8F16F": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayPOSTcases1FE4F197",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStagetestDA53C9A7",
              },
              "/POST/cases",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasesPOSTApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9POSTcases87E8FD3D": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayPOSTcases1FE4F197",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/POST/cases",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasesallcasesBDAE5421": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapicasesC01D624D",
        },
        "PathPart": "all-cases",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapicasesallcasesGET92FB3B5C": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "RequestParameters": Object {
            "integration.request.querystring.limit": "method.request.querystring.limit",
            "integration.request.querystring.next": "method.request.querystring.next",
          },
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayGETallcasesF6A8BE63",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "RequestParameters": Object {
          "method.request.querystring.limit": false,
          "method.request.querystring.next": false,
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasesallcasesBDAE5421",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasesallcasesGETApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9GETcasesallcases1F8DA228": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETallcasesF6A8BE63",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStagetestDA53C9A7",
              },
              "/GET/cases/all-cases",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasesallcasesGETApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9GETcasesallcasesB4DD5CAB": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETallcasesF6A8BE63",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/GET/cases/all-cases",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasesallcasesOPTIONSF976C9CD": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasesallcasesBDAE5421",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseId3D754C88": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapicasesC01D624D",
        },
        "PathPart": "{caseId}",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapicasescaseIdDELETEA83E21F2": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "DELETE",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayDELETEcaseId8BA29E4C",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseId3D754C88",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIdDELETEApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9DELETEcasescaseIdE1A83307": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayDELETEcaseId8BA29E4C",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStagetestDA53C9A7",
              },
              "/DELETE/cases/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIdDELETEApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9DELETEcasescaseId99E005A8": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayDELETEcaseId8BA29E4C",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/DELETE/cases/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIdGET223D8BD1": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayGETcaseIdACE0459E",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseId3D754C88",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIdGETApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9GETcasescaseId72B07DD3": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETcaseIdACE0459E",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStagetestDA53C9A7",
              },
              "/GET/cases/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIdGETApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9GETcasescaseId26467B7E": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETcaseIdACE0459E",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/GET/cases/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIdOPTIONSED4E4189": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseId3D754C88",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIdPUT635DAE21": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "PUT",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayPUTcaseIdB013D384",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseId3D754C88",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIdPUTApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9PUTcasescaseIdF626A595": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayPUTcaseIdB013D384",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStagetestDA53C9A7",
              },
              "/PUT/cases/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIdPUTApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9PUTcasescaseId89C7AB7F": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayPUTcaseIdB013D384",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/PUT/cases/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIduserMemberships4457D242": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseId3D754C88",
        },
        "PathPart": "userMemberships",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapicasescaseIduserMembershipsOPTIONSA41AAFF1": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIduserMemberships4457D242",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIduserMembershipsPOST9A7D9804": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayPOSTuserMembershipsF0715011",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIduserMemberships4457D242",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIduserMembershipsPOSTApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9POSTcasescaseIduserMemberships1569B97D": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayPOSTuserMembershipsF0715011",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStagetestDA53C9A7",
              },
              "/POST/cases/*/userMemberships",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIduserMembershipsPOSTApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9POSTcasescaseIduserMemberships9016B401": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayPOSTuserMembershipsF0715011",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/POST/cases/*/userMemberships",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasesmycases25599FEB": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapicasesC01D624D",
        },
        "PathPart": "my-cases",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapicasesmycasesGET6F1F66A1": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "RequestParameters": Object {
            "integration.request.querystring.limit": "method.request.querystring.limit",
            "integration.request.querystring.next": "method.request.querystring.next",
          },
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayGETmycasesD3845992",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "RequestParameters": Object {
          "method.request.querystring.limit": false,
          "method.request.querystring.next": false,
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasesmycases25599FEB",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasesmycasesGETApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9GETcasesmycases3B33517B": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETmycasesD3845992",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStagetestDA53C9A7",
              },
              "/GET/cases/my-cases",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasesmycasesGETApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9GETcasesmycases742BCA77": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETmycasesD3845992",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/GET/cases/my-cases",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasesmycasesOPTIONS4C431DB3": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasesmycases25599FEB",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapihi94AFA016": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeaapi822A9228",
            "RootResourceId",
          ],
        },
        "PathPart": "hi",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapihiGETApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9GEThiCE229225": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGEThiE4FE069A",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStagetestDA53C9A7",
              },
              "/GET/hi",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapihiGETApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9GEThiBA660D46": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGEThiE4FE069A",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/GET/hi",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapihiGETC25F92C7": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayGEThiE4FE069A",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapihi94AFA016",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapihiOPTIONSDCE6F2EB": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapihi94AFA016",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapiui838E08AB": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeaapi822A9228",
            "RootResourceId",
          ],
        },
        "PathPart": "ui",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapiuiGET4360368B": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W59",
              "reason": "Auth not implemented yet, will revisit",
            },
          ],
        },
      },
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "ContentHandling": "CONVERT_TO_TEXT",
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "DeaUiStackrole3432A944",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "GET",
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Content-Type": "integration.response.header.Content-Type",
              },
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "RequestParameters": Object {
            "integration.request.header.Accept": "method.request.header.Accept",
            "integration.request.header.Content-Type": "method.request.header.Content-Type",
            "integration.request.path.proxy": "method.request.path.proxy",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":s3:path/",
                Object {
                  "Ref": "DeaUiStackDeaUiStackbucket2409F549",
                },
                "/index.html",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseModels": Object {
              "application/json": "Empty",
            },
            "ResponseParameters": Object {
              "method.response.header.Content-Length": true,
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
        ],
        "RequestParameters": Object {
          "method.request.header.Accept": true,
          "method.request.header.Content-Type": true,
          "method.request.path.proxy": true,
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapiui838E08AB",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapiuiOPTIONSF590A754": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapiui838E08AB",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapiuiproxy57F1250D": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapiui838E08AB",
        },
        "PathPart": "{proxy+}",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapiuiproxyGETD7F3590B": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W59",
              "reason": "Auth not implemented yet, will revisit",
            },
          ],
        },
      },
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "ContentHandling": "CONVERT_TO_TEXT",
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "DeaUiStackrole3432A944",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "GET",
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Content-Type": "integration.response.header.Content-Type",
              },
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "RequestParameters": Object {
            "integration.request.header.Accept": "method.request.header.Accept",
            "integration.request.header.Content-Type": "method.request.header.Content-Type",
            "integration.request.path.proxy": "method.request.path.proxy",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":s3:path/",
                Object {
                  "Ref": "DeaUiStackDeaUiStackbucket2409F549",
                },
                "/{proxy}",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseModels": Object {
              "application/json": "Empty",
            },
            "ResponseParameters": Object {
              "method.response.header.Content-Length": true,
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
        ],
        "RequestParameters": Object {
          "method.request.header.Accept": true,
          "method.request.header.Content-Type": true,
          "method.request.path.proxy": true,
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapiuiproxy57F1250D",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapiuiproxyOPTIONS7D1A7859": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapiuiproxy57F1250D",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeabaselambdarole91512884": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:GetItem",
                "dynamodb:DeleteItem",
                "dynamodb:BatchGetItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:Query",
                "dynamodb:UpdateItem",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaBackendStackDeaTableE9FE4A05",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaBackendStackDeaTableE9FE4A05",
                          "Arn",
                        ],
                      },
                      "/index/GSI1",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaBackendStackDeaTableE9FE4A05",
                          "Arn",
                        ],
                      },
                      "/index/GSI2",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "kms:Encrypt",
                "kms:Decrypt",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "primaryCustomerKey87EC2263",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1",
        "Roles": Array [
          Object {
            "Ref": "DeaApiGatewaydeabaselambdarole91512884",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DeaAuthAuthTestGroup72A5E3A7": Object {
      "Properties": Object {
        "Description": "Group used for auth e2e testing",
        "GroupName": "AuthTestGroup",
        "Precedence": 100,
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "DeaAuthDeaAuthTESTAuthTestGroupRole082851D3",
            "Arn",
          ],
        },
        "UserPoolId": Object {
          "Ref": "DeaAuthDEAUserPool22DB2BAB",
        },
      },
      "Type": "AWS::Cognito::UserPoolGroup",
    },
    "DeaAuthCaseWorkerGroupE79505D6": Object {
      "Properties": Object {
        "Description": "Group containing users who need access to case APIs",
        "GroupName": "CaseWorkerGroup",
        "Precedence": 1,
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "DeaAuthDeaAuthTESTCaseWorkerGroupRole7EF77E8C",
            "Arn",
          ],
        },
        "UserPoolId": Object {
          "Ref": "DeaAuthDEAUserPool22DB2BAB",
        },
      },
      "Type": "AWS::Cognito::UserPoolGroup",
    },
    "DeaAuthCreateCasesTestGroup7CEF506E": Object {
      "Properties": Object {
        "Description": "Group used for create cases API e2e testing",
        "GroupName": "CreateCasesTestGroup",
        "Precedence": 100,
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "DeaAuthDeaAuthTESTCreateCasesTestGroupRole8B995277",
            "Arn",
          ],
        },
        "UserPoolId": Object {
          "Ref": "DeaAuthDEAUserPool22DB2BAB",
        },
      },
      "Type": "AWS::Cognito::UserPoolGroup",
    },
    "DeaAuthDEAIdentityPool0B891C1B": Object {
      "Properties": Object {
        "AllowClassicFlow": false,
        "AllowUnauthenticatedIdentities": false,
        "CognitoIdentityProviders": Array [
          Object {
            "ClientId": Object {
              "Ref": "DeaAuthDEAUserPooldeaappclient3742F9D7",
            },
            "ProviderName": Object {
              "Fn::GetAtt": Array [
                "DeaAuthDEAUserPool22DB2BAB",
                "ProviderName",
              ],
            },
            "ServerSideTokenCheck": true,
          },
        ],
      },
      "Type": "AWS::Cognito::IdentityPool",
    },
    "DeaAuthDEAUserPool22DB2BAB": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AccountRecoverySetting": Object {
          "RecoveryMechanisms": Array [
            Object {
              "Name": "verified_email",
              "Priority": 1,
            },
          ],
        },
        "AdminCreateUserConfig": Object {
          "AllowAdminCreateUserOnly": true,
          "InviteMessageTemplate": Object {
            "EmailMessage": "Hello {username}, you have been invited to use DEA! Your temporary password is {####}",
            "EmailSubject": "Digital Evidence Archive Signup Invitation",
            "SMSMessage": "Hello {username}, your temporary password for our DEA is {####}",
          },
        },
        "EmailVerificationMessage": "The verification code to your new account is {####}",
        "EmailVerificationSubject": "Verify your new account",
        "Policies": Object {
          "PasswordPolicy": Object {
            "MinimumLength": 8,
            "RequireLowercase": true,
            "RequireNumbers": true,
            "RequireSymbols": true,
            "RequireUppercase": true,
            "TemporaryPasswordValidityDays": 1,
          },
        },
        "Schema": Array [
          Object {
            "Mutable": false,
            "Name": "family_name",
            "Required": true,
          },
          Object {
            "Mutable": false,
            "Name": "given_name",
            "Required": true,
          },
        ],
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "UserPoolName": "DEAUserPool",
        "VerificationMessageTemplate": Object {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new account is {####}",
          "EmailSubject": "Verify your new account",
          "SmsMessage": "The verification code to your new account is {####}",
        },
      },
      "Type": "AWS::Cognito::UserPool",
      "UpdateReplacePolicy": "Delete",
    },
    "DeaAuthDEAUserPooldeaappclient3742F9D7": Object {
      "Properties": Object {
        "AccessTokenValidity": 720,
        "AllowedOAuthFlows": Array [
          "code",
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": Array [
          "profile",
          "phone",
          "email",
          "openid",
          "aws.cognito.signin.user.admin",
        ],
        "CallbackURLs": Array [
          "https://example.com",
        ],
        "ClientName": "dea-app-client",
        "EnableTokenRevocation": true,
        "ExplicitAuthFlows": Array [
          "ALLOW_USER_PASSWORD_AUTH",
          "ALLOW_ADMIN_USER_PASSWORD_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH",
        ],
        "GenerateSecret": false,
        "IdTokenValidity": 720,
        "PreventUserExistenceErrors": "ENABLED",
        "RefreshTokenValidity": 720,
        "SupportedIdentityProviders": Array [
          "COGNITO",
        ],
        "TokenValidityUnits": Object {
          "AccessToken": "minutes",
          "IdToken": "minutes",
          "RefreshToken": "minutes",
        },
        "UserPoolId": Object {
          "Ref": "DeaAuthDEAUserPool22DB2BAB",
        },
      },
      "Type": "AWS::Cognito::UserPoolClient",
    },
    "DeaAuthDeaAuthTESTAuthTestGroupRole082851D3": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "ForAnyValue:StringLike": Object {
                  "cognito-identity.amazonaws.com:amr": "authenticated",
                },
                "StringEquals": Object {
                  "cognito-identity.amazonaws.com:aud": Object {
                    "Ref": "DeaAuthDEAIdentityPool0B891C1B",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": "cognito-identity.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role used for auth e2e testing",
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaAuthDeaAuthTESTAuthTestGroupRolePolicy1B7BE378": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "execute-api:Invoke",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStagetestDA53C9A7",
                      },
                      "/GET/hi",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStagetestDA53C9A7",
                      },
                      "/GET/bye",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeaAuthDeaAuthTESTAuthTestGroupRolePolicy1B7BE378",
        "Roles": Array [
          Object {
            "Ref": "DeaAuthDeaAuthTESTAuthTestGroupRole082851D3",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DeaAuthDeaAuthTESTCaseWorkerGroupRole7EF77E8C": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "ForAnyValue:StringLike": Object {
                  "cognito-identity.amazonaws.com:amr": "authenticated",
                },
                "StringEquals": Object {
                  "cognito-identity.amazonaws.com:aud": Object {
                    "Ref": "DeaAuthDEAIdentityPool0B891C1B",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": "cognito-identity.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role containing users who need access to case APIs",
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaAuthDeaAuthTESTCaseWorkerGroupRolePolicyCDD3D80E": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "execute-api:Invoke",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStagetestDA53C9A7",
                      },
                      "/POST/cases",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStagetestDA53C9A7",
                      },
                      "/GET/cases/*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStagetestDA53C9A7",
                      },
                      "/PUT/cases/*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStagetestDA53C9A7",
                      },
                      "/DELETE/cases/*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStagetestDA53C9A7",
                      },
                      "/POST/cases/*/userMemberships",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeaAuthDeaAuthTESTCaseWorkerGroupRolePolicyCDD3D80E",
        "Roles": Array [
          Object {
            "Ref": "DeaAuthDeaAuthTESTCaseWorkerGroupRole7EF77E8C",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DeaAuthDeaAuthTESTCreateCasesTestGroupRole8B995277": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "ForAnyValue:StringLike": Object {
                  "cognito-identity.amazonaws.com:amr": "authenticated",
                },
                "StringEquals": Object {
                  "cognito-identity.amazonaws.com:aud": Object {
                    "Ref": "DeaAuthDEAIdentityPool0B891C1B",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": "cognito-identity.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role used for create cases API e2e testing",
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaAuthDeaAuthTESTCreateCasesTestGroupRolePolicy51BAD4B9": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "execute-api:Invoke",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStagetestDA53C9A7",
                      },
                      "/POST/cases",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStagetestDA53C9A7",
                      },
                      "/DELETE/cases/*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStagetestDA53C9A7",
                      },
                      "/GET/cases/all-cases",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeaAuthDeaAuthTESTCreateCasesTestGroupRolePolicy51BAD4B9",
        "Roles": Array [
          Object {
            "Ref": "DeaAuthDeaAuthTESTCreateCasesTestGroupRole8B995277",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DeaAuthDeaAuthTESTGetCaseTestGroupRoleE3E8EDEE": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "ForAnyValue:StringLike": Object {
                  "cognito-identity.amazonaws.com:amr": "authenticated",
                },
                "StringEquals": Object {
                  "cognito-identity.amazonaws.com:aud": Object {
                    "Ref": "DeaAuthDEAIdentityPool0B891C1B",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": "cognito-identity.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role used for get cases API e2e testing",
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaAuthDeaAuthTESTGetCaseTestGroupRolePolicyA96F1FB7": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "execute-api:Invoke",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStagetestDA53C9A7",
                      },
                      "/POST/cases",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStagetestDA53C9A7",
                      },
                      "/GET/cases/*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStagetestDA53C9A7",
                      },
                      "/DELETE/cases/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeaAuthDeaAuthTESTGetCaseTestGroupRolePolicyA96F1FB7",
        "Roles": Array [
          Object {
            "Ref": "DeaAuthDeaAuthTESTGetCaseTestGroupRoleE3E8EDEE",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DeaAuthGetCaseTestGroup01C4525C": Object {
      "Properties": Object {
        "Description": "Group used for get cases API e2e testing",
        "GroupName": "GetCaseTestGroup",
        "Precedence": 100,
        "RoleArn": Object {
          "Fn::GetAtt": Array [
            "DeaAuthDeaAuthTESTGetCaseTestGroupRoleE3E8EDEE",
            "Arn",
          ],
        },
        "UserPoolId": Object {
          "Ref": "DeaAuthDEAUserPool22DB2BAB",
        },
      },
      "Type": "AWS::Cognito::UserPoolGroup",
    },
    "DeaAuthIdPoolAuthenticatedRole3AD16775": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "ForAnyValue:StringLike": Object {
                  "cognito-identity.amazonaws.com:amr": "authenticated",
                },
                "StringEquals": Object {
                  "cognito-identity.amazonaws.com:aud": Object {
                    "Ref": "DeaAuthDEAIdentityPool0B891C1B",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": "cognito-identity.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaAuthIdPoolUnAuthenticatedRoleA427A1FB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "ForAnyValue:StringLike": Object {
                  "cognito-identity.amazonaws.com:amr": "unauthenticated",
                },
                "StringEquals": Object {
                  "cognito-identity.amazonaws.com:aud": Object {
                    "Ref": "DeaAuthDEAIdentityPool0B891C1B",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": "cognito-identity.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaAuthIdentityPoolCognitoRoleAttachment914C22D9": Object {
      "Properties": Object {
        "IdentityPoolId": Object {
          "Ref": "DeaAuthDEAIdentityPool0B891C1B",
        },
        "RoleMappings": Object {
          "roleMappingsKey": Object {
            "AmbiguousRoleResolution": "AuthenticatedRole",
            "IdentityProvider": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "cognito-idp.us-east-1.amazonaws.com/",
                  Object {
                    "Ref": "DeaAuthDEAUserPool22DB2BAB",
                  },
                  ":",
                  Object {
                    "Ref": "DeaAuthDEAUserPooldeaappclient3742F9D7",
                  },
                ],
              ],
            },
            "RulesConfiguration": Object {
              "Rules": Array [
                Object {
                  "Claim": "cognito:groups",
                  "MatchType": "Contains",
                  "RoleARN": Object {
                    "Fn::GetAtt": Array [
                      "DeaAuthDeaAuthTESTCaseWorkerGroupRole7EF77E8C",
                      "Arn",
                    ],
                  },
                  "Value": "CaseWorkerGroup",
                },
                Object {
                  "Claim": "cognito:groups",
                  "MatchType": "Contains",
                  "RoleARN": Object {
                    "Fn::GetAtt": Array [
                      "DeaAuthDeaAuthTESTAuthTestGroupRole082851D3",
                      "Arn",
                    ],
                  },
                  "Value": "AuthTestGroup",
                },
                Object {
                  "Claim": "cognito:groups",
                  "MatchType": "Contains",
                  "RoleARN": Object {
                    "Fn::GetAtt": Array [
                      "DeaAuthDeaAuthTESTCreateCasesTestGroupRole8B995277",
                      "Arn",
                    ],
                  },
                  "Value": "CreateCasesTestGroup",
                },
                Object {
                  "Claim": "cognito:groups",
                  "MatchType": "Contains",
                  "RoleARN": Object {
                    "Fn::GetAtt": Array [
                      "DeaAuthDeaAuthTESTGetCaseTestGroupRoleE3E8EDEE",
                      "Arn",
                    ],
                  },
                  "Value": "GetCaseTestGroup",
                },
              ],
            },
            "Type": "Token",
          },
        },
        "Roles": Object {
          "authenticated": Object {
            "Fn::GetAtt": Array [
              "DeaAuthIdPoolAuthenticatedRole3AD16775",
              "Arn",
            ],
          },
          "unauthenticated": Object {
            "Fn::GetAtt": Array [
              "DeaAuthIdPoolUnAuthenticatedRoleA427A1FB",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::Cognito::IdentityPoolRoleAttachment",
    },
    "DeaBackendStackDeaTableE9FE4A05": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W28",
              "reason": "Table requires an explicit name to be referenced by Onetable",
            },
          ],
        },
      },
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "PK",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "SK",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "GSI1PK",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "GSI1SK",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "GSI2PK",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "GSI2SK",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "GlobalSecondaryIndexes": Array [
          Object {
            "IndexName": "GSI1",
            "KeySchema": Array [
              Object {
                "AttributeName": "GSI1PK",
                "KeyType": "HASH",
              },
              Object {
                "AttributeName": "GSI1SK",
                "KeyType": "RANGE",
              },
            ],
            "Projection": Object {
              "ProjectionType": "ALL",
            },
          },
          Object {
            "IndexName": "GSI2",
            "KeySchema": Array [
              Object {
                "AttributeName": "GSI2PK",
                "KeyType": "HASH",
              },
              Object {
                "AttributeName": "GSI2SK",
                "KeyType": "RANGE",
              },
            ],
            "Projection": Object {
              "ProjectionType": "ALL",
            },
          },
        ],
        "KeySchema": Array [
          Object {
            "AttributeName": "PK",
            "KeyType": "HASH",
          },
          Object {
            "AttributeName": "SK",
            "KeyType": "RANGE",
          },
        ],
        "PointInTimeRecoverySpecification": Object {
          "PointInTimeRecoveryEnabled": true,
        },
        "SSESpecification": Object {
          "KMSMasterKeyId": Object {
            "Fn::GetAtt": Array [
              "primaryCustomerKey87EC2263",
              "Arn",
            ],
          },
          "SSEEnabled": true,
          "SSEType": "KMS",
        },
        "TableName": "DeaTable",
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "DeaBackendStackS3AccessLogsBucket46FDD3E0": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W35",
              "reason": "This is an access log bucket, we don't need to configure access logging for access log buckets",
            },
          ],
        },
      },
      "Properties": Object {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "DeaBackendStackS3AccessLogsBucketAutoDeleteObjectsCustomResource54474E78": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "DeaBackendStackS3AccessLogsBucketPolicyCF6769D3",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "DeaBackendStackS3AccessLogsBucket46FDD3E0",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "DeaBackendStackS3AccessLogsBucketPolicyCF6769D3": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "DeaBackendStackS3AccessLogsBucket46FDD3E0",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaBackendStackS3AccessLogsBucket46FDD3E0",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaBackendStackS3AccessLogsBucket46FDD3E0",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaBackendStackS3AccessLogsBucket46FDD3E0",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaBackendStackS3AccessLogsBucket46FDD3E0",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:PutObject",
              "Condition": Object {
                "StringEquals": Object {
                  "aws:SourceAccount": Object {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logging.s3.amazonaws.com",
              },
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaBackendStackS3AccessLogsBucket46FDD3E0",
                          "Arn",
                        ],
                      },
                      "/dea-ui-access-log*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaBackendStackS3AccessLogsBucket46FDD3E0",
                          "Arn",
                        ],
                      },
                      "/dea-datasets-access-log*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "DeaBackendStackdeadatasetstesttestville29D381D6": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "BucketKeyEnabled": true,
              "ServerSideEncryptionByDefault": Object {
                "KMSMasterKeyID": Object {
                  "Fn::GetAtt": Array [
                    "primaryCustomerKey87EC2263",
                    "Arn",
                  ],
                },
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "BucketName": "dea-datasets-test-testville",
        "LifecycleConfiguration": Object {
          "Rules": Array [
            Object {
              "AbortIncompleteMultipartUpload": Object {
                "DaysAfterInitiation": 1,
              },
              "Id": "DeaDatasetsDeleteIncompleteUploadsLifecyclePolicy",
              "Status": "Enabled",
            },
          ],
        },
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Ref": "DeaBackendStackS3AccessLogsBucket46FDD3E0",
          },
          "LogFilePrefix": "dea-datasets-access-log",
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "VersioningConfiguration": Object {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "DeaBackendStackdeadatasetstesttestvillePolicyA6C4456B": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "DeaBackendStackdeadatasetstesttestville29D381D6",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaBackendStackdeadatasetstesttestville29D381D6",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaBackendStackdeadatasetstesttestville29D381D6",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "DeaUiStackDeaUiStackbucket2409F549": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Ref": "DeaBackendStackS3AccessLogsBucket46FDD3E0",
          },
          "LogFilePrefix": "dea-ui-access-log",
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
          Object {
            "Key": "aws-cdk:cr-owned:debec8f9",
            "Value": "true",
          },
        ],
        "WebsiteConfiguration": Object {
          "IndexDocument": "index.html",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "DeaUiStackDeaUiStackbucketAutoDeleteObjectsCustomResource59A9A4D8": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "DeaUiStackDeaUiStackbucketPolicy3F40F0AF",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "DeaUiStackDeaUiStackbucket2409F549",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "DeaUiStackDeaUiStackbucketPolicy3F40F0AF": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "DeaUiStackDeaUiStackbucket2409F549",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaUiStackDeaUiStackbucket2409F549",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaUiStackDeaUiStackbucket2409F549",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaUiStackDeaUiStackbucket2409F549",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaUiStackDeaUiStackbucket2409F549",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
              "Sid": "Deny requests that do not use TLS/HTTPS",
            },
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "StringNotEquals": Object {
                  "s3:signatureversion": "AWS4-HMAC-SHA256",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "DeaUiStackDeaUiStackbucket2409F549",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "Deny requests that do not use SigV4",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "DeaUiStackDeaUiStackdeploymentbucketAwsCliLayerE6B55D5A": Object {
      "Properties": Object {
        "Content": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Description": "/opt/awscli/aws",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "DeaUiStackDeaUiStackdeploymentbucketCustomResource5769B150": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DestinationBucketName": Object {
          "Ref": "DeaUiStackDeaUiStackbucket2409F549",
        },
        "Prune": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
            "Arn",
          ],
        },
        "SourceBucketNames": Array [
          Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
        ],
        "SourceObjectKeys": Array [
          "[HASH REMOVED].zip",
        ],
      },
      "Type": "Custom::CDKBucketDeployment",
      "UpdateReplacePolicy": "Delete",
    },
    "DeaUiStackrole3432A944": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaUiStackroleDefaultPolicyBE7B3383": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaUiStackDeaUiStackbucket2409F549",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaUiStackDeaUiStackbucket2409F549",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeaUiStackroleDefaultPolicyBE7B3383",
        "Roles": Array [
          Object {
            "Ref": "DeaUiStackrole3432A944",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "primaryCustomerKey87EC2263": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "EnableKeyRotation": true,
        "KeyPolicy": Object {
          "Statement": Array [
            Object {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
              "Sid": "main-key-share-statement",
            },
            Object {
              "Action": Array [
                "kms:Encrypt*",
                "kms:Decrypt*",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
                "kms:Describe*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "logs.",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ".amazonaws.com",
                    ],
                  ],
                },
              },
              "Resource": "*",
              "Sid": "main-key-share-statement",
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:Encrypt",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "lambda.",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ".amazonaws.com",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DeaApiGatewaydeabaselambdarole91512884",
                  "Arn",
                ],
              },
              "Sid": "main-key-share-statement",
            },
          ],
          "Version": "2012-10-17",
        },
        "PendingWindowInDays": 7,
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Delete",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
