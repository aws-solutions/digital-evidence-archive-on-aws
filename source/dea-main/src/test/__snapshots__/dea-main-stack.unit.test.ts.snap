// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DeaMainStack synthesizes the way we expect 1`] = `
Object {
  "Outputs": Object {
    "DeaApiGatewaydeaApiUrlD841996C": Object {
      "Export": Object {
        "Name": "[STAGE-REMOVED]-deaApiUrl",
      },
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "DeaApiGatewaydeaapi822A9228",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
            },
            "/",
          ],
        ],
      },
    },
    "DeaApiGatewaydeaapiEndpointE11E5524": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "DeaApiGatewaydeaapi822A9228",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
            },
            "/",
          ],
        ],
      },
    },
    "DeaAuthidentityPoolIdEBA0D0C1": Object {
      "Export": Object {
        "Name": "[STAGE-REMOVED]-identityPoolId",
      },
      "Value": Object {
        "Ref": "DeaAuthDEAIdentityPool0B891C1B",
      },
    },
    "DeaAuthpoolProviderUrl9C814957": Object {
      "Export": Object {
        "Name": "[STAGE-REMOVED]-poolProviderUrl",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "DeaAuthDEAUserPool22DB2BAB",
          "ProviderURL",
        ],
      },
    },
    "DeaAuthuserPoolClientId8B436482": Object {
      "Export": Object {
        "Name": "[STAGE-REMOVED]-userPoolClientId",
      },
      "Value": Object {
        "Ref": "DeaAuthDEAUserPooldeaappclient3742F9D7",
      },
    },
    "DeaAuthuserPoolIdB0FAC1EB": Object {
      "Export": Object {
        "Name": "[STAGE-REMOVED]-userPoolId",
      },
      "Value": Object {
        "Ref": "DeaAuthDEAUserPool22DB2BAB",
      },
    },
    "DeaBackendStackDeaS3AccessLogs7805BEF5": Object {
      "Export": Object {
        "Name": "[STAGE-REMOVED]-DeaS3AccessLogs",
      },
      "Value": Object {
        "Ref": "DeaBackendStackS3AccessLogsBucket46FDD3E0",
      },
    },
    "DeaBackendStackDeaS3Datasets74D75F63": Object {
      "Export": Object {
        "Name": "[STAGE-REMOVED]-DeaS3Datasets",
      },
      "Value": Object {
        "Ref": "DeaBackendStackS3DatasetsBucket408FF954",
      },
    },
    "mainAccountKmsKey": Object {
      "Export": Object {
        "Name": "[STAGE-REMOVED]-mainAccountKmsKey",
      },
      "Value": Object {
        "Fn::GetAtt": Array [
          "primaryCustomerKey87EC2263",
          "Arn",
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": Object {
      "DependsOn": Array [
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)             indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Handler": "index.handler",
        "Layers": Array [
          Object {
            "Ref": "DeaUiStackartifactdeploymentbucketAwsCliLayer760BCEFB",
          },
        ],
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaUiStackartifactbucketFFC87A37",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaUiStackartifactbucketFFC87A37",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "Roles": Array [
          Object {
            "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": Object {
      "DependsOn": Array [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)             indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Lambda function for auto-deleting objects in ",
              Object {
                "Ref": "DeaBackendStackS3AccessLogsBucket46FDD3E0",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "__entrypoint__.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs14.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaApiGatewayAPIGatewayAccessLogs1571FA9D": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "KmsKeyId": Object {
          "Fn::GetAtt": Array [
            "primaryCustomerKey87EC2263",
            "Arn",
          ],
        },
        "RetentionInDays": 731,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "DeaApiGatewayDELETEDeleteCase91CB5F89": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1",
        "DeaApiGatewaydeabaselambdarole91512884",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendStackS3DatasetsBucket408FF954",
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendStackDeaTableE9FE4A05",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeabaselambdarole91512884",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewayDELETERemoveUserFromCaseD22CC76C": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1",
        "DeaApiGatewaydeabaselambdarole91512884",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendStackS3DatasetsBucket408FF954",
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendStackDeaTableE9FE4A05",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeabaselambdarole91512884",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewayGETDownloadCaseFile32575192": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1",
        "DeaApiGatewaydeabaselambdarole91512884",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendStackS3DatasetsBucket408FF954",
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendStackDeaTableE9FE4A05",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeabaselambdarole91512884",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewayGETExchangeAuthTokenForCredentials18777BF4": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeaauthlambdaroleDefaultPolicy1298F4B5",
        "DeaApiGatewaydeaauthlambdarole4F5CC393",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendStackS3DatasetsBucket408FF954",
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendStackDeaTableE9FE4A05",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeaauthlambdarole4F5CC393",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewayGETGetAllCases83536312": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1",
        "DeaApiGatewaydeabaselambdarole91512884",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendStackS3DatasetsBucket408FF954",
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendStackDeaTableE9FE4A05",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeabaselambdarole91512884",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewayGETGetAllUsersD6F48F6E": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1",
        "DeaApiGatewaydeabaselambdarole91512884",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendStackS3DatasetsBucket408FF954",
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendStackDeaTableE9FE4A05",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeabaselambdarole91512884",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewayGETGetAvailableEndpoints3D87F8A4": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1",
        "DeaApiGatewaydeabaselambdarole91512884",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendStackS3DatasetsBucket408FF954",
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendStackDeaTableE9FE4A05",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeabaselambdarole91512884",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewayGETGetCaseActions00B0B2FE": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1",
        "DeaApiGatewaydeabaselambdarole91512884",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendStackS3DatasetsBucket408FF954",
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendStackDeaTableE9FE4A05",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeabaselambdarole91512884",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewayGETGetCaseAudit536E35D4": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1",
        "DeaApiGatewaydeabaselambdarole91512884",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendStackS3DatasetsBucket408FF954",
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendStackDeaTableE9FE4A05",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeabaselambdarole91512884",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewayGETGetCaseDetails2DAE602F": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1",
        "DeaApiGatewaydeabaselambdarole91512884",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendStackS3DatasetsBucket408FF954",
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendStackDeaTableE9FE4A05",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeabaselambdarole91512884",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewayGETGetCaseFileDetail9C46D770": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1",
        "DeaApiGatewaydeabaselambdarole91512884",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendStackS3DatasetsBucket408FF954",
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendStackDeaTableE9FE4A05",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeabaselambdarole91512884",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewayGETGetCaseFiles5D776CE0": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1",
        "DeaApiGatewaydeabaselambdarole91512884",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendStackS3DatasetsBucket408FF954",
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendStackDeaTableE9FE4A05",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeabaselambdarole91512884",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewayGETGetLoginUrl6676EA3E": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeaauthlambdaroleDefaultPolicy1298F4B5",
        "DeaApiGatewaydeaauthlambdarole4F5CC393",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendStackS3DatasetsBucket408FF954",
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendStackDeaTableE9FE4A05",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeaauthlambdarole4F5CC393",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewayGETGetLogoutUrl36676722": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeaauthlambdaroleDefaultPolicy1298F4B5",
        "DeaApiGatewaydeaauthlambdarole4F5CC393",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendStackS3DatasetsBucket408FF954",
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendStackDeaTableE9FE4A05",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeaauthlambdarole4F5CC393",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewayGETGetMyCases60A3BAE4": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1",
        "DeaApiGatewaydeabaselambdarole91512884",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendStackS3DatasetsBucket408FF954",
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendStackDeaTableE9FE4A05",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeabaselambdarole91512884",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewayGETGetScopedCaseInformation4A196540": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1",
        "DeaApiGatewaydeabaselambdarole91512884",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendStackS3DatasetsBucket408FF954",
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendStackDeaTableE9FE4A05",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeabaselambdarole91512884",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewayGETGetUsersFromCaseDF0ABA41": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1",
        "DeaApiGatewaydeabaselambdarole91512884",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendStackS3DatasetsBucket408FF954",
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendStackDeaTableE9FE4A05",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeabaselambdarole91512884",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewayPOSTCreateCaseFBDDC364": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1",
        "DeaApiGatewaydeabaselambdarole91512884",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendStackS3DatasetsBucket408FF954",
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendStackDeaTableE9FE4A05",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeabaselambdarole91512884",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewayPOSTCreateCaseOwner21613ABD": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1",
        "DeaApiGatewaydeabaselambdarole91512884",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendStackS3DatasetsBucket408FF954",
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendStackDeaTableE9FE4A05",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeabaselambdarole91512884",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewayPOSTGetAuthenticationToken5718D484": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeaauthlambdaroleDefaultPolicy1298F4B5",
        "DeaApiGatewaydeaauthlambdarole4F5CC393",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendStackS3DatasetsBucket408FF954",
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendStackDeaTableE9FE4A05",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeaauthlambdarole4F5CC393",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewayPOSTInitiateCaseFileUpload060E0D60": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1",
        "DeaApiGatewaydeabaselambdarole91512884",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendStackS3DatasetsBucket408FF954",
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendStackDeaTableE9FE4A05",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeabaselambdarole91512884",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewayPOSTInviteUserToCaseB26DE4D4": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1",
        "DeaApiGatewaydeabaselambdarole91512884",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendStackS3DatasetsBucket408FF954",
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendStackDeaTableE9FE4A05",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeabaselambdarole91512884",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewayPOSTRefreshIdToken92226CFF": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1",
        "DeaApiGatewaydeabaselambdarole91512884",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendStackS3DatasetsBucket408FF954",
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendStackDeaTableE9FE4A05",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeabaselambdarole91512884",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewayPOSTRequestCaseAuditA90E8214": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1",
        "DeaApiGatewaydeabaselambdarole91512884",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendStackS3DatasetsBucket408FF954",
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendStackDeaTableE9FE4A05",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeabaselambdarole91512884",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewayPOSTRevokeAuthTokenFC739416": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1",
        "DeaApiGatewaydeabaselambdarole91512884",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendStackS3DatasetsBucket408FF954",
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendStackDeaTableE9FE4A05",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeabaselambdarole91512884",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewayPUTCompleteCaseFileUploadF4BF98F1": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1",
        "DeaApiGatewaydeabaselambdarole91512884",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendStackS3DatasetsBucket408FF954",
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendStackDeaTableE9FE4A05",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeabaselambdarole91512884",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewayPUTModifyUserCasePermissionsABF0FB7A": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1",
        "DeaApiGatewaydeabaselambdarole91512884",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendStackS3DatasetsBucket408FF954",
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendStackDeaTableE9FE4A05",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeabaselambdarole91512884",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewayPUTUpdateCaseDetails69D719BE": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1",
        "DeaApiGatewaydeabaselambdarole91512884",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendStackS3DatasetsBucket408FF954",
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendStackDeaTableE9FE4A05",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeabaselambdarole91512884",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewayPUTUpdateCaseStatus1BB3B9FE": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1",
        "DeaApiGatewaydeabaselambdarole91512884",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
            Object {
              "id": "W92",
              "reason": "Reserved concurrency is currently not required. Revisit in the future",
            },
            Object {
              "id": "W89",
              "reason": "The serverless application lens (https://docs.aws.amazon.com/wellarchitected/latest/serverless-applications-lens/aws-lambda.html)               indicates lambdas should not be deployed in private VPCs unless they require acces to resources also within a VPC",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AUDIT_LOG_GROUP_NAME": Object {
              "Ref": "deaAuditLogs7B75D3F1",
            },
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
            "DATASETS_BUCKET_NAME": Object {
              "Ref": "DeaBackendStackS3DatasetsBucket408FF954",
            },
            "NODE_OPTIONS": "--enable-source-maps",
            "STAGE": "[STAGE-REMOVED]",
            "TABLE_NAME": Object {
              "Ref": "DeaBackendStackDeaTableE9FE4A05",
            },
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeabaselambdarole91512884",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 30,
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaApiGatewaydeaapi822A9228": Object {
      "Properties": Object {
        "Description": "Backend API",
        "EndpointConfiguration": Object {
          "Types": Array [
            "REGIONAL",
          ],
        },
        "Name": "dea-api",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "DeaApiGatewaydeaapiAccountBA9E69BF": Object {
      "DeletionPolicy": "Retain",
      "DependsOn": Array [
        "DeaApiGatewaydeaapi822A9228",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeaapiCloudWatchRole1E7850B5",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "DeaApiGatewaydeaapiCloudWatchRole1E7850B5": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "DeaApiGatewaydeaapiDEAUsagePlanEA7656DD": Object {
      "Properties": Object {
        "ApiStages": Array [
          Object {
            "ApiId": Object {
              "Ref": "DeaApiGatewaydeaapi822A9228",
            },
            "Stage": Object {
              "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
            },
            "Throttle": Object {},
          },
        ],
        "Throttle": Object {
          "BurstLimit": 50,
          "RateLimit": 25,
        },
        "UsagePlanName": "dea-usage-plan",
      },
      "Type": "AWS::ApiGateway::UsagePlan",
    },
    "DeaApiGatewaydeaapiDeployment99E77629b6496c45985dcbd91c9feaeeb65f34cf": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeaapiauthauthCodeOPTIONS8EA9BA0F",
        "DeaApiGatewaydeaapiauthauthCodeFC92ADBD",
        "DeaApiGatewaydeaapiauthauthCodetokenOPTIONSECFF39C3",
        "DeaApiGatewaydeaapiauthauthCodetokenPOST7CE36F34",
        "DeaApiGatewaydeaapiauthauthCodetoken7071838E",
        "DeaApiGatewaydeaapiauthcredentialsexchangeGET8C5D8259",
        "DeaApiGatewaydeaapiauthcredentialsexchangeOPTIONS2F3A1F36",
        "DeaApiGatewaydeaapiauthcredentialsexchange1DA99B76",
        "DeaApiGatewaydeaapiauthcredentialsOPTIONSC76ADF0D",
        "DeaApiGatewaydeaapiauthcredentials9DE853F5",
        "DeaApiGatewaydeaapiauthloginUrlGETA4078375",
        "DeaApiGatewaydeaapiauthloginUrlOPTIONSC71EAA7B",
        "DeaApiGatewaydeaapiauthloginUrlDBEB32CD",
        "DeaApiGatewaydeaapiauthlogoutUrlGET44834196",
        "DeaApiGatewaydeaapiauthlogoutUrlOPTIONSA32BAB71",
        "DeaApiGatewaydeaapiauthlogoutUrlD5D9A02E",
        "DeaApiGatewaydeaapiauthOPTIONS95F6C2CF",
        "DeaApiGatewaydeaapiauthrefreshTokenOPTIONS969FDA6D",
        "DeaApiGatewaydeaapiauthrefreshTokenPOST0744B2BB",
        "DeaApiGatewaydeaapiauthrefreshToken9A393A9C",
        "DeaApiGatewaydeaapiauth42A62286",
        "DeaApiGatewaydeaapiauthrevokeTokenOPTIONS2D8639A5",
        "DeaApiGatewaydeaapiauthrevokeTokenPOSTE5A8C6B9",
        "DeaApiGatewaydeaapiauthrevokeTokenE3DB92E3",
        "DeaApiGatewaydeaapiavailableEndpointsGET1778E5A8",
        "DeaApiGatewaydeaapiavailableEndpointsOPTIONS271595FD",
        "DeaApiGatewaydeaapiavailableEndpointsF4D850DD",
        "DeaApiGatewaydeaapicasescaseIdactionsGET6EB75B66",
        "DeaApiGatewaydeaapicasescaseIdactionsOPTIONS2140F793",
        "DeaApiGatewaydeaapicasescaseIdactionsAB55E158",
        "DeaApiGatewaydeaapicasescaseIdauditauditIdcsvGETF934A5FF",
        "DeaApiGatewaydeaapicasescaseIdauditauditIdcsvOPTIONSF0C8820E",
        "DeaApiGatewaydeaapicasescaseIdauditauditIdcsv59A5449B",
        "DeaApiGatewaydeaapicasescaseIdauditauditIdOPTIONSEE8EF3DD",
        "DeaApiGatewaydeaapicasescaseIdauditauditIdA0355355",
        "DeaApiGatewaydeaapicasescaseIdauditOPTIONSBC0FFF0A",
        "DeaApiGatewaydeaapicasescaseIdauditPOST92AD4FAB",
        "DeaApiGatewaydeaapicasescaseIdauditBB1A3E17",
        "DeaApiGatewaydeaapicasescaseIddetailsDELETEE7B8E1B0",
        "DeaApiGatewaydeaapicasescaseIddetailsGET41929CBD",
        "DeaApiGatewaydeaapicasescaseIddetailsOPTIONS53E2D203",
        "DeaApiGatewaydeaapicasescaseIddetailsPUT3D9BC22B",
        "DeaApiGatewaydeaapicasescaseIddetailsE86153E3",
        "DeaApiGatewaydeaapicasescaseIdfilesfileIdcontentsGETD43BFE99",
        "DeaApiGatewaydeaapicasescaseIdfilesfileIdcontentsOPTIONS1DC417CA",
        "DeaApiGatewaydeaapicasescaseIdfilesfileIdcontentsPUTF6AA4CB8",
        "DeaApiGatewaydeaapicasescaseIdfilesfileIdcontents21AB00FB",
        "DeaApiGatewaydeaapicasescaseIdfilesfileIdinfoGET4FE96B29",
        "DeaApiGatewaydeaapicasescaseIdfilesfileIdinfoOPTIONSC2BB332A",
        "DeaApiGatewaydeaapicasescaseIdfilesfileIdinfoF9BE4EE2",
        "DeaApiGatewaydeaapicasescaseIdfilesfileIdOPTIONS25DF38EE",
        "DeaApiGatewaydeaapicasescaseIdfilesfileId16B45CA0",
        "DeaApiGatewaydeaapicasescaseIdfilesGET13698780",
        "DeaApiGatewaydeaapicasescaseIdfilesOPTIONS7517D173",
        "DeaApiGatewaydeaapicasescaseIdfilesPOST3D5F353E",
        "DeaApiGatewaydeaapicasescaseIdfilesF29B9178",
        "DeaApiGatewaydeaapicasescaseIdOPTIONSED4E4189",
        "DeaApiGatewaydeaapicasescaseIdownerOPTIONS08191B25",
        "DeaApiGatewaydeaapicasescaseIdownerPOSTEA20102A",
        "DeaApiGatewaydeaapicasescaseIdowner33837916",
        "DeaApiGatewaydeaapicasescaseId3D754C88",
        "DeaApiGatewaydeaapicasescaseIdscopedInformationGETF7DBC337",
        "DeaApiGatewaydeaapicasescaseIdscopedInformationOPTIONS80FCFACF",
        "DeaApiGatewaydeaapicasescaseIdscopedInformation7E7BAB42",
        "DeaApiGatewaydeaapicasescaseIdstatusOPTIONSCC9D3E46",
        "DeaApiGatewaydeaapicasescaseIdstatusPUTDBBE8278",
        "DeaApiGatewaydeaapicasescaseIdstatusEAC066DB",
        "DeaApiGatewaydeaapicasescaseIduserMembershipsGET89A6E1EF",
        "DeaApiGatewaydeaapicasescaseIduserMembershipsOPTIONSA41AAFF1",
        "DeaApiGatewaydeaapicasescaseIduserMembershipsPOST9A7D9804",
        "DeaApiGatewaydeaapicasescaseIduserMemberships4457D242",
        "DeaApiGatewaydeaapicasescaseIdusersuserIdmembershipsDELETE8D61025A",
        "DeaApiGatewaydeaapicasescaseIdusersuserIdmembershipsOPTIONS0F1651A7",
        "DeaApiGatewaydeaapicasescaseIdusersuserIdmembershipsPUT6003274C",
        "DeaApiGatewaydeaapicasescaseIdusersuserIdmembershipsBA0A2E7C",
        "DeaApiGatewaydeaapicasescaseIdusersuserIdOPTIONS3B6673A7",
        "DeaApiGatewaydeaapicasescaseIdusersuserIdEE478FC8",
        "DeaApiGatewaydeaapicasescaseIdusersOPTIONS09886FE5",
        "DeaApiGatewaydeaapicasescaseIdusers2F3FB5C6",
        "DeaApiGatewaydeaapicasesallcasesGET92FB3B5C",
        "DeaApiGatewaydeaapicasesallcasesOPTIONSF976C9CD",
        "DeaApiGatewaydeaapicasesallcasesBDAE5421",
        "DeaApiGatewaydeaapicasesmycasesGET6F1F66A1",
        "DeaApiGatewaydeaapicasesmycasesOPTIONS4C431DB3",
        "DeaApiGatewaydeaapicasesmycases25599FEB",
        "DeaApiGatewaydeaapicasesOPTIONS4FE777E3",
        "DeaApiGatewaydeaapicasesPOST966FABAB",
        "DeaApiGatewaydeaapicasesC01D624D",
        "DeaApiGatewaydeaapiOPTIONS098252F2",
        "DeaApiGatewaydeaapiuiproxyGETD7F3590B",
        "DeaApiGatewaydeaapiuiproxyOPTIONS7D1A7859",
        "DeaApiGatewaydeaapiuiproxy57F1250D",
        "DeaApiGatewaydeaapiuiauthtestGET744C7E45",
        "DeaApiGatewaydeaapiuiauthtestOPTIONSD475105E",
        "DeaApiGatewaydeaapiuiauthtest0A8A5523",
        "DeaApiGatewaydeaapiuicasedetailGETD21EB4EB",
        "DeaApiGatewaydeaapiuicasedetailOPTIONSC371556A",
        "DeaApiGatewaydeaapiuicasedetail096431E3",
        "DeaApiGatewaydeaapiuicreatecasesGET6E1F559E",
        "DeaApiGatewaydeaapiuicreatecasesOPTIONS4DF4B902",
        "DeaApiGatewaydeaapiuicreatecases51731CAC",
        "DeaApiGatewaydeaapiuiGET4360368B",
        "DeaApiGatewaydeaapiuiloginGETF8B1569E",
        "DeaApiGatewaydeaapiuiloginOPTIONS72139AA0",
        "DeaApiGatewaydeaapiuilogin44F28D1A",
        "DeaApiGatewaydeaapiuiOPTIONSF590A754",
        "DeaApiGatewaydeaapiui838E08AB",
        "DeaApiGatewaydeaapiuiuploadfilesGET18F68E99",
        "DeaApiGatewaydeaapiuiuploadfilesOPTIONS447589BB",
        "DeaApiGatewaydeaapiuiuploadfilesD316EB71",
        "DeaApiGatewaydeaapiusersGETDBF3AD6C",
        "DeaApiGatewaydeaapiusersOPTIONS330C13A7",
        "DeaApiGatewaydeaapiusersCC765E55",
      ],
      "Properties": Object {
        "Description": "Backend API",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]": Object {
      "DependsOn": Array [
        "DeaApiGatewaydeaapiAccountBA9E69BF",
      ],
      "Properties": Object {
        "AccessLogSetting": Object {
          "DestinationArn": Object {
            "Fn::GetAtt": Array [
              "DeaApiGatewayAPIGatewayAccessLogs1571FA9D",
              "Arn",
            ],
          },
          "Format": "{\\"stage\\":\\"$context.stage\\",\\"requestId\\":\\"$context.requestId\\",\\"integrationRequestId\\":\\"$context.integration.requestId\\",\\"status\\":\\"$context.status\\",\\"apiId\\":\\"$context.apiId\\",\\"resourcePath\\":\\"$context.resourcePath\\",\\"path\\":\\"$context.path\\",\\"resourceId\\":\\"$context.resourceId\\",\\"httpMethod\\":\\"$context.httpMethod\\",\\"sourceIp\\":\\"$context.identity.sourceIp\\",\\"userAgent\\":\\"$context.identity.userAgent\\"}",
        },
        "DeploymentId": Object {
          "Ref": "DeaApiGatewaydeaapiDeployment99E77629b6496c45985dcbd91c9feaeeb65f34cf",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
        "StageName": "[STAGE-REMOVED]",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "DeaApiGatewaydeaapiOPTIONS098252F2": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeaapi822A9228",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapiauth42A62286": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeaapi822A9228",
            "RootResourceId",
          ],
        },
        "PathPart": "auth",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapiauthOPTIONS95F6C2CF": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapiauth42A62286",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapiauthauthCodeFC92ADBD": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapiauth42A62286",
        },
        "PathPart": "{authCode}",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapiauthauthCodeOPTIONS8EA9BA0F": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapiauthauthCodeFC92ADBD",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapiauthauthCodetoken7071838E": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapiauthauthCodeFC92ADBD",
        },
        "PathPart": "token",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapiauthauthCodetokenOPTIONSECFF39C3": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapiauthauthCodetoken7071838E",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapiauthauthCodetokenPOST7CE36F34": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayPOSTGetAuthenticationToken5718D484",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapiauthauthCodetoken7071838E",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapiauthauthCodetokenPOSTApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9POSTauthauthCodetoken9B5873D4": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayPOSTGetAuthenticationToken5718D484",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/POST/auth/*/token",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapiauthauthCodetokenPOSTApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9POSTauthauthCodetokenF01BAD47": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayPOSTGetAuthenticationToken5718D484",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/POST/auth/*/token",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapiauthcredentials9DE853F5": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapiauth42A62286",
        },
        "PathPart": "credentials",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapiauthcredentialsOPTIONSC76ADF0D": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapiauthcredentials9DE853F5",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapiauthcredentialsexchange1DA99B76": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapiauthcredentials9DE853F5",
        },
        "PathPart": "exchange",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapiauthcredentialsexchangeGET8C5D8259": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayGETExchangeAuthTokenForCredentials18777BF4",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapiauthcredentialsexchange1DA99B76",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapiauthcredentialsexchangeGETApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9GETauthcredentialsexchange3D82D6EB": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETExchangeAuthTokenForCredentials18777BF4",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/GET/auth/credentials/exchange",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapiauthcredentialsexchangeGETApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9GETauthcredentialsexchange2CAAC83F": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETExchangeAuthTokenForCredentials18777BF4",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/GET/auth/credentials/exchange",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapiauthcredentialsexchangeOPTIONS2F3A1F36": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapiauthcredentialsexchange1DA99B76",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapiauthloginUrlDBEB32CD": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapiauth42A62286",
        },
        "PathPart": "loginUrl",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapiauthloginUrlGETA4078375": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayGETGetLoginUrl6676EA3E",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapiauthloginUrlDBEB32CD",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapiauthloginUrlGETApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9GETauthloginUrl5CC8D391": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETGetLoginUrl6676EA3E",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/GET/auth/loginUrl",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapiauthloginUrlGETApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9GETauthloginUrlB20E499C": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETGetLoginUrl6676EA3E",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/GET/auth/loginUrl",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapiauthloginUrlOPTIONSC71EAA7B": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapiauthloginUrlDBEB32CD",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapiauthlogoutUrlD5D9A02E": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapiauth42A62286",
        },
        "PathPart": "logoutUrl",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapiauthlogoutUrlGET44834196": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayGETGetLogoutUrl36676722",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapiauthlogoutUrlD5D9A02E",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapiauthlogoutUrlGETApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9GETauthlogoutUrl430C249B": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETGetLogoutUrl36676722",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/GET/auth/logoutUrl",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapiauthlogoutUrlGETApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9GETauthlogoutUrlB37EA100": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETGetLogoutUrl36676722",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/GET/auth/logoutUrl",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapiauthlogoutUrlOPTIONSA32BAB71": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapiauthlogoutUrlD5D9A02E",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapiauthrefreshToken9A393A9C": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapiauth42A62286",
        },
        "PathPart": "refreshToken",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapiauthrefreshTokenOPTIONS969FDA6D": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapiauthrefreshToken9A393A9C",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapiauthrefreshTokenPOST0744B2BB": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayPOSTRefreshIdToken92226CFF",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapiauthrefreshToken9A393A9C",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapiauthrefreshTokenPOSTApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9POSTauthrefreshToken047B7DBF": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayPOSTRefreshIdToken92226CFF",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/POST/auth/refreshToken",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapiauthrefreshTokenPOSTApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9POSTauthrefreshToken73C06D6B": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayPOSTRefreshIdToken92226CFF",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/POST/auth/refreshToken",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapiauthrevokeTokenE3DB92E3": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapiauth42A62286",
        },
        "PathPart": "revokeToken",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapiauthrevokeTokenOPTIONS2D8639A5": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapiauthrevokeTokenE3DB92E3",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapiauthrevokeTokenPOSTApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9POSTauthrevokeTokenAABF3021": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayPOSTRevokeAuthTokenFC739416",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/POST/auth/revokeToken",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapiauthrevokeTokenPOSTApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9POSTauthrevokeTokenF1BC5D37": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayPOSTRevokeAuthTokenFC739416",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/POST/auth/revokeToken",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapiauthrevokeTokenPOSTE5A8C6B9": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayPOSTRevokeAuthTokenFC739416",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapiauthrevokeTokenE3DB92E3",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapiavailableEndpointsF4D850DD": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeaapi822A9228",
            "RootResourceId",
          ],
        },
        "PathPart": "availableEndpoints",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapiavailableEndpointsGET1778E5A8": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayGETGetAvailableEndpoints3D87F8A4",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapiavailableEndpointsF4D850DD",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapiavailableEndpointsGETApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9GETavailableEndpoints8C83E32B": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETGetAvailableEndpoints3D87F8A4",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/GET/availableEndpoints",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapiavailableEndpointsGETApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9GETavailableEndpoints9A6A6EAA": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETGetAvailableEndpoints3D87F8A4",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/GET/availableEndpoints",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapiavailableEndpointsOPTIONS271595FD": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapiavailableEndpointsF4D850DD",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasesC01D624D": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeaapi822A9228",
            "RootResourceId",
          ],
        },
        "PathPart": "cases",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapicasesOPTIONS4FE777E3": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasesC01D624D",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasesPOST966FABAB": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayPOSTCreateCaseFBDDC364",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasesC01D624D",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasesPOSTApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9POSTcases87C8F16F": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayPOSTCreateCaseFBDDC364",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/POST/cases",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasesPOSTApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9POSTcases87E8FD3D": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayPOSTCreateCaseFBDDC364",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/POST/cases",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasesallcasesBDAE5421": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapicasesC01D624D",
        },
        "PathPart": "all-cases",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapicasesallcasesGET92FB3B5C": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "RequestParameters": Object {
            "integration.request.querystring.limit": "method.request.querystring.limit",
            "integration.request.querystring.next": "method.request.querystring.next",
          },
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayGETGetAllCases83536312",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "RequestParameters": Object {
          "method.request.querystring.limit": false,
          "method.request.querystring.next": false,
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasesallcasesBDAE5421",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasesallcasesGETApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9GETcasesallcases1F8DA228": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETGetAllCases83536312",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/GET/cases/all-cases",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasesallcasesGETApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9GETcasesallcasesB4DD5CAB": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETGetAllCases83536312",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/GET/cases/all-cases",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasesallcasesOPTIONSF976C9CD": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasesallcasesBDAE5421",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseId3D754C88": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapicasesC01D624D",
        },
        "PathPart": "{caseId}",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapicasescaseIdOPTIONSED4E4189": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseId3D754C88",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIdactionsAB55E158": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseId3D754C88",
        },
        "PathPart": "actions",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapicasescaseIdactionsGET6EB75B66": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayGETGetCaseActions00B0B2FE",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIdactionsAB55E158",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIdactionsGETApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9GETcasescaseIdactions2A8255E4": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETGetCaseActions00B0B2FE",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/GET/cases/*/actions",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIdactionsGETApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9GETcasescaseIdactions88198B7F": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETGetCaseActions00B0B2FE",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/GET/cases/*/actions",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIdactionsOPTIONS2140F793": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIdactionsAB55E158",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIdauditBB1A3E17": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseId3D754C88",
        },
        "PathPart": "audit",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapicasescaseIdauditOPTIONSBC0FFF0A": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIdauditBB1A3E17",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIdauditPOST92AD4FAB": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayPOSTRequestCaseAuditA90E8214",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIdauditBB1A3E17",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIdauditPOSTApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9POSTcasescaseIdaudit8BCD9592": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayPOSTRequestCaseAuditA90E8214",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/POST/cases/*/audit",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIdauditPOSTApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9POSTcasescaseIdaudit23E7CD9F": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayPOSTRequestCaseAuditA90E8214",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/POST/cases/*/audit",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIdauditauditIdA0355355": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIdauditBB1A3E17",
        },
        "PathPart": "{auditId}",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapicasescaseIdauditauditIdOPTIONSEE8EF3DD": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIdauditauditIdA0355355",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIdauditauditIdcsv59A5449B": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIdauditauditIdA0355355",
        },
        "PathPart": "csv",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapicasescaseIdauditauditIdcsvGETApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9GETcasescaseIdauditauditIdcsv51981359": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETGetCaseAudit536E35D4",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/GET/cases/*/audit/*/csv",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIdauditauditIdcsvGETApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9GETcasescaseIdauditauditIdcsv35FD9F8E": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETGetCaseAudit536E35D4",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/GET/cases/*/audit/*/csv",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIdauditauditIdcsvGETF934A5FF": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayGETGetCaseAudit536E35D4",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIdauditauditIdcsv59A5449B",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIdauditauditIdcsvOPTIONSF0C8820E": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIdauditauditIdcsv59A5449B",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIddetailsDELETEApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9DELETEcasescaseIddetails2C70D817": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayDELETEDeleteCase91CB5F89",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/DELETE/cases/*/details",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIddetailsDELETEApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9DELETEcasescaseIddetails86ADF27E": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayDELETEDeleteCase91CB5F89",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/DELETE/cases/*/details",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIddetailsDELETEE7B8E1B0": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "DELETE",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayDELETEDeleteCase91CB5F89",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIddetailsE86153E3",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIddetailsE86153E3": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseId3D754C88",
        },
        "PathPart": "details",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapicasescaseIddetailsGET41929CBD": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayGETGetCaseDetails2DAE602F",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIddetailsE86153E3",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIddetailsGETApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9GETcasescaseIddetailsAA4D9CB6": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETGetCaseDetails2DAE602F",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/GET/cases/*/details",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIddetailsGETApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9GETcasescaseIddetails4472EF26": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETGetCaseDetails2DAE602F",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/GET/cases/*/details",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIddetailsOPTIONS53E2D203": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIddetailsE86153E3",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIddetailsPUT3D9BC22B": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "PUT",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayPUTUpdateCaseDetails69D719BE",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIddetailsE86153E3",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIddetailsPUTApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9PUTcasescaseIddetailsD766813D": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayPUTUpdateCaseDetails69D719BE",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/PUT/cases/*/details",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIddetailsPUTApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9PUTcasescaseIddetails9A2A063C": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayPUTUpdateCaseDetails69D719BE",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/PUT/cases/*/details",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIdfilesF29B9178": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseId3D754C88",
        },
        "PathPart": "files",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapicasescaseIdfilesGET13698780": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayGETGetCaseFiles5D776CE0",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIdfilesF29B9178",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIdfilesGETApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9GETcasescaseIdfiles2C1EE942": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETGetCaseFiles5D776CE0",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/GET/cases/*/files",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIdfilesGETApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9GETcasescaseIdfiles1B592EBC": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETGetCaseFiles5D776CE0",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/GET/cases/*/files",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIdfilesOPTIONS7517D173": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIdfilesF29B9178",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIdfilesPOST3D5F353E": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayPOSTInitiateCaseFileUpload060E0D60",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIdfilesF29B9178",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIdfilesPOSTApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9POSTcasescaseIdfiles29AFF255": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayPOSTInitiateCaseFileUpload060E0D60",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/POST/cases/*/files",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIdfilesPOSTApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9POSTcasescaseIdfiles74542E67": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayPOSTInitiateCaseFileUpload060E0D60",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/POST/cases/*/files",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIdfilesfileId16B45CA0": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIdfilesF29B9178",
        },
        "PathPart": "{fileId}",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapicasescaseIdfilesfileIdOPTIONS25DF38EE": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIdfilesfileId16B45CA0",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIdfilesfileIdcontents21AB00FB": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIdfilesfileId16B45CA0",
        },
        "PathPart": "contents",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapicasescaseIdfilesfileIdcontentsGETApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9GETcasescaseIdfilesfileIdcontents3718517A": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETDownloadCaseFile32575192",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/GET/cases/*/files/*/contents",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIdfilesfileIdcontentsGETApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9GETcasescaseIdfilesfileIdcontentsABB5AD19": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETDownloadCaseFile32575192",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/GET/cases/*/files/*/contents",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIdfilesfileIdcontentsGETD43BFE99": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayGETDownloadCaseFile32575192",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIdfilesfileIdcontents21AB00FB",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIdfilesfileIdcontentsOPTIONS1DC417CA": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIdfilesfileIdcontents21AB00FB",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIdfilesfileIdcontentsPUTApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9PUTcasescaseIdfilesfileIdcontentsC2DBDB31": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayPUTCompleteCaseFileUploadF4BF98F1",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/PUT/cases/*/files/*/contents",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIdfilesfileIdcontentsPUTApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9PUTcasescaseIdfilesfileIdcontents4825A2D8": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayPUTCompleteCaseFileUploadF4BF98F1",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/PUT/cases/*/files/*/contents",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIdfilesfileIdcontentsPUTF6AA4CB8": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "PUT",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayPUTCompleteCaseFileUploadF4BF98F1",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIdfilesfileIdcontents21AB00FB",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIdfilesfileIdinfoF9BE4EE2": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIdfilesfileId16B45CA0",
        },
        "PathPart": "info",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapicasescaseIdfilesfileIdinfoGET4FE96B29": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayGETGetCaseFileDetail9C46D770",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIdfilesfileIdinfoF9BE4EE2",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIdfilesfileIdinfoGETApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9GETcasescaseIdfilesfileIdinfo4EED31E6": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETGetCaseFileDetail9C46D770",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/GET/cases/*/files/*/info",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIdfilesfileIdinfoGETApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9GETcasescaseIdfilesfileIdinfo4F0E68C5": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETGetCaseFileDetail9C46D770",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/GET/cases/*/files/*/info",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIdfilesfileIdinfoOPTIONSC2BB332A": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIdfilesfileIdinfoF9BE4EE2",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIdowner33837916": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseId3D754C88",
        },
        "PathPart": "owner",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapicasescaseIdownerOPTIONS08191B25": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIdowner33837916",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIdownerPOSTApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9POSTcasescaseIdownerEBEB2C05": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayPOSTCreateCaseOwner21613ABD",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/POST/cases/*/owner",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIdownerPOSTApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9POSTcasescaseIdownerDCCD430E": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayPOSTCreateCaseOwner21613ABD",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/POST/cases/*/owner",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIdownerPOSTEA20102A": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayPOSTCreateCaseOwner21613ABD",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIdowner33837916",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIdscopedInformation7E7BAB42": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseId3D754C88",
        },
        "PathPart": "scopedInformation",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapicasescaseIdscopedInformationGETApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9GETcasescaseIdscopedInformation281866C3": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETGetScopedCaseInformation4A196540",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/GET/cases/*/scopedInformation",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIdscopedInformationGETApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9GETcasescaseIdscopedInformation898CA4C9": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETGetScopedCaseInformation4A196540",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/GET/cases/*/scopedInformation",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIdscopedInformationGETF7DBC337": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayGETGetScopedCaseInformation4A196540",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIdscopedInformation7E7BAB42",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIdscopedInformationOPTIONS80FCFACF": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIdscopedInformation7E7BAB42",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIdstatusEAC066DB": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseId3D754C88",
        },
        "PathPart": "status",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapicasescaseIdstatusOPTIONSCC9D3E46": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIdstatusEAC066DB",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIdstatusPUTApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9PUTcasescaseIdstatusDABA766E": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayPUTUpdateCaseStatus1BB3B9FE",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/PUT/cases/*/status",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIdstatusPUTApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9PUTcasescaseIdstatusA83EE228": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayPUTUpdateCaseStatus1BB3B9FE",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/PUT/cases/*/status",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIdstatusPUTDBBE8278": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "PUT",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayPUTUpdateCaseStatus1BB3B9FE",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIdstatusEAC066DB",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIduserMemberships4457D242": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseId3D754C88",
        },
        "PathPart": "userMemberships",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapicasescaseIduserMembershipsGET89A6E1EF": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayGETGetUsersFromCaseDF0ABA41",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIduserMemberships4457D242",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIduserMembershipsGETApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9GETcasescaseIduserMemberships96997C99": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETGetUsersFromCaseDF0ABA41",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/GET/cases/*/userMemberships",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIduserMembershipsGETApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9GETcasescaseIduserMembershipsCE758452": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETGetUsersFromCaseDF0ABA41",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/GET/cases/*/userMemberships",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIduserMembershipsOPTIONSA41AAFF1": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIduserMemberships4457D242",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIduserMembershipsPOST9A7D9804": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "POST",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayPOSTInviteUserToCaseB26DE4D4",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIduserMemberships4457D242",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIduserMembershipsPOSTApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9POSTcasescaseIduserMemberships1569B97D": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayPOSTInviteUserToCaseB26DE4D4",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/POST/cases/*/userMemberships",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIduserMembershipsPOSTApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9POSTcasescaseIduserMemberships9016B401": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayPOSTInviteUserToCaseB26DE4D4",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/POST/cases/*/userMemberships",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIdusers2F3FB5C6": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseId3D754C88",
        },
        "PathPart": "users",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapicasescaseIdusersOPTIONS09886FE5": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIdusers2F3FB5C6",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIdusersuserIdEE478FC8": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIdusers2F3FB5C6",
        },
        "PathPart": "{userId}",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapicasescaseIdusersuserIdOPTIONS3B6673A7": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIdusersuserIdEE478FC8",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIdusersuserIdmembershipsBA0A2E7C": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIdusersuserIdEE478FC8",
        },
        "PathPart": "memberships",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapicasescaseIdusersuserIdmembershipsDELETE8D61025A": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "DELETE",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayDELETERemoveUserFromCaseD22CC76C",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIdusersuserIdmembershipsBA0A2E7C",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIdusersuserIdmembershipsDELETEApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9DELETEcasescaseIdusersuserIdmemberships2C9CC8B5": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayDELETERemoveUserFromCaseD22CC76C",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/DELETE/cases/*/users/*/memberships",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIdusersuserIdmembershipsDELETEApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9DELETEcasescaseIdusersuserIdmembershipsC5C31048": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayDELETERemoveUserFromCaseD22CC76C",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/DELETE/cases/*/users/*/memberships",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIdusersuserIdmembershipsOPTIONS0F1651A7": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIdusersuserIdmembershipsBA0A2E7C",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIdusersuserIdmembershipsPUT6003274C": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "PUT",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayPUTModifyUserCasePermissionsABF0FB7A",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasescaseIdusersuserIdmembershipsBA0A2E7C",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasescaseIdusersuserIdmembershipsPUTApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9PUTcasescaseIdusersuserIdmemberships448538AB": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayPUTModifyUserCasePermissionsABF0FB7A",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/PUT/cases/*/users/*/memberships",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasescaseIdusersuserIdmembershipsPUTApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9PUTcasescaseIdusersuserIdmembershipsB3E7C0CC": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayPUTModifyUserCasePermissionsABF0FB7A",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/PUT/cases/*/users/*/memberships",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasesmycases25599FEB": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapicasesC01D624D",
        },
        "PathPart": "my-cases",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapicasesmycasesGET6F1F66A1": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "RequestParameters": Object {
            "integration.request.querystring.limit": "method.request.querystring.limit",
            "integration.request.querystring.next": "method.request.querystring.next",
          },
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayGETGetMyCases60A3BAE4",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "RequestParameters": Object {
          "method.request.querystring.limit": false,
          "method.request.querystring.next": false,
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasesmycases25599FEB",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapicasesmycasesGETApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9GETcasesmycases3B33517B": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETGetMyCases60A3BAE4",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/GET/cases/my-cases",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasesmycasesGETApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9GETcasesmycases742BCA77": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETGetMyCases60A3BAE4",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/GET/cases/my-cases",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapicasesmycasesOPTIONS4C431DB3": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapicasesmycases25599FEB",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapiui838E08AB": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeaapi822A9228",
            "RootResourceId",
          ],
        },
        "PathPart": "ui",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapiuiGET4360368B": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W59",
              "reason": "Auth not implemented yet, will revisit",
            },
          ],
        },
      },
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "ContentHandling": "CONVERT_TO_TEXT",
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "DeaUiStackrole3432A944",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "GET",
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Content-Type": "integration.response.header.Content-Type",
              },
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "RequestParameters": Object {
            "integration.request.header.Accept": "method.request.header.Accept",
            "integration.request.header.Content-Type": "method.request.header.Content-Type",
            "integration.request.path.proxy": "method.request.path.proxy",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":s3:path/",
                Object {
                  "Ref": "DeaUiStackartifactbucketFFC87A37",
                },
                "/index.html",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseModels": Object {
              "application/json": "Empty",
            },
            "ResponseParameters": Object {
              "method.response.header.Content-Length": true,
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
        ],
        "RequestParameters": Object {
          "method.request.header.Accept": true,
          "method.request.header.Content-Type": true,
          "method.request.path.proxy": true,
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapiui838E08AB",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapiuiOPTIONSF590A754": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapiui838E08AB",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapiuiauthtest0A8A5523": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapiui838E08AB",
        },
        "PathPart": "auth-test",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapiuiauthtestGET744C7E45": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "ContentHandling": "CONVERT_TO_TEXT",
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "DeaUiStackrole3432A944",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "GET",
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Content-Type": "integration.response.header.Content-Type",
              },
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "RequestParameters": Object {
            "integration.request.header.Accept": "method.request.header.Accept",
            "integration.request.header.Content-Type": "method.request.header.Content-Type",
            "integration.request.path.proxy": "method.request.path.proxy",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":s3:path/",
                Object {
                  "Ref": "DeaUiStackartifactbucketFFC87A37",
                },
                "/auth-test.html",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseModels": Object {
              "application/json": "Empty",
            },
            "ResponseParameters": Object {
              "method.response.header.Content-Length": true,
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
        ],
        "RequestParameters": Object {
          "method.request.header.Accept": true,
          "method.request.header.Content-Type": true,
          "method.request.path.proxy": true,
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapiuiauthtest0A8A5523",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapiuiauthtestOPTIONSD475105E": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapiuiauthtest0A8A5523",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapiuicasedetail096431E3": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapiui838E08AB",
        },
        "PathPart": "case-detail",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapiuicasedetailGETD21EB4EB": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "ContentHandling": "CONVERT_TO_TEXT",
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "DeaUiStackrole3432A944",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "GET",
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Content-Type": "integration.response.header.Content-Type",
              },
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "RequestParameters": Object {
            "integration.request.header.Accept": "method.request.header.Accept",
            "integration.request.header.Content-Type": "method.request.header.Content-Type",
            "integration.request.path.proxy": "method.request.path.proxy",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":s3:path/",
                Object {
                  "Ref": "DeaUiStackartifactbucketFFC87A37",
                },
                "/case-detail.html",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseModels": Object {
              "application/json": "Empty",
            },
            "ResponseParameters": Object {
              "method.response.header.Content-Length": true,
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
        ],
        "RequestParameters": Object {
          "method.request.header.Accept": true,
          "method.request.header.Content-Type": true,
          "method.request.path.proxy": true,
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapiuicasedetail096431E3",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapiuicasedetailOPTIONSC371556A": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapiuicasedetail096431E3",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapiuicreatecases51731CAC": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapiui838E08AB",
        },
        "PathPart": "create-cases",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapiuicreatecasesGET6E1F559E": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "ContentHandling": "CONVERT_TO_TEXT",
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "DeaUiStackrole3432A944",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "GET",
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Content-Type": "integration.response.header.Content-Type",
              },
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "RequestParameters": Object {
            "integration.request.header.Accept": "method.request.header.Accept",
            "integration.request.header.Content-Type": "method.request.header.Content-Type",
            "integration.request.path.proxy": "method.request.path.proxy",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":s3:path/",
                Object {
                  "Ref": "DeaUiStackartifactbucketFFC87A37",
                },
                "/create-cases.html",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseModels": Object {
              "application/json": "Empty",
            },
            "ResponseParameters": Object {
              "method.response.header.Content-Length": true,
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
        ],
        "RequestParameters": Object {
          "method.request.header.Accept": true,
          "method.request.header.Content-Type": true,
          "method.request.path.proxy": true,
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapiuicreatecases51731CAC",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapiuicreatecasesOPTIONS4DF4B902": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapiuicreatecases51731CAC",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapiuilogin44F28D1A": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapiui838E08AB",
        },
        "PathPart": "login",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapiuiloginGETF8B1569E": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "ContentHandling": "CONVERT_TO_TEXT",
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "DeaUiStackrole3432A944",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "GET",
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Content-Type": "integration.response.header.Content-Type",
              },
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "RequestParameters": Object {
            "integration.request.header.Accept": "method.request.header.Accept",
            "integration.request.header.Content-Type": "method.request.header.Content-Type",
            "integration.request.path.proxy": "method.request.path.proxy",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":s3:path/",
                Object {
                  "Ref": "DeaUiStackartifactbucketFFC87A37",
                },
                "/login.html",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseModels": Object {
              "application/json": "Empty",
            },
            "ResponseParameters": Object {
              "method.response.header.Content-Length": true,
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
        ],
        "RequestParameters": Object {
          "method.request.header.Accept": true,
          "method.request.header.Content-Type": true,
          "method.request.path.proxy": true,
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapiuilogin44F28D1A",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapiuiloginOPTIONS72139AA0": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapiuilogin44F28D1A",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapiuiproxy57F1250D": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapiui838E08AB",
        },
        "PathPart": "{proxy+}",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapiuiproxyGETD7F3590B": Object {
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W59",
              "reason": "Auth not implemented yet, will revisit",
            },
          ],
        },
      },
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "ContentHandling": "CONVERT_TO_TEXT",
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "DeaUiStackrole3432A944",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "GET",
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Content-Type": "integration.response.header.Content-Type",
              },
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "RequestParameters": Object {
            "integration.request.header.Accept": "method.request.header.Accept",
            "integration.request.header.Content-Type": "method.request.header.Content-Type",
            "integration.request.path.proxy": "method.request.path.proxy",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":s3:path/",
                Object {
                  "Ref": "DeaUiStackartifactbucketFFC87A37",
                },
                "/{proxy}",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseModels": Object {
              "application/json": "Empty",
            },
            "ResponseParameters": Object {
              "method.response.header.Content-Length": true,
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
        ],
        "RequestParameters": Object {
          "method.request.header.Accept": true,
          "method.request.header.Content-Type": true,
          "method.request.path.proxy": true,
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapiuiproxy57F1250D",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapiuiproxyOPTIONS7D1A7859": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapiuiproxy57F1250D",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapiuiuploadfilesD316EB71": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "DeaApiGatewaydeaapiui838E08AB",
        },
        "PathPart": "upload-files",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapiuiuploadfilesGET18F68E99": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "ContentHandling": "CONVERT_TO_TEXT",
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "DeaUiStackrole3432A944",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "GET",
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Content-Type": "integration.response.header.Content-Type",
              },
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "RequestParameters": Object {
            "integration.request.header.Accept": "method.request.header.Accept",
            "integration.request.header.Content-Type": "method.request.header.Content-Type",
            "integration.request.path.proxy": "method.request.path.proxy",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":s3:path/",
                Object {
                  "Ref": "DeaUiStackartifactbucketFFC87A37",
                },
                "/upload-files.html",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseModels": Object {
              "application/json": "Empty",
            },
            "ResponseParameters": Object {
              "method.response.header.Content-Length": true,
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
        ],
        "RequestParameters": Object {
          "method.request.header.Accept": true,
          "method.request.header.Content-Type": true,
          "method.request.path.proxy": true,
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapiuiuploadfilesD316EB71",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapiuiuploadfilesOPTIONS447589BB": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapiuiuploadfilesD316EB71",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapiusersCC765E55": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewaydeaapi822A9228",
            "RootResourceId",
          ],
        },
        "PathPart": "users",
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaApiGatewaydeaapiusersGETApiPermissionDeaMainStackDeaApiGatewaydeaapi25A632E9GETusersDC199B18": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETGetAllUsersD6F48F6E",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/GET/users",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapiusersGETApiPermissionTestDeaMainStackDeaApiGatewaydeaapi25A632E9GETusers46F292AE": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Fn::GetAtt": Array [
            "DeaApiGatewayGETGetAllUsersD6F48F6E",
            "Arn",
          ],
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              "/test-invoke-stage/GET/users",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaApiGatewaydeaapiusersGETDBF3AD6C": Object {
      "Properties": Object {
        "AuthorizationType": "AWS_IAM",
        "HttpMethod": "GET",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "RequestParameters": Object {
            "integration.request.querystring.nameBeginsWith": "method.request.querystring.nameBeginsWith",
          },
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Fn::GetAtt": Array [
                    "DeaApiGatewayGETGetAllUsersD6F48F6E",
                    "Arn",
                  ],
                },
                "/invocations",
              ],
            ],
          },
        },
        "RequestParameters": Object {
          "method.request.querystring.nameBeginsWith": false,
        },
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapiusersCC765E55",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaapiusersOPTIONS330C13A7": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "OPTIONS",
        "Integration": Object {
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Access-Control-Allow-Credentials": "'true'",
                "method.response.header.Access-Control-Allow-Headers": "'Content-Type,X-Amz-Date,Authorization,X-Api-Key,CSRF-Token,x-amz-security-token,set-cookie'",
                "method.response.header.Access-Control-Allow-Methods": "'OPTIONS,GET,POST,PUT,PATCH,DELETE'",
                "method.response.header.Access-Control-Allow-Origin": "'*'",
              },
              "StatusCode": "204",
            },
          ],
          "RequestTemplates": Object {
            "application/json": "{ statusCode: 200 }",
          },
          "Type": "MOCK",
        },
        "MethodResponses": Array [
          Object {
            "ResponseParameters": Object {
              "method.response.header.Access-Control-Allow-Credentials": true,
              "method.response.header.Access-Control-Allow-Headers": true,
              "method.response.header.Access-Control-Allow-Methods": true,
              "method.response.header.Access-Control-Allow-Origin": true,
            },
            "StatusCode": "204",
          },
        ],
        "ResourceId": Object {
          "Ref": "DeaApiGatewaydeaapiusersCC765E55",
        },
        "RestApiId": Object {
          "Ref": "DeaApiGatewaydeaapi822A9228",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaApiGatewaydeaauthlambdarole4F5CC393": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaApiGatewaydeaauthlambdaroleDefaultPolicy1298F4B5": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/dea/",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeaApiGatewaydeaauthlambdaroleDefaultPolicy1298F4B5",
        "Roles": Array [
          Object {
            "Ref": "DeaApiGatewaydeaauthlambdarole4F5CC393",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DeaApiGatewaydeabaselambdarole91512884": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "dynamodb:GetItem",
                "dynamodb:DeleteItem",
                "dynamodb:BatchGetItem",
                "dynamodb:BatchWriteItem",
                "dynamodb:PutItem",
                "dynamodb:Query",
                "dynamodb:UpdateItem",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaBackendStackDeaTableE9FE4A05",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaBackendStackDeaTableE9FE4A05",
                          "Arn",
                        ],
                      },
                      "/index/GSI1",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaBackendStackDeaTableE9FE4A05",
                          "Arn",
                        ],
                      },
                      "/index/GSI2",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:AbortMultipartUpload",
                "s3:ListMultipartUploadParts",
                "s3:PutObject",
                "s3:GetObject",
                "s3:GetObjectVersion",
                "s3:GetObjectLegalHold",
                "s3:PutObjectLegalHold",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "DeaBackendStackS3DatasetsBucket408FF954",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
            },
            Object {
              "Action": "logs:StartQuery",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "deaAuditLogs7B75D3F1",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "logs:GetQueryResults",
              "Effect": "Allow",
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Encrypt",
                "kms:Decrypt",
                "kms:GenerateDataKey",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "primaryCustomerKey87EC2263",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": Array [
                "ssm:GetParameters",
                "ssm:GetParameter",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:aws:ssm:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":parameter/dea/",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeaApiGatewaydeabaselambdaroleDefaultPolicy124421D1",
        "Roles": Array [
          Object {
            "Ref": "DeaApiGatewaydeabaselambdarole91512884",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DeaAuditdeaTrailBucket4819FF43": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "KMSMasterKeyID": Object {
                  "Fn::GetAtt": Array [
                    "primaryCustomerKey87EC2263",
                    "Arn",
                  ],
                },
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "DeaAuditdeaTrailBucketAutoDeleteObjectsCustomResourceA4FC66B6": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "DeaAuditdeaTrailBucketPolicyA68DF945",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "DeaAuditdeaTrailBucket4819FF43",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "DeaAuditdeaTrailBucketPolicyA68DF945": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "DeaAuditdeaTrailBucket4819FF43",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaAuditdeaTrailBucket4819FF43",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaAuditdeaTrailBucket4819FF43",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaAuditdeaTrailBucket4819FF43",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaAuditdeaTrailBucket4819FF43",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:GetBucketAcl",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "cloudtrail.amazonaws.com",
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DeaAuditdeaTrailBucket4819FF43",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "s3:PutObject",
              "Condition": Object {
                "StringEquals": Object {
                  "s3:x-amz-acl": "bucket-owner-full-control",
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "cloudtrail.amazonaws.com",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "DeaAuditdeaTrailBucket4819FF43",
                        "Arn",
                      ],
                    },
                    "/AWSLogs/",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    "/*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "DeaAuthAuthTestGroupRole23D2E7FA": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "ForAnyValue:StringLike": Object {
                  "cognito-identity.amazonaws.com:amr": "authenticated",
                },
                "StringEquals": Object {
                  "cognito-identity.amazonaws.com:aud": Object {
                    "Ref": "DeaAuthDEAIdentityPool0B891C1B",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": "cognito-identity.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role used for auth e2e testing",
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaAuthAuthTestGroupRolePolicy8F41C7CD": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "execute-api:Invoke",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/cases/my-cases",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/auth/loginUrl",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/auth/logoutUrl",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/POST/auth/refreshToken",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/POST/auth/revokeToken",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeaAuthAuthTestGroupRolePolicy8F41C7CD",
        "Roles": Array [
          Object {
            "Ref": "DeaAuthAuthTestGroupRole23D2E7FA",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DeaAuthAuthTestGroupactionsD42A0A54": Object {
      "Properties": Object {
        "AllowedPattern": ".*",
        "Description": "stores the available endpoints for a role",
        "Name": "/dea/us-east-1/[STAGE-REMOVED]-AuthTestGroup-actions",
        "Tier": "Standard",
        "Type": "StringList",
        "Value": "/cases/my-casesGET,/auth/tokenPOST,/auth/credentials/{idToken}/exchangeGET,/auth/loginUrlGET,/auth/logoutUrlGET,/auth/refreshTokenPOST,/auth/revokeTokenPOST",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "DeaAuthCaseWorkerRole14C530E5": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "ForAnyValue:StringLike": Object {
                  "cognito-identity.amazonaws.com:amr": "authenticated",
                },
                "StringEquals": Object {
                  "cognito-identity.amazonaws.com:aud": Object {
                    "Ref": "DeaAuthDEAIdentityPool0B891C1B",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": "cognito-identity.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role users who need access to case APIs",
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaAuthCaseWorkerRolePolicy755235A6": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "execute-api:Invoke",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/POST/cases",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/cases/*/details",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/PUT/cases/*/details",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/DELETE/cases/*/details",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/cases/*/actions",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/cases/*/userMemberships",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/POST/cases/*/userMemberships",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/PUT/cases/*/users/*/memberships",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/DELETE/cases/*/users/*/memberships",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/POST/auth/*/token",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/auth/loginUrl",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/auth/logoutUrl",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/POST/auth/refreshToken",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/POST/auth/revokeToken",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/users",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/POST/cases/*/files",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/cases/*/files",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/PUT/cases/*/files/*/contents",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/cases/*/files/*/info",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/cases/*/files/*/contents",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/cases/my-cases",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/cases/*/audit/*/csv",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/POST/cases/*/audit",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/availableEndpoints",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeaAuthCaseWorkerRolePolicy755235A6",
        "Roles": Array [
          Object {
            "Ref": "DeaAuthCaseWorkerRole14C530E5",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DeaAuthCaseWorkeractions55E2D177": Object {
      "Properties": Object {
        "AllowedPattern": ".*",
        "Description": "stores the available endpoints for a role",
        "Name": "/dea/us-east-1/[STAGE-REMOVED]-CaseWorker-actions",
        "Tier": "Standard",
        "Type": "StringList",
        "Value": "/casesPOST,/cases/{caseId}/detailsGET,/cases/{caseId}/detailsPUT,/cases/{caseId}/detailsDELETE,/cases/{caseId}/actionsGET,/cases/{caseId}/userMembershipsGET,/cases/{caseId}/userMembershipsPOST,/cases/{caseId}/users/{userId}/membershipsPUT,/cases/{caseId}/users/{userId}/membershipsDELETE,/auth/{authCode}/tokenPOST,/auth/loginUrlGET,/auth/logoutUrlGET,/auth/refreshTokenPOST,/auth/revokeTokenPOST,/auth/credentials/{idToken}/exchangeGET,/usersGET,/cases/{caseId}/filesPOST,/cases/{caseId}/filesGET,/cases/{caseId}/files/{fileId}/contentsPUT,/cases/{caseId}/files/{fileId}/infoGET,/cases/{caseId}/files/{fileId}/contentsGET,/cases/my-casesGET,/cases/{caseId}/audit/{auditId}/csvGET,/cases/{caseId}/auditPOST,/availableEndpointsGET",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "DeaAuthCreateCasesTestGroupRoleB1D8969D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "ForAnyValue:StringLike": Object {
                  "cognito-identity.amazonaws.com:amr": "authenticated",
                },
                "StringEquals": Object {
                  "cognito-identity.amazonaws.com:aud": Object {
                    "Ref": "DeaAuthDEAIdentityPool0B891C1B",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": "cognito-identity.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role used for create cases API e2e testing",
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaAuthCreateCasesTestGroupRolePolicy933145EF": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "execute-api:Invoke",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/POST/cases",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/DELETE/cases/*/details",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/cases/all-cases",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/auth/loginUrl",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeaAuthCreateCasesTestGroupRolePolicy933145EF",
        "Roles": Array [
          Object {
            "Ref": "DeaAuthCreateCasesTestGroupRoleB1D8969D",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DeaAuthCreateCasesTestGroupactions3BE4E13C": Object {
      "Properties": Object {
        "AllowedPattern": ".*",
        "Description": "stores the available endpoints for a role",
        "Name": "/dea/us-east-1/[STAGE-REMOVED]-CreateCasesTestGroup-actions",
        "Tier": "Standard",
        "Type": "StringList",
        "Value": "/casesPOST,/cases/{caseId}/detailsDELETE,/cases/all-casesGET,/auth/tokenPOST,/auth/credentials/{idToken}/exchangeGET,/auth/loginUrlGET",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "DeaAuthDEAIdentityPool0B891C1B": Object {
      "Properties": Object {
        "AllowClassicFlow": false,
        "AllowUnauthenticatedIdentities": false,
        "CognitoIdentityProviders": Array [
          Object {
            "ClientId": Object {
              "Ref": "DeaAuthDEAUserPooldeaappclient3742F9D7",
            },
            "ProviderName": Object {
              "Fn::GetAtt": Array [
                "DeaAuthDEAUserPool22DB2BAB",
                "ProviderName",
              ],
            },
            "ServerSideTokenCheck": true,
          },
        ],
      },
      "Type": "AWS::Cognito::IdentityPool",
    },
    "DeaAuthDEAUserPool22DB2BAB": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AccountRecoverySetting": Object {
          "RecoveryMechanisms": Array [
            Object {
              "Name": "verified_email",
              "Priority": 1,
            },
          ],
        },
        "AdminCreateUserConfig": Object {
          "AllowAdminCreateUserOnly": true,
          "InviteMessageTemplate": Object {
            "EmailMessage": "Hello {username}, you have been invited to use DEA! Your temporary password is {####}",
            "EmailSubject": "Digital Evidence Archive Signup Invitation",
            "SMSMessage": "Hello {username}, your temporary password for our DEA is {####}",
          },
        },
        "EmailVerificationMessage": "The verification code to your new account is {####}",
        "EmailVerificationSubject": "Verify your new account",
        "Policies": Object {
          "PasswordPolicy": Object {
            "MinimumLength": 8,
            "RequireLowercase": true,
            "RequireNumbers": true,
            "RequireSymbols": true,
            "RequireUppercase": true,
            "TemporaryPasswordValidityDays": 1,
          },
        },
        "Schema": Array [
          Object {
            "Mutable": true,
            "Name": "family_name",
            "Required": true,
          },
          Object {
            "Mutable": true,
            "Name": "given_name",
            "Required": true,
          },
          Object {
            "AttributeDataType": "String",
            "Mutable": true,
            "Name": "DEARole",
          },
        ],
        "SmsVerificationMessage": "The verification code to your new account is {####}",
        "VerificationMessageTemplate": Object {
          "DefaultEmailOption": "CONFIRM_WITH_CODE",
          "EmailMessage": "The verification code to your new account is {####}",
          "EmailSubject": "Verify your new account",
          "SmsMessage": "The verification code to your new account is {####}",
        },
      },
      "Type": "AWS::Cognito::UserPool",
      "UpdateReplacePolicy": "Delete",
    },
    "DeaAuthDEAUserPoolCognitoDomainAB9C904A": Object {
      "Properties": Object {
        "Domain": Object {
          "Ref": "DeaAuth[DOMAIN-REMOVED][HASH REMOVED]",
        },
        "UserPoolId": Object {
          "Ref": "DeaAuthDEAUserPool22DB2BAB",
        },
      },
      "Type": "AWS::Cognito::UserPoolDomain",
    },
    "DeaAuthDEAUserPooldeaappclient3742F9D7": Object {
      "Properties": Object {
        "AccessTokenValidity": 720,
        "AllowedOAuthFlows": Array [
          "code",
        ],
        "AllowedOAuthFlowsUserPoolClient": true,
        "AllowedOAuthScopes": Array [
          "profile",
          "phone",
          "email",
          "openid",
          "aws.cognito.signin.user.admin",
        ],
        "CallbackURLs": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "https://",
                Object {
                  "Ref": "DeaApiGatewaydeaapi822A9228",
                },
                ".execute-api.",
                Object {
                  "Ref": "AWS::Region",
                },
                ".",
                Object {
                  "Ref": "AWS::URLSuffix",
                },
                "/",
                Object {
                  "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                },
                "/ui/login",
              ],
            ],
          },
          "https://localhost:3000/[STAGE-REMOVED]/ui/login",
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "https://",
                Object {
                  "Ref": "DeaApiGatewaydeaapi822A9228",
                },
                ".execute-api.",
                Object {
                  "Ref": "AWS::Region",
                },
                ".",
                Object {
                  "Ref": "AWS::URLSuffix",
                },
                "/",
                Object {
                  "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                },
                "/ui/auth-test",
              ],
            ],
          },
        ],
        "ClientName": "dea-app-client",
        "EnableTokenRevocation": true,
        "ExplicitAuthFlows": Array [
          "ALLOW_USER_PASSWORD_AUTH",
          "ALLOW_ADMIN_USER_PASSWORD_AUTH",
          "ALLOW_REFRESH_TOKEN_AUTH",
        ],
        "GenerateSecret": false,
        "IdTokenValidity": 60,
        "PreventUserExistenceErrors": "ENABLED",
        "RefreshTokenValidity": 720,
        "SupportedIdentityProviders": Array [
          "COGNITO",
        ],
        "TokenValidityUnits": Object {
          "AccessToken": "minutes",
          "IdToken": "minutes",
          "RefreshToken": "minutes",
        },
        "UserPoolId": Object {
          "Ref": "DeaAuthDEAUserPool22DB2BAB",
        },
      },
      "Type": "AWS::Cognito::UserPoolClient",
    },
    "DeaAuthEvidenceManagerRole778E476E": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "ForAnyValue:StringLike": Object {
                  "cognito-identity.amazonaws.com:amr": "authenticated",
                },
                "StringEquals": Object {
                  "cognito-identity.amazonaws.com:aud": Object {
                    "Ref": "DeaAuthDEAIdentityPool0B891C1B",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": "cognito-identity.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role Users with access to privileged endpoints",
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaAuthEvidenceManagerRolePolicyEF591148": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "execute-api:Invoke",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/cases/*/actions",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/cases/*/userMemberships",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/POST/auth/*/token",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/auth/loginUrl",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/auth/logoutUrl",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/POST/auth/refreshToken",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/POST/auth/revokeToken",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/users",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/cases/all-cases",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/availableEndpoints",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/cases/*/scopedInformation",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/POST/cases/*/owner",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeaAuthEvidenceManagerRolePolicyEF591148",
        "Roles": Array [
          Object {
            "Ref": "DeaAuthEvidenceManagerRole778E476E",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DeaAuthEvidenceManageractions23EDE1D4": Object {
      "Properties": Object {
        "AllowedPattern": ".*",
        "Description": "stores the available endpoints for a role",
        "Name": "/dea/us-east-1/[STAGE-REMOVED]-EvidenceManager-actions",
        "Tier": "Standard",
        "Type": "StringList",
        "Value": "/cases/{caseId}/actionsGET,/cases/{caseId}/userMembershipsGET,/auth/{authCode}/tokenPOST,/auth/loginUrlGET,/auth/logoutUrlGET,/auth/refreshTokenPOST,/auth/revokeTokenPOST,/auth/credentials/{idToken}/exchangeGET,/usersGET,/cases/all-casesGET,/availableEndpointsGET,/cases/{caseId}/scopedInformationGET,/cases/{caseId}/ownerPOST",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "DeaAuthGetCaseTestGroupRoleF15B4661": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "ForAnyValue:StringLike": Object {
                  "cognito-identity.amazonaws.com:amr": "authenticated",
                },
                "StringEquals": Object {
                  "cognito-identity.amazonaws.com:aud": Object {
                    "Ref": "DeaAuthDEAIdentityPool0B891C1B",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": "cognito-identity.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role used for get cases API e2e testing",
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaAuthGetCaseTestGroupRolePolicy852A4EA7": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "execute-api:Invoke",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/POST/cases",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/cases/*/details",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/DELETE/cases/*/details",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/auth/loginUrl",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeaAuthGetCaseTestGroupRolePolicy852A4EA7",
        "Roles": Array [
          Object {
            "Ref": "DeaAuthGetCaseTestGroupRoleF15B4661",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DeaAuthGetCaseTestGroupactions11259DD5": Object {
      "Properties": Object {
        "AllowedPattern": ".*",
        "Description": "stores the available endpoints for a role",
        "Name": "/dea/us-east-1/[STAGE-REMOVED]-GetCaseTestGroup-actions",
        "Tier": "Standard",
        "Type": "StringList",
        "Value": "/casesPOST,/cases/{caseId}/detailsGET,/cases/{caseId}/detailsDELETE,/auth/tokenPOST,/auth/credentials/{idToken}/exchangeGET,/auth/loginUrlGET",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "DeaAuthGetMyCasesTestGroupRoleBDF3089F": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "ForAnyValue:StringLike": Object {
                  "cognito-identity.amazonaws.com:amr": "authenticated",
                },
                "StringEquals": Object {
                  "cognito-identity.amazonaws.com:aud": Object {
                    "Ref": "DeaAuthDEAIdentityPool0B891C1B",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": "cognito-identity.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role used for get my cases API e2e testing",
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaAuthGetMyCasesTestGroupRolePolicy5E863018": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "execute-api:Invoke",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/POST/cases",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/cases/*/details",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/DELETE/cases/*/details",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/cases/my-cases",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/POST/cases/*/userMemberships",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/users",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeaAuthGetMyCasesTestGroupRolePolicy5E863018",
        "Roles": Array [
          Object {
            "Ref": "DeaAuthGetMyCasesTestGroupRoleBDF3089F",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DeaAuthGetMyCasesTestGroupactionsB69CEAE3": Object {
      "Properties": Object {
        "AllowedPattern": ".*",
        "Description": "stores the available endpoints for a role",
        "Name": "/dea/us-east-1/[STAGE-REMOVED]-GetMyCasesTestGroup-actions",
        "Tier": "Standard",
        "Type": "StringList",
        "Value": "/casesPOST,/cases/{caseId}/detailsGET,/cases/{caseId}/detailsDELETE,/cases/my-casesGET,/cases/{caseId}/userMembershipsPOST,/usersGET",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "DeaAuthIdPoolAuthenticatedRole3AD16775": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "ForAnyValue:StringLike": Object {
                  "cognito-identity.amazonaws.com:amr": "authenticated",
                },
                "StringEquals": Object {
                  "cognito-identity.amazonaws.com:aud": Object {
                    "Ref": "DeaAuthDEAIdentityPool0B891C1B",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": "cognito-identity.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaAuthIdPoolUnAuthenticatedRoleA427A1FB": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "ForAnyValue:StringLike": Object {
                  "cognito-identity.amazonaws.com:amr": "unauthenticated",
                },
                "StringEquals": Object {
                  "cognito-identity.amazonaws.com:aud": Object {
                    "Ref": "DeaAuthDEAIdentityPool0B891C1B",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": "cognito-identity.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaAuthIdentityPoolCognitoRoleAttachment914C22D9": Object {
      "Properties": Object {
        "IdentityPoolId": Object {
          "Ref": "DeaAuthDEAIdentityPool0B891C1B",
        },
        "RoleMappings": Object {
          "roleMappingsKey": Object {
            "AmbiguousRoleResolution": "AuthenticatedRole",
            "IdentityProvider": Object {
              "Fn::Join": Array [
                "",
                Array [
                  "cognito-idp.us-east-1.amazonaws.com/",
                  Object {
                    "Ref": "DeaAuthDEAUserPool22DB2BAB",
                  },
                  ":",
                  Object {
                    "Ref": "DeaAuthDEAUserPooldeaappclient3742F9D7",
                  },
                ],
              ],
            },
            "RulesConfiguration": Object {
              "Rules": Array [
                Object {
                  "Claim": "custom:DEARole",
                  "MatchType": "Equals",
                  "RoleARN": Object {
                    "Fn::GetAtt": Array [
                      "DeaAuthCaseWorkerRole14C530E5",
                      "Arn",
                    ],
                  },
                  "Value": "CaseWorker",
                },
                Object {
                  "Claim": "custom:DEARole",
                  "MatchType": "Equals",
                  "RoleARN": Object {
                    "Fn::GetAtt": Array [
                      "DeaAuthWorkingManagerRole85E3C255",
                      "Arn",
                    ],
                  },
                  "Value": "WorkingManager",
                },
                Object {
                  "Claim": "custom:DEARole",
                  "MatchType": "Equals",
                  "RoleARN": Object {
                    "Fn::GetAtt": Array [
                      "DeaAuthEvidenceManagerRole778E476E",
                      "Arn",
                    ],
                  },
                  "Value": "EvidenceManager",
                },
                Object {
                  "Claim": "custom:DEARole",
                  "MatchType": "Equals",
                  "RoleARN": Object {
                    "Fn::GetAtt": Array [
                      "DeaAuthNoPermissionsGroupRole1E0F8CCF",
                      "Arn",
                    ],
                  },
                  "Value": "NoPermissionsGroup",
                },
                Object {
                  "Claim": "custom:DEARole",
                  "MatchType": "Equals",
                  "RoleARN": Object {
                    "Fn::GetAtt": Array [
                      "DeaAuthAuthTestGroupRole23D2E7FA",
                      "Arn",
                    ],
                  },
                  "Value": "AuthTestGroup",
                },
                Object {
                  "Claim": "custom:DEARole",
                  "MatchType": "Equals",
                  "RoleARN": Object {
                    "Fn::GetAtt": Array [
                      "DeaAuthCreateCasesTestGroupRoleB1D8969D",
                      "Arn",
                    ],
                  },
                  "Value": "CreateCasesTestGroup",
                },
                Object {
                  "Claim": "custom:DEARole",
                  "MatchType": "Equals",
                  "RoleARN": Object {
                    "Fn::GetAtt": Array [
                      "DeaAuthGetCaseTestGroupRoleF15B4661",
                      "Arn",
                    ],
                  },
                  "Value": "GetCaseTestGroup",
                },
                Object {
                  "Claim": "custom:DEARole",
                  "MatchType": "Equals",
                  "RoleARN": Object {
                    "Fn::GetAtt": Array [
                      "DeaAuthGetMyCasesTestGroupRoleBDF3089F",
                      "Arn",
                    ],
                  },
                  "Value": "GetMyCasesTestGroup",
                },
              ],
            },
            "Type": "Rules",
          },
        },
        "Roles": Object {
          "authenticated": Object {
            "Fn::GetAtt": Array [
              "DeaAuthIdPoolAuthenticatedRole3AD16775",
              "Arn",
            ],
          },
          "unauthenticated": Object {
            "Fn::GetAtt": Array [
              "DeaAuthIdPoolUnAuthenticatedRoleA427A1FB",
              "Arn",
            ],
          },
        },
      },
      "Type": "AWS::Cognito::IdentityPoolRoleAttachment",
    },
    "DeaAuthNoPermissionsGroupRole1E0F8CCF": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "ForAnyValue:StringLike": Object {
                  "cognito-identity.amazonaws.com:amr": "authenticated",
                },
                "StringEquals": Object {
                  "cognito-identity.amazonaws.com:aud": Object {
                    "Ref": "DeaAuthDEAIdentityPool0B891C1B",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": "cognito-identity.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role users who can't do anything in the system",
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaAuthNoPermissionsGroupRolePolicy8475E5D3": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "execute-api:Invoke",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    "arn:",
                    Object {
                      "Ref": "AWS::Partition",
                    },
                    ":execute-api:",
                    Object {
                      "Ref": "AWS::Region",
                    },
                    ":",
                    Object {
                      "Ref": "AWS::AccountId",
                    },
                    ":",
                    Object {
                      "Ref": "DeaApiGatewaydeaapi822A9228",
                    },
                    "/",
                    Object {
                      "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                    },
                    "/GET/availableEndpoints",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeaAuthNoPermissionsGroupRolePolicy8475E5D3",
        "Roles": Array [
          Object {
            "Ref": "DeaAuthNoPermissionsGroupRole1E0F8CCF",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DeaAuthNoPermissionsGroupactionsF8AAA07E": Object {
      "Properties": Object {
        "AllowedPattern": ".*",
        "Description": "stores the available endpoints for a role",
        "Name": "/dea/us-east-1/[STAGE-REMOVED]-NoPermissionsGroup-actions",
        "Tier": "Standard",
        "Type": "StringList",
        "Value": "/availableEndpointsGET",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "DeaAuthWorkingManagerRole85E3C255": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRoleWithWebIdentity",
              "Condition": Object {
                "ForAnyValue:StringLike": Object {
                  "cognito-identity.amazonaws.com:amr": "authenticated",
                },
                "StringEquals": Object {
                  "cognito-identity.amazonaws.com:aud": Object {
                    "Ref": "DeaAuthDEAIdentityPool0B891C1B",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Federated": "cognito-identity.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "Description": "Role users who act as both case workers and managers",
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaAuthWorkingManagerRolePolicy232DC198": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "execute-api:Invoke",
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/POST/cases",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/cases/*/details",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/PUT/cases/*/details",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/DELETE/cases/*/details",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/cases/*/actions",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/cases/*/userMemberships",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/POST/cases/*/userMemberships",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/PUT/cases/*/users/*/memberships",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/DELETE/cases/*/users/*/memberships",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/POST/auth/*/token",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/auth/loginUrl",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/auth/logoutUrl",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/POST/auth/refreshToken",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/POST/auth/revokeToken",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/users",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/POST/cases/*/files",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/cases/*/files",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/PUT/cases/*/files/*/contents",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/cases/*/files/*/info",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/cases/*/files/*/contents",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/cases/my-cases",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/cases/all-cases",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/cases/*/audit/*/csv",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/POST/cases/*/audit",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/availableEndpoints",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/GET/cases/*/scopedInformation",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":execute-api:",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ":",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":",
                      Object {
                        "Ref": "DeaApiGatewaydeaapi822A9228",
                      },
                      "/",
                      Object {
                        "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
                      },
                      "/POST/cases/*/owner",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeaAuthWorkingManagerRolePolicy232DC198",
        "Roles": Array [
          Object {
            "Ref": "DeaAuthWorkingManagerRole85E3C255",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DeaAuthWorkingManageractions6503873F": Object {
      "Properties": Object {
        "AllowedPattern": ".*",
        "Description": "stores the available endpoints for a role",
        "Name": "/dea/us-east-1/[STAGE-REMOVED]-WorkingManager-actions",
        "Tier": "Standard",
        "Type": "StringList",
        "Value": "/casesPOST,/cases/{caseId}/detailsGET,/cases/{caseId}/detailsPUT,/cases/{caseId}/detailsDELETE,/cases/{caseId}/actionsGET,/cases/{caseId}/userMembershipsGET,/cases/{caseId}/userMembershipsPOST,/cases/{caseId}/users/{userId}/membershipsPUT,/cases/{caseId}/users/{userId}/membershipsDELETE,/auth/{authCode}/tokenPOST,/auth/loginUrlGET,/auth/logoutUrlGET,/auth/refreshTokenPOST,/auth/revokeTokenPOST,/auth/credentials/{idToken}/exchangeGET,/usersGET,/cases/{caseId}/filesPOST,/cases/{caseId}/filesGET,/cases/{caseId}/files/{fileId}/contentsPUT,/cases/{caseId}/files/{fileId}/infoGET,/cases/{caseId}/files/{fileId}/contentsGET,/cases/my-casesGET,/cases/all-casesGET,/cases/{caseId}/audit/{auditId}/csvGET,/cases/{caseId}/auditPOST,/availableEndpointsGET,/cases/{caseId}/scopedInformationGET,/cases/{caseId}/ownerPOST",
      },
      "Type": "AWS::SSM::Parameter",
    },
    "DeaAuthclientcallbackurlssmparam21EED1EB": Object {
      "Properties": Object {
        "AllowedPattern": ".*",
        "Description": "stores the app client callback url for use in token verification on the backend",
        "Name": "/dea/us-east-1/[STAGE-REMOVED]-client-callback-url-param",
        "Tier": "Standard",
        "Type": "String",
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "https://",
              Object {
                "Ref": "DeaApiGatewaydeaapi822A9228",
              },
              ".execute-api.",
              Object {
                "Ref": "AWS::Region",
              },
              ".",
              Object {
                "Ref": "AWS::URLSuffix",
              },
              "/",
              Object {
                "Ref": "DeaApiGatewaydeaapiDeploymentStage[STAGE-REMOVED][HASH REMOVED]",
              },
              "/ui/login",
            ],
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "DeaAuth[DOMAIN-REMOVED][HASH REMOVED]": Object {
      "Properties": Object {
        "Domain": "[DOMAIN-REMOVED]",
        "UserPoolId": Object {
          "Ref": "DeaAuthDEAUserPool22DB2BAB",
        },
      },
      "Type": "AWS::Cognito::UserPoolDomain",
    },
    "DeaAuthidentitypoolidssmparam7012C429": Object {
      "Properties": Object {
        "AllowedPattern": ".*",
        "Description": "stores the identity pool id for use in user verification on the backend",
        "Name": "/dea/us-east-1/[STAGE-REMOVED]-identity-pool-id-param",
        "Tier": "Standard",
        "Type": "String",
        "Value": Object {
          "Ref": "DeaAuthDEAIdentityPool0B891C1B",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "DeaAuthuserpoolclientidssmparam605B45CC": Object {
      "Properties": Object {
        "AllowedPattern": ".*",
        "Description": "stores the user pool client id for use in token verification on the backend",
        "Name": "/dea/us-east-1/[STAGE-REMOVED]-userpool-client-id-param",
        "Tier": "Standard",
        "Type": "String",
        "Value": Object {
          "Ref": "DeaAuthDEAUserPooldeaappclient3742F9D7",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "DeaAuthuserpoolcognitodomainssmparam743ADBBC": Object {
      "Properties": Object {
        "AllowedPattern": ".*",
        "Description": "stores the user pool cognito domain for use in token verification on the backend",
        "Name": "/dea/us-east-1/[STAGE-REMOVED]-userpool-cognito-domain-param",
        "Tier": "Standard",
        "Type": "String",
        "Value": Object {
          "Fn::Join": Array [
            "",
            Array [
              "https://",
              Object {
                "Ref": "DeaAuth[DOMAIN-REMOVED][HASH REMOVED]",
              },
              ".auth.",
              Object {
                "Ref": "AWS::Region",
              },
              ".amazoncognito.com",
            ],
          ],
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "DeaAuthuserpoolidssmparamE2094B6A": Object {
      "Properties": Object {
        "AllowedPattern": ".*",
        "Description": "stores the user pool id for use in token verification on the backend",
        "Name": "/dea/us-east-1/[STAGE-REMOVED]-userpool-id-param",
        "Tier": "Standard",
        "Type": "String",
        "Value": Object {
          "Ref": "DeaAuthDEAUserPool22DB2BAB",
        },
      },
      "Type": "AWS::SSM::Parameter",
    },
    "DeaBackendStackDeaTableE9FE4A05": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AttributeDefinitions": Array [
          Object {
            "AttributeName": "PK",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "SK",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "GSI1PK",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "GSI1SK",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "GSI2PK",
            "AttributeType": "S",
          },
          Object {
            "AttributeName": "GSI2SK",
            "AttributeType": "S",
          },
        ],
        "BillingMode": "PAY_PER_REQUEST",
        "GlobalSecondaryIndexes": Array [
          Object {
            "IndexName": "GSI1",
            "KeySchema": Array [
              Object {
                "AttributeName": "GSI1PK",
                "KeyType": "HASH",
              },
              Object {
                "AttributeName": "GSI1SK",
                "KeyType": "RANGE",
              },
            ],
            "Projection": Object {
              "ProjectionType": "ALL",
            },
          },
          Object {
            "IndexName": "GSI2",
            "KeySchema": Array [
              Object {
                "AttributeName": "GSI2PK",
                "KeyType": "HASH",
              },
              Object {
                "AttributeName": "GSI2SK",
                "KeyType": "RANGE",
              },
            ],
            "Projection": Object {
              "ProjectionType": "ALL",
            },
          },
        ],
        "KeySchema": Array [
          Object {
            "AttributeName": "PK",
            "KeyType": "HASH",
          },
          Object {
            "AttributeName": "SK",
            "KeyType": "RANGE",
          },
        ],
        "PointInTimeRecoverySpecification": Object {
          "PointInTimeRecoveryEnabled": true,
        },
        "SSESpecification": Object {
          "KMSMasterKeyId": Object {
            "Fn::GetAtt": Array [
              "primaryCustomerKey87EC2263",
              "Arn",
            ],
          },
          "SSEEnabled": true,
          "SSEType": "KMS",
        },
        "TimeToLiveSpecification": Object {
          "AttributeName": "ttl",
          "Enabled": true,
        },
      },
      "Type": "AWS::DynamoDB::Table",
      "UpdateReplacePolicy": "Delete",
    },
    "DeaBackendStackS3AccessLogsBucket46FDD3E0": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W35",
              "reason": "This is an access log bucket, we don't need to configure access logging for access log buckets",
            },
          ],
        },
      },
      "Properties": Object {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "DeaBackendStackS3AccessLogsBucketAutoDeleteObjectsCustomResource54474E78": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "DeaBackendStackS3AccessLogsBucketPolicyCF6769D3",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "DeaBackendStackS3AccessLogsBucket46FDD3E0",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "DeaBackendStackS3AccessLogsBucketPolicyCF6769D3": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "DeaBackendStackS3AccessLogsBucket46FDD3E0",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaBackendStackS3AccessLogsBucket46FDD3E0",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaBackendStackS3AccessLogsBucket46FDD3E0",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaBackendStackS3AccessLogsBucket46FDD3E0",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaBackendStackS3AccessLogsBucket46FDD3E0",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:PutObject",
              "Condition": Object {
                "StringEquals": Object {
                  "aws:SourceAccount": Object {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logging.s3.amazonaws.com",
              },
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaBackendStackS3AccessLogsBucket46FDD3E0",
                          "Arn",
                        ],
                      },
                      "/dea-ui-access-log*",
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaBackendStackS3AccessLogsBucket46FDD3E0",
                          "Arn",
                        ],
                      },
                      "/dea-datasets-access-log*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "DeaBackendStackS3DatasetsBucket408FF954": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "BucketKeyEnabled": true,
              "ServerSideEncryptionByDefault": Object {
                "KMSMasterKeyID": Object {
                  "Fn::GetAtt": Array [
                    "primaryCustomerKey87EC2263",
                    "Arn",
                  ],
                },
                "SSEAlgorithm": "aws:kms",
              },
            },
          ],
        },
        "CorsConfiguration": Object {
          "CorsRules": Array [
            Object {
              "AllowedHeaders": Array [
                "*",
              ],
              "AllowedMethods": Array [
                "GET",
                "PUT",
                "HEAD",
              ],
              "AllowedOrigins": Array [
                "*",
              ],
            },
          ],
        },
        "LifecycleConfiguration": Object {
          "Rules": Array [
            Object {
              "AbortIncompleteMultipartUpload": Object {
                "DaysAfterInitiation": 1,
              },
              "Id": "DeaDatasetsDeleteIncompleteUploadsLifecyclePolicy",
              "Status": "Enabled",
            },
          ],
        },
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Ref": "DeaBackendStackS3AccessLogsBucket46FDD3E0",
          },
          "LogFilePrefix": "dea-datasets-access-log",
        },
        "ObjectLockEnabled": true,
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
        ],
        "VersioningConfiguration": Object {
          "Status": "Enabled",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "DeaBackendStackS3DatasetsBucketAutoDeleteObjectsCustomResource4F25360D": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "DeaBackendStackS3DatasetsBucketPolicy328F21B8",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "DeaBackendStackS3DatasetsBucket408FF954",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "DeaBackendStackS3DatasetsBucketPolicy328F21B8": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "DeaBackendStackS3DatasetsBucket408FF954",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaBackendStackS3DatasetsBucket408FF954",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaBackendStackS3DatasetsBucket408FF954",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaBackendStackS3DatasetsBucket408FF954",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaBackendStackS3DatasetsBucket408FF954",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "DeaUiStackartifactbucketAutoDeleteObjectsCustomResource3D6F178A": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "DeaUiStackartifactbucketPolicy4886C807",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "DeaUiStackartifactbucketFFC87A37",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "DeaUiStackartifactbucketFFC87A37": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Ref": "DeaBackendStackS3AccessLogsBucket46FDD3E0",
          },
          "LogFilePrefix": "dea-ui-access-log",
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
          Object {
            "Key": "aws-cdk:cr-owned:51fb81a3",
            "Value": "true",
          },
        ],
        "WebsiteConfiguration": Object {
          "IndexDocument": "index.html",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "DeaUiStackartifactbucketPolicy4886C807": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "DeaUiStackartifactbucketFFC87A37",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaUiStackartifactbucketFFC87A37",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaUiStackartifactbucketFFC87A37",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaUiStackartifactbucketFFC87A37",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaUiStackartifactbucketFFC87A37",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
              "Sid": "Deny requests that do not use TLS/HTTPS",
            },
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "StringNotEquals": Object {
                  "s3:signatureversion": "AWS4-HMAC-SHA256",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "DeaUiStackartifactbucketFFC87A37",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "Deny requests that do not use SigV4",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "DeaUiStackartifactdeploymentbucketAwsCliLayer760BCEFB": Object {
      "Properties": Object {
        "Content": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Description": "/opt/awscli/aws",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "DeaUiStackartifactdeploymentbucketCustomResourceC6B8B11C": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DestinationBucketName": Object {
          "Ref": "DeaUiStackartifactbucketFFC87A37",
        },
        "Prune": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
            "Arn",
          ],
        },
        "SourceBucketNames": Array [
          Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
        ],
        "SourceObjectKeys": Array [
          "[HASH REMOVED].zip",
        ],
      },
      "Type": "Custom::CDKBucketDeployment",
      "UpdateReplacePolicy": "Delete",
    },
    "DeaUiStackrole3432A944": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaUiStackroleDefaultPolicyBE7B3383": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaUiStackartifactbucketFFC87A37",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaUiStackartifactbucketFFC87A37",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeaUiStackroleDefaultPolicyBE7B3383",
        "Roles": Array [
          Object {
            "Ref": "DeaUiStackrole3432A944",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "deaAuditLogs7B75D3F1": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KmsKeyId": Object {
          "Fn::GetAtt": Array [
            "primaryCustomerKey87EC2263",
            "Arn",
          ],
        },
        "RetentionInDays": 14,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "deaTrail2681791A": Object {
      "DependsOn": Array [
        "DeaAuditdeaTrailBucketPolicyA68DF945",
        "deaTrailLogsRoleDefaultPolicyA1D73827",
        "deaTrailLogsRole13472204",
      ],
      "Properties": Object {
        "CloudWatchLogsLogGroupArn": Object {
          "Fn::GetAtt": Array [
            "deaTrailLogs0A0531F5",
            "Arn",
          ],
        },
        "CloudWatchLogsRoleArn": Object {
          "Fn::GetAtt": Array [
            "deaTrailLogsRole13472204",
            "Arn",
          ],
        },
        "EnableLogFileValidation": true,
        "EventSelectors": Array [
          Object {
            "DataResources": Array [
              Object {
                "Type": "AWS::S3::Object",
                "Values": Array [
                  Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        Object {
                          "Fn::GetAtt": Array [
                            "DeaBackendStackS3DatasetsBucket408FF954",
                            "Arn",
                          ],
                        },
                        "/",
                      ],
                    ],
                  },
                ],
              },
            ],
          },
          Object {
            "DataResources": Array [
              Object {
                "Type": "AWS::Lambda::Function",
                "Values": Array [
                  Object {
                    "Fn::Join": Array [
                      "",
                      Array [
                        "arn:",
                        Object {
                          "Ref": "AWS::Partition",
                        },
                        ":lambda",
                      ],
                    ],
                  },
                ],
              },
            ],
          },
        ],
        "IncludeGlobalServiceEvents": true,
        "IsLogging": true,
        "IsMultiRegionTrail": true,
        "KMSKeyId": Object {
          "Fn::GetAtt": Array [
            "primaryCustomerKey87EC2263",
            "Arn",
          ],
        },
        "S3BucketName": Object {
          "Ref": "DeaAuditdeaTrailBucket4819FF43",
        },
      },
      "Type": "AWS::CloudTrail::Trail",
    },
    "deaTrailLogs0A0531F5": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "KmsKeyId": Object {
          "Fn::GetAtt": Array [
            "primaryCustomerKey87EC2263",
            "Arn",
          ],
        },
        "RetentionInDays": 14,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Delete",
    },
    "deaTrailLogsRole13472204": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "cloudtrail.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "deaTrailLogsRoleDefaultPolicyA1D73827": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:PutLogEvents",
                "logs:CreateLogStream",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "deaTrailLogs0A0531F5",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "deaTrailLogsRoleDefaultPolicyA1D73827",
        "Roles": Array [
          Object {
            "Ref": "deaTrailLogsRole13472204",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "primaryCustomerKey87EC2263": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "EnableKeyRotation": true,
        "KeyPolicy": Object {
          "Statement": Array [
            Object {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
              "Sid": "main-key-share-statement",
            },
            Object {
              "Action": Array [
                "kms:Encrypt*",
                "kms:Decrypt*",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
                "kms:Describe*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "logs.",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ".amazonaws.com",
                    ],
                  ],
                },
              },
              "Resource": "*",
              "Sid": "main-key-share-statement",
            },
            Object {
              "Action": Array [
                "kms:Encrypt",
                "kms:ReEncrypt*",
                "kms:GenerateDataKey*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "Service": "cloudtrail.amazonaws.com",
              },
              "Resource": "*",
            },
            Object {
              "Action": Array [
                "kms:Decrypt",
                "kms:Encrypt",
                "kms:GenerateDataKey",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "Service": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "lambda.",
                      Object {
                        "Ref": "AWS::Region",
                      },
                      ".amazonaws.com",
                    ],
                  ],
                },
              },
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DeaApiGatewaydeabaselambdarole91512884",
                  "Arn",
                ],
              },
              "Sid": "main-key-share-statement",
            },
          ],
          "Version": "2012-10-17",
        },
        "PendingWindowInDays": 7,
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Delete",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
