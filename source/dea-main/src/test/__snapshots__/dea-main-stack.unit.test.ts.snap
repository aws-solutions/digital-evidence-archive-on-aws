// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DeaMainStack synthesizes the way we expect 1`] = `
Object {
  "Outputs": Object {
    "DeaBackendStackAPIGatewayAPIEndpoint6327A605": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "DeaBackendStackAPIGatewayAPI9C81C9B1",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "DeaBackendStackAPIGatewayAPIDeploymentStagedevC055C086",
            },
            "/",
          ],
        ],
      },
    },
    "DeaBackendStackapiUrlOutput90D8814D": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "DeaBackendStackAPIGatewayAPI9C81C9B1",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "DeaBackendStackAPIGatewayAPIDeploymentStagedevC055C086",
            },
            "/",
          ],
        ],
      },
    },
    "DeaUiStackDeaUIS3BucketAccessLogsOutputDCD456F0": Object {
      "Export": Object {
        "Name": "DeaUIS3BucketAccessLogsOutput",
      },
      "Value": Object {
        "Ref": "DeaUiStackuiS3AccessLogsBucketF45A3215",
      },
    },
    "DeaUiStackUiDeploymentRestApiA53BF2B2": Object {
      "Export": Object {
        "Name": "UiDeploymentRestApi",
      },
      "Value": "dea-ui-gateway",
    },
    "DeaUiStackdeauigatewayEndpointFE9A0DB0": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "DeaUiStackdeauigateway147D98B7",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "DeaUiStackdeauigatewayDeploymentStagedevAEE02F77",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": Object {
      "DependsOn": Array [
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Handler": "index.handler",
        "Layers": Array [
          Object {
            "Ref": "DeaUiStackDeaUiStackdeploymentbucketAwsCliLayerE6B55D5A",
          },
        ],
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaUiStackDeaUiStackbucket2409F549",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaUiStackDeaUiStackbucket2409F549",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "Roles": Array [
          Object {
            "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DeaBackendStackAPIGatewayAPI9C81C9B1": Object {
      "Properties": Object {
        "Description": "Backend API",
        "Name": "API-Gateway API",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "DeaBackendStackAPIGatewayAPIANY85D2CE20": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": Object {
          "Type": "MOCK",
        },
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "DeaBackendStackAPIGatewayAPI9C81C9B1",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "DeaBackendStackAPIGatewayAPI9C81C9B1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaBackendStackAPIGatewayAPIAccount35B6120A": Object {
      "DeletionPolicy": "Retain",
      "DependsOn": Array [
        "DeaBackendStackAPIGatewayAPI9C81C9B1",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "DeaBackendStackAPIGatewayAPICloudWatchRole8669485D",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "DeaBackendStackAPIGatewayAPIBackendUsagePlanBEFA1FC3": Object {
      "Properties": Object {
        "UsagePlanName": "backend-usage-plan",
      },
      "Type": "AWS::ApiGateway::UsagePlan",
    },
    "DeaBackendStackAPIGatewayAPICloudWatchRole8669485D": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "DeaBackendStackAPIGatewayAPIDeployment70A4DC51d7eaa0527cdec589c853366123fe427b": Object {
      "DependsOn": Array [
        "DeaBackendStackAPIGatewayAPIproxyANY42138D59",
        "DeaBackendStackAPIGatewayAPIproxy637DBD20",
        "DeaBackendStackAPIGatewayAPIANY85D2CE20",
      ],
      "Properties": Object {
        "Description": "Backend API",
        "RestApiId": Object {
          "Ref": "DeaBackendStackAPIGatewayAPI9C81C9B1",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "DeaBackendStackAPIGatewayAPIDeploymentStagedevC055C086": Object {
      "DependsOn": Array [
        "DeaBackendStackAPIGatewayAPIAccount35B6120A",
      ],
      "Properties": Object {
        "AccessLogSetting": Object {
          "DestinationArn": Object {
            "Fn::GetAtt": Array [
              "DeaBackendStackAPIGatewayAccessLogsA65761F7",
              "Arn",
            ],
          },
          "Format": "{\\"stage\\":\\"$context.stage\\",\\"requestId\\":\\"$context.requestId\\",\\"integrationRequestId\\":\\"$context.integration.requestId\\",\\"status\\":\\"$context.status\\",\\"apiId\\":\\"$context.apiId\\",\\"resourcePath\\":\\"$context.resourcePath\\",\\"path\\":\\"$context.path\\",\\"resourceId\\":\\"$context.resourceId\\",\\"httpMethod\\":\\"$context.httpMethod\\",\\"sourceIp\\":\\"$context.identity.sourceIp\\",\\"userAgent\\":\\"$context.identity.userAgent\\"}",
        },
        "DeploymentId": Object {
          "Ref": "DeaBackendStackAPIGatewayAPIDeployment70A4DC51d7eaa0527cdec589c853366123fe427b",
        },
        "RestApiId": Object {
          "Ref": "DeaBackendStackAPIGatewayAPI9C81C9B1",
        },
        "StageName": "dev",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "DeaBackendStackAPIGatewayAPIproxy637DBD20": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "DeaBackendStackAPIGatewayAPI9C81C9B1",
            "RootResourceId",
          ],
        },
        "PathPart": "{proxy+}",
        "RestApiId": Object {
          "Ref": "DeaBackendStackAPIGatewayAPI9C81C9B1",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaBackendStackAPIGatewayAPIproxyANY42138D59": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "ANY",
        "Integration": Object {
          "IntegrationHttpMethod": "POST",
          "Type": "AWS_PROXY",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":lambda:path/2015-03-31/functions/",
                Object {
                  "Ref": "DeaBackendStackLiveAlias8D27EC80",
                },
                "/invocations",
              ],
            ],
          },
        },
        "ResourceId": Object {
          "Ref": "DeaBackendStackAPIGatewayAPIproxy637DBD20",
        },
        "RestApiId": Object {
          "Ref": "DeaBackendStackAPIGatewayAPI9C81C9B1",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaBackendStackAPIGatewayAPIproxyANYApiPermissionDeaMainStackDeaBackendStackAPIGatewayAPICF8DF2E2ANYproxyE36270C0": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Ref": "DeaBackendStackLiveAlias8D27EC80",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaBackendStackAPIGatewayAPI9C81C9B1",
              },
              "/",
              Object {
                "Ref": "DeaBackendStackAPIGatewayAPIDeploymentStagedevC055C086",
              },
              "/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaBackendStackAPIGatewayAPIproxyANYApiPermissionTestDeaMainStackDeaBackendStackAPIGatewayAPICF8DF2E2ANYproxyCCFBF07F": Object {
      "Properties": Object {
        "Action": "lambda:InvokeFunction",
        "FunctionName": Object {
          "Ref": "DeaBackendStackLiveAlias8D27EC80",
        },
        "Principal": "apigateway.amazonaws.com",
        "SourceArn": Object {
          "Fn::Join": Array [
            "",
            Array [
              "arn:",
              Object {
                "Ref": "AWS::Partition",
              },
              ":execute-api:",
              Object {
                "Ref": "AWS::Region",
              },
              ":",
              Object {
                "Ref": "AWS::AccountId",
              },
              ":",
              Object {
                "Ref": "DeaBackendStackAPIGatewayAPI9C81C9B1",
              },
              "/test-invoke-stage/*/*",
            ],
          ],
        },
      },
      "Type": "AWS::Lambda::Permission",
    },
    "DeaBackendStackAPIGatewayAccessLogsA65761F7": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 731,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "DeaBackendStackFlowLogB1F9C02F": Object {
      "Properties": Object {
        "DeliverLogsPermissionArn": Object {
          "Fn::GetAtt": Array [
            "DeaBackendStackflowlogrole27B11B52",
            "Arn",
          ],
        },
        "LogDestinationType": "cloud-watch-logs",
        "LogGroupName": Object {
          "Ref": "DeaBackendStackdeavpcloggroup901AE5A5",
        },
        "ResourceId": Object {
          "Ref": "DeaBackendStackdeavpc12685D7A",
        },
        "ResourceType": "VPC",
        "TrafficType": "ALL",
      },
      "Type": "AWS::EC2::FlowLog",
    },
    "DeaBackendStackLiveAlias8D27EC80": Object {
      "Properties": Object {
        "FunctionName": Object {
          "Ref": "DeaBackendStackdeaapphandler0C401F36",
        },
        "FunctionVersion": Object {
          "Fn::GetAtt": Array [
            "DeaBackendStackdeaapphandlerCurrentVersion08C5872Aee0c174c01b521d0ca5adb20dff794bd",
            "Version",
          ],
        },
        "Name": "live",
      },
      "Type": "AWS::Lambda::Alias",
    },
    "DeaBackendStackdeaapphandler0C401F36": Object {
      "DependsOn": Array [
        "DeaBackendStackdeabaselambdarole5B9EAC0D",
        "DeaBackendStackdeavpcIngressSubnet1RouteTableAssociation58064637",
        "DeaBackendStackdeavpcIngressSubnet2RouteTableAssociation473345C0",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W58",
              "reason": "AWSCustomResource Lambda Function has AWSLambdaBasicExecutionRole policy attached which has the required permission to write to Cloudwatch Logs",
            },
          ],
        },
      },
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_NODEJS_CONNECTION_REUSE_ENABLED": "1",
          },
        },
        "Handler": "index.handler",
        "MemorySize": 512,
        "Role": Object {
          "Fn::GetAtt": Array [
            "DeaBackendStackdeabaselambdarole5B9EAC0D",
            "Arn",
          ],
        },
        "Runtime": "nodejs16.x",
        "Timeout": 180,
        "VpcConfig": Object {
          "SecurityGroupIds": Array [
            Object {
              "Fn::GetAtt": Array [
                "DeaBackendStackdeaapphandlerSecurityGroup8B9F989E",
                "GroupId",
              ],
            },
          ],
          "SubnetIds": Array [
            Object {
              "Ref": "DeaBackendStackdeavpcIngressSubnet1SubnetABD836F5",
            },
            Object {
              "Ref": "DeaBackendStackdeavpcIngressSubnet2SubnetDD3E1464",
            },
          ],
        },
      },
      "Type": "AWS::Lambda::Function",
    },
    "DeaBackendStackdeaapphandlerCurrentVersion08C5872Aee0c174c01b521d0ca5adb20dff794bd": Object {
      "DependsOn": Array [
        "DeaBackendStackdeavpcIngressSubnet1RouteTableAssociation58064637",
        "DeaBackendStackdeavpcIngressSubnet2RouteTableAssociation473345C0",
      ],
      "Properties": Object {
        "FunctionName": Object {
          "Ref": "DeaBackendStackdeaapphandler0C401F36",
        },
      },
      "Type": "AWS::Lambda::Version",
    },
    "DeaBackendStackdeaapphandlerSecurityGroup8B9F989E": Object {
      "DependsOn": Array [
        "DeaBackendStackdeavpcIngressSubnet1RouteTableAssociation58064637",
        "DeaBackendStackdeavpcIngressSubnet2RouteTableAssociation473345C0",
      ],
      "Properties": Object {
        "GroupDescription": "Automatic security group for Lambda Function DeaMainStackDeaBackendStackdeaapphandler0CFA0DA6",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "DeaBackendStackdeavpc12685D7A",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "DeaBackendStackdeabaselambdarole5B9EAC0D": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaVPCAccessExecutionRole",
              ],
            ],
          },
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaBackendStackdeavpc12685D7A": Object {
      "Properties": Object {
        "CidrBlock": "10.0.0.0/16",
        "EnableDnsHostnames": true,
        "EnableDnsSupport": true,
        "InstanceTenancy": "default",
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "DeaMainStack/DeaBackendStack/dea-vpc",
          },
        ],
      },
      "Type": "AWS::EC2::VPC",
    },
    "DeaBackendStackdeavpcIngressSubnet1RouteTable6C07EAA5": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "DeaMainStack/DeaBackendStack/dea-vpc/IngressSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "DeaBackendStackdeavpc12685D7A",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "DeaBackendStackdeavpcIngressSubnet1RouteTableAssociation58064637": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "DeaBackendStackdeavpcIngressSubnet1RouteTable6C07EAA5",
        },
        "SubnetId": Object {
          "Ref": "DeaBackendStackdeavpcIngressSubnet1SubnetABD836F5",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "DeaBackendStackdeavpcIngressSubnet1SubnetABD836F5": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            0,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.0.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Ingress",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "DeaMainStack/DeaBackendStack/dea-vpc/IngressSubnet1",
          },
        ],
        "VpcId": Object {
          "Ref": "DeaBackendStackdeavpc12685D7A",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "DeaBackendStackdeavpcIngressSubnet2RouteTable3BE41AAE": Object {
      "Properties": Object {
        "Tags": Array [
          Object {
            "Key": "Name",
            "Value": "DeaMainStack/DeaBackendStack/dea-vpc/IngressSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "DeaBackendStackdeavpc12685D7A",
        },
      },
      "Type": "AWS::EC2::RouteTable",
    },
    "DeaBackendStackdeavpcIngressSubnet2RouteTableAssociation473345C0": Object {
      "Properties": Object {
        "RouteTableId": Object {
          "Ref": "DeaBackendStackdeavpcIngressSubnet2RouteTable3BE41AAE",
        },
        "SubnetId": Object {
          "Ref": "DeaBackendStackdeavpcIngressSubnet2SubnetDD3E1464",
        },
      },
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
    },
    "DeaBackendStackdeavpcIngressSubnet2SubnetDD3E1464": Object {
      "Properties": Object {
        "AvailabilityZone": Object {
          "Fn::Select": Array [
            1,
            Object {
              "Fn::GetAZs": "",
            },
          ],
        },
        "CidrBlock": "10.0.1.0/24",
        "MapPublicIpOnLaunch": false,
        "Tags": Array [
          Object {
            "Key": "aws-cdk:subnet-name",
            "Value": "Ingress",
          },
          Object {
            "Key": "aws-cdk:subnet-type",
            "Value": "Isolated",
          },
          Object {
            "Key": "Name",
            "Value": "DeaMainStack/DeaBackendStack/dea-vpc/IngressSubnet2",
          },
        ],
        "VpcId": Object {
          "Ref": "DeaBackendStackdeavpc12685D7A",
        },
      },
      "Type": "AWS::EC2::Subnet",
    },
    "DeaBackendStackdeavpcloggroup901AE5A5": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 731,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "DeaBackendStackflowlogrole27B11B52": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "vpc-flow-logs.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaBackendStackflowlogroleDefaultPolicy356D45B4": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "logs:CreateLogStream",
                "logs:PutLogEvents",
                "logs:DescribeLogStreams",
              ],
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DeaBackendStackdeavpcloggroup901AE5A5",
                  "Arn",
                ],
              },
            },
            Object {
              "Action": "iam:PassRole",
              "Effect": "Allow",
              "Resource": Object {
                "Fn::GetAtt": Array [
                  "DeaBackendStackflowlogrole27B11B52",
                  "Arn",
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeaBackendStackflowlogroleDefaultPolicy356D45B4",
        "Roles": Array [
          Object {
            "Ref": "DeaBackendStackflowlogrole27B11B52",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DeaBackendStackvpcsg0A453A26": Object {
      "Properties": Object {
        "GroupDescription": "DeaMainStack/DeaBackendStack/vpc-sg",
        "SecurityGroupEgress": Array [
          Object {
            "CidrIp": "0.0.0.0/0",
            "Description": "Allow all outbound traffic by default",
            "IpProtocol": "-1",
          },
        ],
        "VpcId": Object {
          "Ref": "DeaBackendStackdeavpc12685D7A",
        },
      },
      "Type": "AWS::EC2::SecurityGroup",
    },
    "DeaUiStackAPIGatewayAccessLogsC67405C3": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "RetentionInDays": 731,
      },
      "Type": "AWS::Logs::LogGroup",
      "UpdateReplacePolicy": "Retain",
    },
    "DeaUiStackDeaUiStackbucket2409F549": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Ref": "DeaUiStackuiS3AccessLogsBucketF45A3215",
          },
          "LogFilePrefix": "dea-ui-access-log",
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:cr-owned:debec8f9",
            "Value": "true",
          },
        ],
        "WebsiteConfiguration": Object {
          "IndexDocument": "index.html",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
    "DeaUiStackDeaUiStackbucketPolicy3F40F0AF": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "DeaUiStackDeaUiStackbucket2409F549",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaUiStackDeaUiStackbucket2409F549",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaUiStackDeaUiStackbucket2409F549",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
              "Sid": "Deny requests that do not use TLS/HTTPS",
            },
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "StringNotEquals": Object {
                  "s3:signatureversion": "AWS4-HMAC-SHA256",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "DeaUiStackDeaUiStackbucket2409F549",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "Deny requests that do not use SigV4",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "DeaUiStackDeaUiStackdeploymentbucketAwsCliLayerE6B55D5A": Object {
      "Properties": Object {
        "Content": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Description": "/opt/awscli/aws",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "DeaUiStackDeaUiStackdeploymentbucketCustomResource5769B150": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DestinationBucketName": Object {
          "Ref": "DeaUiStackDeaUiStackbucket2409F549",
        },
        "Prune": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
            "Arn",
          ],
        },
        "SourceBucketNames": Array [
          Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
        ],
        "SourceObjectKeys": Array [
          "[HASH REMOVED].zip",
        ],
      },
      "Type": "Custom::CDKBucketDeployment",
      "UpdateReplacePolicy": "Delete",
    },
    "DeaUiStackdeauigateway147D98B7": Object {
      "Properties": Object {
        "Description": "distribution api",
        "Name": "dea-ui-gateway",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "DeaUiStackdeauigatewayAccount1A92DBB5": Object {
      "DeletionPolicy": "Retain",
      "DependsOn": Array [
        "DeaUiStackdeauigateway147D98B7",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "DeaUiStackdeauigatewayCloudWatchRole2C2FC061",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "DeaUiStackdeauigatewayCloudWatchRole2C2FC061": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "DeaUiStackdeauigatewayDeployment34004937c730247bbdaa583ac7090ba2f990d9e0": Object {
      "DependsOn": Array [
        "DeaUiStackdeauigatewayproxyGET48BC7F5C",
        "DeaUiStackdeauigatewayproxyA4F311E1",
        "DeaUiStackdeauigatewayGET36636906",
      ],
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W68",
              "reason": "'No need to enforce Usage Plan. This is only for serving UI' ",
            },
          ],
        },
      },
      "Properties": Object {
        "Description": "distribution api",
        "RestApiId": Object {
          "Ref": "DeaUiStackdeauigateway147D98B7",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "DeaUiStackdeauigatewayDeploymentStagedevAEE02F77": Object {
      "DependsOn": Array [
        "DeaUiStackdeauigatewayAccount1A92DBB5",
      ],
      "Properties": Object {
        "AccessLogSetting": Object {
          "DestinationArn": Object {
            "Fn::GetAtt": Array [
              "DeaUiStackAPIGatewayAccessLogsC67405C3",
              "Arn",
            ],
          },
          "Format": "{\\"stage\\":\\"$context.stage\\",\\"requestId\\":\\"$context.requestId\\",\\"integrationRequestId\\":\\"$context.integration.requestId\\",\\"status\\":\\"$context.status\\",\\"apiId\\":\\"$context.apiId\\",\\"resourcePath\\":\\"$context.resourcePath\\",\\"path\\":\\"$context.path\\",\\"resourceId\\":\\"$context.resourceId\\",\\"httpMethod\\":\\"$context.httpMethod\\",\\"sourceIp\\":\\"$context.identity.sourceIp\\",\\"userAgent\\":\\"$context.identity.userAgent\\"}",
        },
        "DeploymentId": Object {
          "Ref": "DeaUiStackdeauigatewayDeployment34004937c730247bbdaa583ac7090ba2f990d9e0",
        },
        "RestApiId": Object {
          "Ref": "DeaUiStackdeauigateway147D98B7",
        },
        "StageName": "dev",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "DeaUiStackdeauigatewayGET36636906": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "ContentHandling": "CONVERT_TO_TEXT",
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "DeaUiStackrole3432A944",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "GET",
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Content-Type": "integration.response.header.Content-Type",
              },
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "RequestParameters": Object {
            "integration.request.header.Accept": "method.request.header.Accept",
            "integration.request.header.Content-Type": "method.request.header.Content-Type",
            "integration.request.path.proxy": "method.request.path.proxy",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":s3:path/",
                Object {
                  "Ref": "DeaUiStackDeaUiStackbucket2409F549",
                },
                "/index.html",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseModels": Object {
              "application/json": "Empty",
            },
            "ResponseParameters": Object {
              "method.response.header.Content-Length": true,
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
        ],
        "RequestParameters": Object {
          "method.request.header.Accept": true,
          "method.request.header.Content-Type": true,
          "method.request.path.proxy": true,
        },
        "ResourceId": Object {
          "Fn::GetAtt": Array [
            "DeaUiStackdeauigateway147D98B7",
            "RootResourceId",
          ],
        },
        "RestApiId": Object {
          "Ref": "DeaUiStackdeauigateway147D98B7",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaUiStackdeauigatewayproxyA4F311E1": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "DeaUiStackdeauigateway147D98B7",
            "RootResourceId",
          ],
        },
        "PathPart": "{proxy+}",
        "RestApiId": Object {
          "Ref": "DeaUiStackdeauigateway147D98B7",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "DeaUiStackdeauigatewayproxyGET48BC7F5C": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "ContentHandling": "CONVERT_TO_TEXT",
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "DeaUiStackrole3432A944",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "GET",
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Content-Type": "integration.response.header.Content-Type",
              },
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "RequestParameters": Object {
            "integration.request.header.Accept": "method.request.header.Accept",
            "integration.request.header.Content-Type": "method.request.header.Content-Type",
            "integration.request.path.proxy": "method.request.path.proxy",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":s3:path/",
                Object {
                  "Ref": "DeaUiStackDeaUiStackbucket2409F549",
                },
                "/{proxy}",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseModels": Object {
              "application/json": "Empty",
            },
            "ResponseParameters": Object {
              "method.response.header.Content-Length": true,
              "method.response.header.Content-Type": true,
            },
            "StatusCode": "200",
          },
        ],
        "RequestParameters": Object {
          "method.request.header.Accept": true,
          "method.request.header.Content-Type": true,
          "method.request.path.proxy": true,
        },
        "ResourceId": Object {
          "Ref": "DeaUiStackdeauigatewayproxyA4F311E1",
        },
        "RestApiId": Object {
          "Ref": "DeaUiStackdeauigateway147D98B7",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "DeaUiStackrole3432A944": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaUiStackroleDefaultPolicyBE7B3383": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaUiStackDeaUiStackbucket2409F549",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaUiStackDeaUiStackbucket2409F549",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeaUiStackroleDefaultPolicyBE7B3383",
        "Roles": Array [
          Object {
            "Ref": "DeaUiStackrole3432A944",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "DeaUiStackuiS3AccessLogsBucketF45A3215": Object {
      "DeletionPolicy": "Delete",
      "Metadata": Object {
        "cfn_nag": Object {
          "rules_to_suppress": Array [
            Object {
              "id": "W35",
              "reason": "This is an access log bucket, we don't need to configure access logging for access log buckets",
            },
          ],
        },
      },
      "Properties": Object {
        "AccessControl": "LogDeliveryWrite",
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "DeaUiStackuiS3AccessLogsBucketPolicyBA876991": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "DeaUiStackuiS3AccessLogsBucketF45A3215",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaUiStackuiS3AccessLogsBucketF45A3215",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaUiStackuiS3AccessLogsBucketF45A3215",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:PutObject",
              "Condition": Object {
                "StringEquals": Object {
                  "aws:SourceAccount": Object {
                    "Ref": "AWS::AccountId",
                  },
                },
              },
              "Effect": "Allow",
              "Principal": Object {
                "Service": "logging.s3.amazonaws.com",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "DeaUiStackuiS3AccessLogsBucketF45A3215",
                        "Arn",
                      ],
                    },
                    "/dea-ui-access-log*",
                  ],
                ],
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
