// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`DEA UI Infrastructure stack synthesizes the way we expect 1`] = `
Object {
  "Outputs": Object {
    "DeaUiStackartifactBucketNameE913A2E8": Object {
      "Export": Object {
        "Name": "[STAGE-REMOVED]-artifactBucketName",
      },
      "Value": Object {
        "Ref": "DeaUiStackartifactbucketFFC87A37",
      },
    },
    "testApiEndpointC9D07ADA": Object {
      "Value": Object {
        "Fn::Join": Array [
          "",
          Array [
            "https://",
            Object {
              "Ref": "testApiD6ECAB50",
            },
            ".execute-api.",
            Object {
              "Ref": "AWS::Region",
            },
            ".",
            Object {
              "Ref": "AWS::URLSuffix",
            },
            "/",
            Object {
              "Ref": "DeaApiGatewaydeaapiDeployment-[HASH REMOVED]",
            },
            "/",
          ],
        ],
      },
    },
  },
  "Parameters": Object {
    "BootstrapVersion": Object {
      "Default": "/cdk-bootstrap/hnb659fds/version",
      "Description": "Version of the CDK Bootstrap resources in this environment, automatically retrieved from SSM Parameter Store. [cdk:skip]",
      "Type": "AWS::SSM::Parameter::Value<String>",
    },
  },
  "Resources": Object {
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536": Object {
      "DependsOn": Array [
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Environment": Object {
          "Variables": Object {
            "AWS_CA_BUNDLE": "/etc/pki/ca-trust/extracted/pem/tls-ca-bundle.pem",
          },
        },
        "Handler": "index.handler",
        "Layers": Array [
          Object {
            "Ref": "DeaUiStackartifactdeploymentbucketAwsCliLayer760BCEFB",
          },
        ],
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
            "Arn",
          ],
        },
        "Runtime": "python3.9",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                    ],
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":s3:::",
                      Object {
                        "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaUiStackartifactbucketFFC87A37",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaUiStackartifactbucketFFC87A37",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRoleDefaultPolicy88902FDF",
        "Roles": Array [
          Object {
            "Ref": "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756CServiceRole89A01265",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F": Object {
      "DependsOn": Array [
        "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
      ],
      "Properties": Object {
        "Code": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Description": Object {
          "Fn::Join": Array [
            "",
            Array [
              "Lambda function for auto-deleting objects in ",
              Object {
                "Ref": "DeaUiStackartifactbucketFFC87A37",
              },
              " S3 bucket.",
            ],
          ],
        },
        "Handler": "index.handler",
        "MemorySize": 128,
        "Role": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
            "Arn",
          ],
        },
        "Runtime": "nodejs18.x",
        "Timeout": 900,
      },
      "Type": "AWS::Lambda::Function",
    },
    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "lambda.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Sub": "arn:\${AWS::Partition}:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole",
          },
        ],
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaUiStackartifactbucketAutoDeleteObjectsCustomResource3D6F178A": Object {
      "DeletionPolicy": "Delete",
      "DependsOn": Array [
        "DeaUiStackartifactbucketPolicy4886C807",
      ],
      "Properties": Object {
        "BucketName": Object {
          "Ref": "DeaUiStackartifactbucketFFC87A37",
        },
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomS3AutoDeleteObjectsCustomResourceProviderHandler9D90184F",
            "Arn",
          ],
        },
      },
      "Type": "Custom::S3AutoDeleteObjects",
      "UpdateReplacePolicy": "Delete",
    },
    "DeaUiStackartifactbucketFFC87A37": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "BucketEncryption": Object {
          "ServerSideEncryptionConfiguration": Array [
            Object {
              "ServerSideEncryptionByDefault": Object {
                "SSEAlgorithm": "AES256",
              },
            },
          ],
        },
        "LoggingConfiguration": Object {
          "DestinationBucketName": Object {
            "Ref": "testS3AccessLogBucketF0DCA384",
          },
          "LogFilePrefix": "dea-ui-access-log",
        },
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerPreferred",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
        "Tags": Array [
          Object {
            "Key": "aws-cdk:auto-delete-objects",
            "Value": "true",
          },
          Object {
            "Key": "aws-cdk:cr-owned:b197ded3",
            "Value": "true",
          },
        ],
        "WebsiteConfiguration": Object {
          "IndexDocument": "index.html",
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Delete",
    },
    "DeaUiStackartifactbucketPolicy4886C807": Object {
      "Properties": Object {
        "Bucket": Object {
          "Ref": "DeaUiStackartifactbucketFFC87A37",
        },
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
              ],
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::GetAtt": Array [
                    "CustomS3AutoDeleteObjectsCustomResourceProviderRole3B1BD092",
                    "Arn",
                  ],
                },
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaUiStackartifactbucketFFC87A37",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaUiStackartifactbucketFFC87A37",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "Bool": Object {
                  "aws:SecureTransport": "false",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaUiStackartifactbucketFFC87A37",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaUiStackartifactbucketFFC87A37",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
              "Sid": "Deny requests that do not use TLS/HTTPS",
            },
            Object {
              "Action": "s3:*",
              "Condition": Object {
                "StringNotEquals": Object {
                  "s3:signatureversion": "AWS4-HMAC-SHA256",
                },
              },
              "Effect": "Deny",
              "Principal": Object {
                "AWS": "*",
              },
              "Resource": Object {
                "Fn::Join": Array [
                  "",
                  Array [
                    Object {
                      "Fn::GetAtt": Array [
                        "DeaUiStackartifactbucketFFC87A37",
                        "Arn",
                      ],
                    },
                    "/*",
                  ],
                ],
              },
              "Sid": "Deny requests that do not use SigV4",
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::S3::BucketPolicy",
    },
    "DeaUiStackartifactdeploymentbucketAwsCliLayer760BCEFB": Object {
      "Properties": Object {
        "Content": Object {
          "S3Bucket": Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
          "S3Key": "[HASH REMOVED].zip",
        },
        "Description": "/opt/awscli/aws",
      },
      "Type": "AWS::Lambda::LayerVersion",
    },
    "DeaUiStackartifactdeploymentbucketCustomResourceC6B8B11C": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "DestinationBucketName": Object {
          "Ref": "DeaUiStackartifactbucketFFC87A37",
        },
        "Prune": true,
        "ServiceToken": Object {
          "Fn::GetAtt": Array [
            "CustomCDKBucketDeployment8693BB64968944B69AAFB0CC9EB8756C81C01536",
            "Arn",
          ],
        },
        "SourceBucketNames": Array [
          Object {
            "Fn::Sub": "cdk-hnb659fds-assets-\${AWS::AccountId}-\${AWS::Region}",
          },
        ],
        "SourceObjectKeys": Array [
          "[HASH REMOVED].zip",
        ],
      },
      "Type": "Custom::CDKBucketDeployment",
      "UpdateReplacePolicy": "Delete",
    },
    "DeaUiStackrole3432A944": Object {
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
      },
      "Type": "AWS::IAM::Role",
    },
    "DeaUiStackroleDefaultPolicyBE7B3383": Object {
      "Properties": Object {
        "PolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": Array [
                "s3:GetObject*",
                "s3:GetBucket*",
                "s3:List*",
                "s3:DeleteObject*",
                "s3:PutObject",
                "s3:PutObjectLegalHold",
                "s3:PutObjectRetention",
                "s3:PutObjectTagging",
                "s3:PutObjectVersionTagging",
                "s3:Abort*",
              ],
              "Effect": "Allow",
              "Resource": Array [
                Object {
                  "Fn::GetAtt": Array [
                    "DeaUiStackartifactbucketFFC87A37",
                    "Arn",
                  ],
                },
                Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      Object {
                        "Fn::GetAtt": Array [
                          "DeaUiStackartifactbucketFFC87A37",
                          "Arn",
                        ],
                      },
                      "/*",
                    ],
                  ],
                },
              ],
            },
          ],
          "Version": "2012-10-17",
        },
        "PolicyName": "DeaUiStackroleDefaultPolicyBE7B3383",
        "Roles": Array [
          Object {
            "Ref": "DeaUiStackrole3432A944",
          },
        ],
      },
      "Type": "AWS::IAM::Policy",
    },
    "testApiAccountA6723CBB": Object {
      "DeletionPolicy": "Retain",
      "DependsOn": Array [
        "testApiD6ECAB50",
      ],
      "Properties": Object {
        "CloudWatchRoleArn": Object {
          "Fn::GetAtt": Array [
            "testApiCloudWatchRole8A11639C",
            "Arn",
          ],
        },
      },
      "Type": "AWS::ApiGateway::Account",
      "UpdateReplacePolicy": "Retain",
    },
    "testApiCloudWatchRole8A11639C": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AssumeRolePolicyDocument": Object {
          "Statement": Array [
            Object {
              "Action": "sts:AssumeRole",
              "Effect": "Allow",
              "Principal": Object {
                "Service": "apigateway.amazonaws.com",
              },
            },
          ],
          "Version": "2012-10-17",
        },
        "ManagedPolicyArns": Array [
          Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs",
              ],
            ],
          },
        ],
      },
      "Type": "AWS::IAM::Role",
      "UpdateReplacePolicy": "Retain",
    },
    "testApiD6ECAB50": Object {
      "Properties": Object {
        "Description": "Backend API",
        "Name": "testApi",
      },
      "Type": "AWS::ApiGateway::RestApi",
    },
    "DeaApiGatewaydeaapiDeployment-[HASH REMOVED]": Object {
      "DependsOn": Array [
        "testApiuiproxyGET92230E90",
        "testApiuiproxyDDF9EC1E",
        "testApiuiauthtestGET880E0E8F",
        "testApiuiauthtestC9DEEA73",
        "testApiuicasedetailGET6D4018AE",
        "testApiuicasedetail80E12772",
        "testApiuicreatecasesGET786EA30D",
        "testApiuicreatecasesA8526372",
        "testApiuiGET8FD5D6F5",
        "testApiuiloginGET86824034",
        "testApiuilogin54AC376B",
        "testApiui1F041DD2",
        "testApiuiuploadfilesGET6DFAC286",
        "testApiuiuploadfilesD762C518",
      ],
      "Properties": Object {
        "Description": "Backend API",
        "RestApiId": Object {
          "Ref": "testApiD6ECAB50",
        },
      },
      "Type": "AWS::ApiGateway::Deployment",
    },
    "DeaApiGatewaydeaapiDeployment-[HASH REMOVED]": Object {
      "DependsOn": Array [
        "testApiAccountA6723CBB",
      ],
      "Properties": Object {
        "DeploymentId": Object {
          "Ref": "DeaApiGatewaydeaapiDeployment-[HASH REMOVED]",
        },
        "RestApiId": Object {
          "Ref": "testApiD6ECAB50",
        },
        "StageName": "prod",
      },
      "Type": "AWS::ApiGateway::Stage",
    },
    "testApiui1F041DD2": Object {
      "Properties": Object {
        "ParentId": Object {
          "Fn::GetAtt": Array [
            "testApiD6ECAB50",
            "RootResourceId",
          ],
        },
        "PathPart": "ui",
        "RestApiId": Object {
          "Ref": "testApiD6ECAB50",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testApiuiGET8FD5D6F5": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "ContentHandling": "CONVERT_TO_TEXT",
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "DeaUiStackrole3432A944",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "GET",
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Content-Security-Policy": "[HASH REMOVED]",
                "method.response.header.Content-Type": "integration.response.header.Content-Type",
                "method.response.header.Strict-Transport-Security": "'max-age=31540000; includeSubdomains'",
                "method.response.header.X-Content-Type-Options": "'nosniff'",
                "method.response.header.X-Frame-Options": "'DENY'",
                "method.response.header.X-XSS-Protection": "'1; mode=block'",
              },
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "RequestParameters": Object {
            "integration.request.header.Accept": "method.request.header.Accept",
            "integration.request.header.Content-Type": "method.request.header.Content-Type",
            "integration.request.path.proxy": "method.request.path.proxy",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":s3:path/",
                Object {
                  "Ref": "DeaUiStackartifactbucketFFC87A37",
                },
                "/index.html",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseModels": Object {
              "application/json": "Empty",
            },
            "ResponseParameters": Object {
              "method.response.header.Content-Length": true,
              "method.response.header.Content-Security-Policy": true,
              "method.response.header.Content-Type": true,
              "method.response.header.Strict-Transport-Security": true,
              "method.response.header.X-Content-Type-Options": true,
              "method.response.header.X-Frame-Options": true,
              "method.response.header.X-XSS-Protection": true,
            },
            "StatusCode": "200",
          },
        ],
        "RequestParameters": Object {
          "method.request.header.Accept": true,
          "method.request.header.Content-Type": true,
          "method.request.path.proxy": true,
        },
        "ResourceId": Object {
          "Ref": "testApiui1F041DD2",
        },
        "RestApiId": Object {
          "Ref": "testApiD6ECAB50",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testApiuiauthtestC9DEEA73": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testApiui1F041DD2",
        },
        "PathPart": "auth-test",
        "RestApiId": Object {
          "Ref": "testApiD6ECAB50",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testApiuiauthtestGET880E0E8F": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "ContentHandling": "CONVERT_TO_TEXT",
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "DeaUiStackrole3432A944",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "GET",
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Content-Security-Policy": "[HASH REMOVED]",
                "method.response.header.Content-Type": "integration.response.header.Content-Type",
                "method.response.header.Strict-Transport-Security": "'max-age=31540000; includeSubdomains'",
                "method.response.header.X-Content-Type-Options": "'nosniff'",
                "method.response.header.X-Frame-Options": "'DENY'",
                "method.response.header.X-XSS-Protection": "'1; mode=block'",
              },
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "RequestParameters": Object {
            "integration.request.header.Accept": "method.request.header.Accept",
            "integration.request.header.Content-Type": "method.request.header.Content-Type",
            "integration.request.path.proxy": "method.request.path.proxy",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":s3:path/",
                Object {
                  "Ref": "DeaUiStackartifactbucketFFC87A37",
                },
                "/auth-test.html",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseModels": Object {
              "application/json": "Empty",
            },
            "ResponseParameters": Object {
              "method.response.header.Content-Length": true,
              "method.response.header.Content-Security-Policy": true,
              "method.response.header.Content-Type": true,
              "method.response.header.Strict-Transport-Security": true,
              "method.response.header.X-Content-Type-Options": true,
              "method.response.header.X-Frame-Options": true,
              "method.response.header.X-XSS-Protection": true,
            },
            "StatusCode": "200",
          },
        ],
        "RequestParameters": Object {
          "method.request.header.Accept": true,
          "method.request.header.Content-Type": true,
          "method.request.path.proxy": true,
        },
        "ResourceId": Object {
          "Ref": "testApiuiauthtestC9DEEA73",
        },
        "RestApiId": Object {
          "Ref": "testApiD6ECAB50",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testApiuicasedetail80E12772": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testApiui1F041DD2",
        },
        "PathPart": "case-detail",
        "RestApiId": Object {
          "Ref": "testApiD6ECAB50",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testApiuicasedetailGET6D4018AE": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "ContentHandling": "CONVERT_TO_TEXT",
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "DeaUiStackrole3432A944",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "GET",
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Content-Security-Policy": "[HASH REMOVED]",
                "method.response.header.Content-Type": "integration.response.header.Content-Type",
                "method.response.header.Strict-Transport-Security": "'max-age=31540000; includeSubdomains'",
                "method.response.header.X-Content-Type-Options": "'nosniff'",
                "method.response.header.X-Frame-Options": "'DENY'",
                "method.response.header.X-XSS-Protection": "'1; mode=block'",
              },
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "RequestParameters": Object {
            "integration.request.header.Accept": "method.request.header.Accept",
            "integration.request.header.Content-Type": "method.request.header.Content-Type",
            "integration.request.path.proxy": "method.request.path.proxy",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":s3:path/",
                Object {
                  "Ref": "DeaUiStackartifactbucketFFC87A37",
                },
                "/case-detail.html",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseModels": Object {
              "application/json": "Empty",
            },
            "ResponseParameters": Object {
              "method.response.header.Content-Length": true,
              "method.response.header.Content-Security-Policy": true,
              "method.response.header.Content-Type": true,
              "method.response.header.Strict-Transport-Security": true,
              "method.response.header.X-Content-Type-Options": true,
              "method.response.header.X-Frame-Options": true,
              "method.response.header.X-XSS-Protection": true,
            },
            "StatusCode": "200",
          },
        ],
        "RequestParameters": Object {
          "method.request.header.Accept": true,
          "method.request.header.Content-Type": true,
          "method.request.path.proxy": true,
        },
        "ResourceId": Object {
          "Ref": "testApiuicasedetail80E12772",
        },
        "RestApiId": Object {
          "Ref": "testApiD6ECAB50",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testApiuicreatecasesA8526372": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testApiui1F041DD2",
        },
        "PathPart": "create-cases",
        "RestApiId": Object {
          "Ref": "testApiD6ECAB50",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testApiuicreatecasesGET786EA30D": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "ContentHandling": "CONVERT_TO_TEXT",
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "DeaUiStackrole3432A944",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "GET",
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Content-Security-Policy": "[HASH REMOVED]",
                "method.response.header.Content-Type": "integration.response.header.Content-Type",
                "method.response.header.Strict-Transport-Security": "'max-age=31540000; includeSubdomains'",
                "method.response.header.X-Content-Type-Options": "'nosniff'",
                "method.response.header.X-Frame-Options": "'DENY'",
                "method.response.header.X-XSS-Protection": "'1; mode=block'",
              },
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "RequestParameters": Object {
            "integration.request.header.Accept": "method.request.header.Accept",
            "integration.request.header.Content-Type": "method.request.header.Content-Type",
            "integration.request.path.proxy": "method.request.path.proxy",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":s3:path/",
                Object {
                  "Ref": "DeaUiStackartifactbucketFFC87A37",
                },
                "/create-cases.html",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseModels": Object {
              "application/json": "Empty",
            },
            "ResponseParameters": Object {
              "method.response.header.Content-Length": true,
              "method.response.header.Content-Security-Policy": true,
              "method.response.header.Content-Type": true,
              "method.response.header.Strict-Transport-Security": true,
              "method.response.header.X-Content-Type-Options": true,
              "method.response.header.X-Frame-Options": true,
              "method.response.header.X-XSS-Protection": true,
            },
            "StatusCode": "200",
          },
        ],
        "RequestParameters": Object {
          "method.request.header.Accept": true,
          "method.request.header.Content-Type": true,
          "method.request.path.proxy": true,
        },
        "ResourceId": Object {
          "Ref": "testApiuicreatecasesA8526372",
        },
        "RestApiId": Object {
          "Ref": "testApiD6ECAB50",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testApiuilogin54AC376B": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testApiui1F041DD2",
        },
        "PathPart": "login",
        "RestApiId": Object {
          "Ref": "testApiD6ECAB50",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testApiuiloginGET86824034": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "ContentHandling": "CONVERT_TO_TEXT",
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "DeaUiStackrole3432A944",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "GET",
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Content-Security-Policy": "[HASH REMOVED]",
                "method.response.header.Content-Type": "integration.response.header.Content-Type",
                "method.response.header.Strict-Transport-Security": "'max-age=31540000; includeSubdomains'",
                "method.response.header.X-Content-Type-Options": "'nosniff'",
                "method.response.header.X-Frame-Options": "'DENY'",
                "method.response.header.X-XSS-Protection": "'1; mode=block'",
              },
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "RequestParameters": Object {
            "integration.request.header.Accept": "method.request.header.Accept",
            "integration.request.header.Content-Type": "method.request.header.Content-Type",
            "integration.request.path.proxy": "method.request.path.proxy",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":s3:path/",
                Object {
                  "Ref": "DeaUiStackartifactbucketFFC87A37",
                },
                "/login.html",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseModels": Object {
              "application/json": "Empty",
            },
            "ResponseParameters": Object {
              "method.response.header.Content-Length": true,
              "method.response.header.Content-Security-Policy": true,
              "method.response.header.Content-Type": true,
              "method.response.header.Strict-Transport-Security": true,
              "method.response.header.X-Content-Type-Options": true,
              "method.response.header.X-Frame-Options": true,
              "method.response.header.X-XSS-Protection": true,
            },
            "StatusCode": "200",
          },
        ],
        "RequestParameters": Object {
          "method.request.header.Accept": true,
          "method.request.header.Content-Type": true,
          "method.request.path.proxy": true,
        },
        "ResourceId": Object {
          "Ref": "testApiuilogin54AC376B",
        },
        "RestApiId": Object {
          "Ref": "testApiD6ECAB50",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testApiuiproxyDDF9EC1E": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testApiui1F041DD2",
        },
        "PathPart": "{proxy+}",
        "RestApiId": Object {
          "Ref": "testApiD6ECAB50",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testApiuiproxyGET92230E90": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "ContentHandling": "CONVERT_TO_TEXT",
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "DeaUiStackrole3432A944",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "GET",
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Content-Security-Policy": "[HASH REMOVED]",
                "method.response.header.Content-Type": "integration.response.header.Content-Type",
                "method.response.header.Strict-Transport-Security": "'max-age=31540000; includeSubdomains'",
                "method.response.header.X-Content-Type-Options": "'nosniff'",
                "method.response.header.X-Frame-Options": "'DENY'",
                "method.response.header.X-XSS-Protection": "'1; mode=block'",
              },
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "RequestParameters": Object {
            "integration.request.header.Accept": "method.request.header.Accept",
            "integration.request.header.Content-Type": "method.request.header.Content-Type",
            "integration.request.path.proxy": "method.request.path.proxy",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":s3:path/",
                Object {
                  "Ref": "DeaUiStackartifactbucketFFC87A37",
                },
                "/{proxy}",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseModels": Object {
              "application/json": "Empty",
            },
            "ResponseParameters": Object {
              "method.response.header.Content-Length": true,
              "method.response.header.Content-Security-Policy": true,
              "method.response.header.Content-Type": true,
              "method.response.header.Strict-Transport-Security": true,
              "method.response.header.X-Content-Type-Options": true,
              "method.response.header.X-Frame-Options": true,
              "method.response.header.X-XSS-Protection": true,
            },
            "StatusCode": "200",
          },
        ],
        "RequestParameters": Object {
          "method.request.header.Accept": true,
          "method.request.header.Content-Type": true,
          "method.request.path.proxy": true,
        },
        "ResourceId": Object {
          "Ref": "testApiuiproxyDDF9EC1E",
        },
        "RestApiId": Object {
          "Ref": "testApiD6ECAB50",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testApiuiuploadfilesD762C518": Object {
      "Properties": Object {
        "ParentId": Object {
          "Ref": "testApiui1F041DD2",
        },
        "PathPart": "upload-files",
        "RestApiId": Object {
          "Ref": "testApiD6ECAB50",
        },
      },
      "Type": "AWS::ApiGateway::Resource",
    },
    "testApiuiuploadfilesGET6DFAC286": Object {
      "Properties": Object {
        "AuthorizationType": "NONE",
        "HttpMethod": "GET",
        "Integration": Object {
          "ContentHandling": "CONVERT_TO_TEXT",
          "Credentials": Object {
            "Fn::GetAtt": Array [
              "DeaUiStackrole3432A944",
              "Arn",
            ],
          },
          "IntegrationHttpMethod": "GET",
          "IntegrationResponses": Array [
            Object {
              "ResponseParameters": Object {
                "method.response.header.Content-Security-Policy": "[HASH REMOVED]",
                "method.response.header.Content-Type": "integration.response.header.Content-Type",
                "method.response.header.Strict-Transport-Security": "'max-age=31540000; includeSubdomains'",
                "method.response.header.X-Content-Type-Options": "'nosniff'",
                "method.response.header.X-Frame-Options": "'DENY'",
                "method.response.header.X-XSS-Protection": "'1; mode=block'",
              },
              "StatusCode": "200",
            },
          ],
          "PassthroughBehavior": "WHEN_NO_TEMPLATES",
          "RequestParameters": Object {
            "integration.request.header.Accept": "method.request.header.Accept",
            "integration.request.header.Content-Type": "method.request.header.Content-Type",
            "integration.request.path.proxy": "method.request.path.proxy",
          },
          "Type": "AWS",
          "Uri": Object {
            "Fn::Join": Array [
              "",
              Array [
                "arn:",
                Object {
                  "Ref": "AWS::Partition",
                },
                ":apigateway:",
                Object {
                  "Ref": "AWS::Region",
                },
                ":s3:path/",
                Object {
                  "Ref": "DeaUiStackartifactbucketFFC87A37",
                },
                "/upload-files.html",
              ],
            ],
          },
        },
        "MethodResponses": Array [
          Object {
            "ResponseModels": Object {
              "application/json": "Empty",
            },
            "ResponseParameters": Object {
              "method.response.header.Content-Length": true,
              "method.response.header.Content-Security-Policy": true,
              "method.response.header.Content-Type": true,
              "method.response.header.Strict-Transport-Security": true,
              "method.response.header.X-Content-Type-Options": true,
              "method.response.header.X-Frame-Options": true,
              "method.response.header.X-XSS-Protection": true,
            },
            "StatusCode": "200",
          },
        ],
        "RequestParameters": Object {
          "method.request.header.Accept": true,
          "method.request.header.Content-Type": true,
          "method.request.path.proxy": true,
        },
        "ResourceId": Object {
          "Ref": "testApiuiuploadfilesD762C518",
        },
        "RestApiId": Object {
          "Ref": "testApiD6ECAB50",
        },
      },
      "Type": "AWS::ApiGateway::Method",
    },
    "testKey1CDDDD5E": Object {
      "DeletionPolicy": "Delete",
      "Properties": Object {
        "EnableKeyRotation": true,
        "KeyPolicy": Object {
          "Statement": Array [
            Object {
              "Action": "kms:*",
              "Effect": "Allow",
              "Principal": Object {
                "AWS": Object {
                  "Fn::Join": Array [
                    "",
                    Array [
                      "arn:",
                      Object {
                        "Ref": "AWS::Partition",
                      },
                      ":iam::",
                      Object {
                        "Ref": "AWS::AccountId",
                      },
                      ":root",
                    ],
                  ],
                },
              },
              "Resource": "*",
            },
          ],
          "Version": "2012-10-17",
        },
        "PendingWindowInDays": 7,
      },
      "Type": "AWS::KMS::Key",
      "UpdateReplacePolicy": "Delete",
    },
    "testS3AccessLogBucketF0DCA384": Object {
      "DeletionPolicy": "Retain",
      "Properties": Object {
        "AccessControl": "LogDeliveryWrite",
        "OwnershipControls": Object {
          "Rules": Array [
            Object {
              "ObjectOwnership": "BucketOwnerPreferred",
            },
          ],
        },
        "PublicAccessBlockConfiguration": Object {
          "BlockPublicAcls": true,
          "BlockPublicPolicy": true,
          "IgnorePublicAcls": true,
          "RestrictPublicBuckets": true,
        },
      },
      "Type": "AWS::S3::Bucket",
      "UpdateReplacePolicy": "Retain",
    },
  },
  "Rules": Object {
    "CheckBootstrapVersion": Object {
      "Assertions": Array [
        Object {
          "Assert": Object {
            "Fn::Not": Array [
              Object {
                "Fn::Contains": Array [
                  Array [
                    "1",
                    "2",
                    "3",
                    "4",
                    "5",
                  ],
                  Object {
                    "Ref": "BootstrapVersion",
                  },
                ],
              },
            ],
          },
          "AssertDescription": "CDK bootstrap stack version 6 required. Please run 'cdk bootstrap' with a recent version of the CDK CLI.",
        },
      ],
    },
  },
}
`;
