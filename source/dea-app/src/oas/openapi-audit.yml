openapi: '3.0.0'
info:
  version: 1.0.5
  title: DEA Audit API
paths:
  /users/{userId}/audit/{auditId}/csv:
    get:
      summary: Returns audit log for a User
      operationId: getUserAudit
      tags:
        - elevated
      parameters:
        - name: userId
          in: path
          description: User ID to return audit log entries for
          required: true
          schema:
            type: string
        - name: auditId
          in: path
          description: Audit log ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Audit log CSV result and status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditResult'
  /system/audit/{auditId}/csv:
    get:
      summary: Returns audit log for system
      operationId: getSystemAudit
      tags:
        - elevated
      parameters:
        - name: auditId
          in: path
          description: Audit log ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Audit log CSV result and status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditResult'
  /cases/{caseId}/audit:
    post:
      summary: Generates audit log for case ID
      operationId: requestCaseAudit
      tags:
        - audit
      parameters:
        - name: caseId
          in: path
          description: Case ID to generate audit log for
          required: true
          schema:
            type: string
        - name: from
          in: query
          required: true
          schema:
            type: number
        - name: to
          in: query
          required: true
          schema:
            type: number
      responses:
        '200':
          description: Audit Query ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  auditId:
                    type: string
  /users/{userId}/audit:
    post:
      summary: Generates audit log for User
      operationId: requestUserAudit
      tags:
        - elevated
      parameters:
        - name: userId
          in: path
          description: User ID to generate audit log for
          required: true
          schema:
            type: string
        - name: from
          in: query
          required: true
          schema:
            type: number
        - name: to
          in: query
          required: true
          schema:
            type: number
      responses:
        '200':
          description: Audit Query ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  auditId:
                    type: string
  /system/audit:
    post:
      summary: Generates audit log for System
      operationId: requestSystemAudit
      tags:
        - elevated
      parameters:
        - name: from
          in: query
          required: true
          schema:
            type: number
        - name: to
          in: query
          required: true
          schema:
            type: number
      responses:
        '200':
          description: Audit Query ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  auditId:
                    type: string
  /cases/{caseId}/audit/{auditId}/csv:
    get:
      summary: Returns audit log by audit log ID and case ID
      operationId: getCaseAudit
      tags:
        - audit
      parameters:
        - name: caseId
          in: path
          description: Case ID to return audit log for
          required: true
          schema:
            type: string
        - name: auditId
          in: path
          description: Audit log ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Audit log CSV result and status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditResult'
  /cases/{caseId}/files/{fileId}/audit:
    post:
      summary: Generates audit log for a file
      operationId: requestCaseFileAudit
      tags:
        - audit
      parameters:
        - name: caseId
          in: path
          description: Case ID to generate audit log for
          required: true
          schema:
            type: string
        - name: fileId
          in: path
          description: File ID to generate audit log for
          required: true
          schema:
            type: string
        - name: from
          in: query
          required: true
          schema:
            type: number
        - name: to
          in: query
          required: true
          schema:
            type: number
      responses:
        '200':
          description: Audit Query ID
          content:
            application/json:
              schema:
                type: object
                properties:
                  auditId:
                    type: string
  /cases/{caseId}/files/{fileId}/audit/{auditId}/csv:
    get:
      summary: Returns audit log for a specific file by file ID, case ID, and audit log ID
      operationId: getCaseFileAudit
      tags:
        - audit
      parameters:
        - name: caseId
          in: path
          description: Case ID to return audit log entries for
          required: true
          schema:
            type: string
        - name: fileId
          in: path
          description: File ID to return audit log entries for
          required: true
          schema:
            type: string
        - name: auditId
          in: path
          description: Audit log ID
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Audit log CSV result and status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuditResult'

components:
  schemas:
    AuditResult:
      type: object
      properties:
        status:
          type: string
          items:
            $ref: '#/components/schemas/QueryStatus'
        csvFormattedData:
          type: string

    QueryStatus:
      type: string
      enum: [Cancelled, Complete, Failed, Running, Scheduled, Timeout, Unknown]
